"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[52538],{83166:(e,n,t)=>{var i=t(64836);n.Z=void 0;var a=i(t(64938)),o=t(85893),r=(0,a.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");n.Z=r},77077:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>m,default:()=>C,frontMatter:()=>h,metadata:()=>f,toc:()=>b});var i=t(3905),a=t(49044),o=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,c=(e,n)=>{for(var t in n||(n={}))p.call(n,t)&&u(e,t,n[t]);if(s)for(var t of s(n))d.call(n,t)&&u(e,t,n[t]);return e};const h={id:"mosquitto-ldap-auth",title:"LDAP Authentication",sidebar_label:"LDAP Authentication"},m=void 0,f={unversionedId:"broker/Mosquitto Manual/Auth/mosquitto-ldap-auth",id:"version-2.9/broker/Mosquitto Manual/Auth/mosquitto-ldap-auth",title:"LDAP Authentication",description:"Introduction",source:"@site/mosquitto_versioned_docs/version-2.9/broker/Mosquitto Manual/Auth/LDAP-auth.md",sourceDirName:"broker/Mosquitto Manual/Auth",slug:"/broker/Mosquitto Manual/Auth/mosquitto-ldap-auth",permalink:"/mosquitto/broker/Mosquitto Manual/Auth/mosquitto-ldap-auth",draft:!1,tags:[],version:"2.9",frontMatter:{id:"mosquitto-ldap-auth",title:"LDAP Authentication",sidebar_label:"LDAP Authentication"},sidebar:"someSidebar",previous:{title:"JWT Authentication",permalink:"/mosquitto/broker/Mosquitto Manual/Auth/mosquitto-jwt-auth"},next:{title:"HTTP Bridge Plugin",permalink:"/mosquitto/broker/Mosquitto Manual/Bridges/mosquitto-http-bridge"}},k={},b=[{value:"Introduction",id:"introduction",level:2},{value:"Plugin Activation",id:"plugin-activation",level:2},{value:"Config File Format",id:"config-file-format",level:2},{value:"Configuration example",id:"configuration-example",level:2},{value:"Error handling",id:"error-handling",level:2},{value:"Notable behavior",id:"notable-behavior",level:2},{value:"Limitations",id:"limitations",level:2},{value:"JSON Schema",id:"json-schema",level:2}],N={toc:b};function C(e){var n,t=e,{components:o}=t,u=((e,n)=>{var t={};for(var i in e)p.call(e,i)&&n.indexOf(i)<0&&(t[i]=e[i]);if(null!=e&&s)for(var i of s(e))n.indexOf(i)<0&&d.call(e,i)&&(t[i]=e[i]);return t})(t,["components"]);return(0,i.kt)("wrapper",(n=c(c({},N),u),r(n,l({components:o,mdxType:"MDXLayout"}))),(0,i.kt)(a.Z,{mdxType:"PremiumFeature"}),(0,i.kt)("h2",c({},{id:"introduction"}),"Introduction"),(0,i.kt)("p",null,"The LDAP Authentication plugin can be used to authenticate MQTT clients through an LDAP server."),(0,i.kt)("p",null,"To use the plugin, a configuration file must be specified (see ",(0,i.kt)("a",c({parentName:"p"},{href:"#configuration-example"}),"example configuration")," for an example of such a file and ",(0,i.kt)("a",c({parentName:"p"},{href:"#config-file-format"}),"config file format section")," for the overview of all possible configuration parameters)."),(0,i.kt)("p",null,"The plugin uses a separate account to connect (bind) to the LDAP server and checks username and password provided for each MQTT client authentication request against it."),(0,i.kt)("h2",c({},{id:"plugin-activation"}),"Plugin Activation"),(0,i.kt)("p",null,"To enable the LDAP Auth plugin on the broker, add the following to the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{}),"plugin /usr/lib/cedalo_ldap_auth.so\n\npersistence_location /mosquitto/data\n")),(0,i.kt)("p",null,"This is an example configuration snippet applicable to the docker container setup. For installations not running in a container the above configuration needs to be adjusted accordingly (namely the location of ",(0,i.kt)("inlineCode",{parentName:"p"},"cedalo_ldap_auth.so")," dynamic library and ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location")," may differ)."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location")," is used as a search base path for the plugin's config file."),(0,i.kt)("p",null,"In addition to modifying ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),", ensure that you have the appropriate license to use the plugin."),(0,i.kt)("h2",c({},{id:"config-file-format"}),"Config File Format"),(0,i.kt)("p",null,"The configuration is stored in a single JSON file (called ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap.json")," by default) located inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location"),", which is defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),". To use a different config file name, specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin_opt_config_file")," option with the custom file name under the LDAP plugin section in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),"."),(0,i.kt)("p",null,"The file represents a configuration object consisting of a connection object, which defines a DN (Distinguished Name) and a password to bind to the LDAP server and perform user searches. It also includes additional options that specify how to locate the user within LDAP."),(0,i.kt)("p",null,"The fields of the configuration object are described below. To see the entire structure of the configuration file, take a look at the ",(0,i.kt)("a",c({parentName:"p"},{href:"#json-schema"}),"JSON schema")," at the bottom of this page. To see an example of the config file refer to the ",(0,i.kt)("a",c({parentName:"p"},{href:"#configuration-example"}),"configuration example section"),"."),(0,i.kt)("p",null,"The following fields of the config are mandatory:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connection")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection"),"): ",(0,i.kt)("br",null)," Connection information to bind administrative user to the LDAP server in order to further perform search operations for authenticating users (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uri")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.uri"),"): ",(0,i.kt)("br",null)," URI of the LDAP server including protocol, port, and path (if any). For instance, ",(0,i.kt)("inlineCode",{parentName:"li"},"ldap://ldap.example.com:389"),". (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"credentials")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.credentials"),"): ",(0,i.kt)("br",null)," Credentials to use when binding administrative user to the LDAP server (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bindDn")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.bindDn"),"): ",(0,i.kt)("br",null)," Distinguished name to be used when binding administrative user to LDAP (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bindPassword")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.credentials.bindPassword"),"): ",(0,i.kt)("br",null)," Password to be used when binding administrative user to LDAP. If this field is a string then this string will be used as the password. However, if password is stored an environment variable or a file then this field must be an object with one of the properties below (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plain")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.credentials.bindPassword.plain"),"): ",(0,i.kt)("br",null)," Plaintext passoword for binding to LDAP (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.credentials.bindPassword.env"),"): ",(0,i.kt)("br",null)," Name of the environment variable where the password for binding to LDAP is stored (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filePath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.credentials.bindPassword.filePath"),"): ",(0,i.kt)("br",null)," Full path to the file where the password for binding to LDAP is stored (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."))))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options"),"): ",(0,i.kt)("br",null)," Options for performing LDAP operations after binding (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"userSearch")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch"),"): ",(0,i.kt)("br",null)," Options related to searching for the user in LDAP directory tree. Whenever a client is authenticating to Mosquitto their username is used to search the LDAP directory tree and find a corresponding user DN (Distingusished Name) according to the options specified here. If the DN is found, the plugin then uses this DN and the provided password to bind the authenticating client to LDAP and authenticate it to the broker (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"baseDn")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.baseDn"),"): ",(0,i.kt)("br",null)," Base DN from which to perform the search for users (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),").")))))),(0,i.kt)("p",null,"Optional fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.version"),"): ",(0,i.kt)("br",null)," Version of the configuration file. Reserved for future use (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connection")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ssl")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl"),"): ",(0,i.kt)("br",null)," SSL options for ",(0,i.kt)("inlineCode",{parentName:"li"},"ldaps")," protocol. SSL must also be supported by the LDAP server. Note that the typical port for the LDAP secure connection is ",(0,i.kt)("inlineCode",{parentName:"li"},"636"),", so ",(0,i.kt)("inlineCode",{parentName:"li"},"uri")," might also need to be changed when using SSL (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"None"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ca")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.ca"),"): ",(0,i.kt)("br",null),' Plaintext custom certificate of the certificate authority that issued the LDAP server\'s certificate in PEM format, including the "begin" and "end" PEM headers. The newlines separating the PEM headers can be represented with ',(0,i.kt)("inlineCode",{parentName:"li"},"\\n"),". (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cert")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.cert"),"): ",(0,i.kt)("br",null)," Plaintext certificate of the client in PEM format (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"key")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.key"),"): ",(0,i.kt)("br",null)," Plaintext private key of the client in PEM format (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"caPath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.caPath"),"): ",(0,i.kt)("br",null)," Same as ",(0,i.kt)("inlineCode",{parentName:"li"},"ca")," but represents a path to the certificate file on the file system (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"certPath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.certPath"),"): ",(0,i.kt)("br",null)," Same as ",(0,i.kt)("inlineCode",{parentName:"li"},"cert")," but represents a path to the certificate file on the file system (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"keyPath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.keyPath"),"): ",(0,i.kt)("br",null)," Same as ",(0,i.kt)("inlineCode",{parentName:"li"},"key")," but represents a path to the private key file on the file system (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rejectUnauthorized")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.ssl.rejectUnauthorized"),"): ",(0,i.kt)("br",null)," Whether to reject connections to LDAP servers that provide TLS certificates not trusted by the client. In this case client is the broker (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lazyConnect")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.lazyConnect"),"): ",(0,i.kt)("br",null)," Whether to skip checking for LDAP server availability during Mosquitto startup. If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),", the plugin will fail if the LDAP server is not reachanble at startup. Note that this check is performed once on startup and helps to troubleshoot connectivity issues. With this option set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", the plugin will not attempt to reach the LDAP until an authorization request is received from an MQTT client (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutMs")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.connection.timeoutMs"),"): ",(0,i.kt)("br",null)," Amount of time in milliseconds to wait before timing out when binding the administrative user to the LDAP server. ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," indicates no timeout. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"0"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"userSearch")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scope")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch.scope"),"): ",(0,i.kt)("br",null)," Scope of the user search request. User search is performed on the LDAP server. ",(0,i.kt)("inlineCode",{parentName:"li"},"base")," - search only the search base entry. ",(0,i.kt)("inlineCode",{parentName:"li"},"one")," - search only the immediate children of the search base entry. ",(0,i.kt)("inlineCode",{parentName:"li"},"sub")," - search the search base entry as well as all its subordinates to any depth. ",(0,i.kt)("inlineCode",{parentName:"li"},"children")," - don't search the search baes entry but serach its subordinates to any depth. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", one of: ",(0,i.kt)("inlineCode",{parentName:"li"},"sub"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"base"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"children"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"one"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"sub"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filter")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch.filter"),"): ",(0,i.kt)("br",null)," The filter of the user search request as specified in RFC4515. To specify username of the MQTT client put ",(0,i.kt)("inlineCode",{parentName:"li"},"%u")," into the filter string. For example: ",(0,i.kt)("inlineCode",{parentName:"li"},"(cn=%u)")," where ",(0,i.kt)("inlineCode",{parentName:"li"},"%u")," will be replaced by the username provided by the authenticating MQTT client (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"(uid=%u)"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeLimit")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch.timeLimit"),"): ",(0,i.kt)("br",null)," The maximum number of seconds that user search may take. It sets the time limit on the LDAP server itself for processing the request. This may prevent straining the LDAP server. This is different from ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.timeoutMs")," (described below), which sets the timeout on the client (broker). (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"10"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dereferenceAliases")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch.dereferenceAliases"),"): ",(0,i.kt)("br",null)," LDAP alias dereferencing policy as specified in 4.5.1.3 of RFC4511. ",(0,i.kt)("inlineCode",{parentName:"li"},"never")," - don't dereference aliases. ",(0,i.kt)("inlineCode",{parentName:"li"},"always")," - dereference aliases both in searching and in locating the base object of the search. ",(0,i.kt)("inlineCode",{parentName:"li"},"search")," - dereference aliases only when searching subordinates. ",(0,i.kt)("inlineCode",{parentName:"li"},"fiind")," - dereference aliases only in locating the base object of the search. The ",(0,i.kt)("inlineCode",{parentName:"li"},"always")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," policies are applicable when aliases may be present in the base object (",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.userSearch.baseDn"),"). Conversly, if aliases are present in subordinates of the base object, use ",(0,i.kt)("inlineCode",{parentName:"li"},"always")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"search"),". (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", one of: ",(0,i.kt)("inlineCode",{parentName:"li"},"never"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"always"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"search"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"find"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"never"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutMs")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.timeoutMs"),"): ",(0,i.kt)("br",null)," Amount of time in milliseconds to wait before timing out when performing operation such as search on the LDAP server. ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," indicates no timeout. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"0"),").")))),(0,i.kt)("p",null,"You can also find all the available configuration options in the form of a JSON schema ",(0,i.kt)("a",c({parentName:"p"},{href:"#json-schema"}),"here")),(0,i.kt)("h2",c({},{id:"configuration-example"}),"Configuration example"),(0,i.kt)("p",null,"An example of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap.json")," is shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "version": 1,\n    "connection": {\n        "uri": "ldap://ldap.example.com:389",\n        "ssl": {\n            "rejectUnauthorized": true\n        },\n        "credentials": {\n            "bindDn": "cn=admin,dc=example,dc=com",\n            "bindPassword": "password"\n        },\n        "timeoutMs": 10000,\n        "lazyConnect": false,\n    },\n    "options": {\n        "userSearch": {\n            "baseDn": "ou=Users,dc=example,dc=com",\n            "filter": "(uid=%u)",\n            "scope": "sub",\n            "derefAliases": "never",\n            "timeLimit": 10\n        },\n        "timeoutMs": 15000,\n    }\n}\n')),(0,i.kt)("p",null,"As per the example config above, during the broker startup the LDAP Authentication plugin will test reachability of the LDAP server at ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap://ldap.example.com:389")," by performing a dummy TCP connection. If the server is unreachable, the plugin will fail and output an error. Otherwise, it will load normally and wait for authentication request from the MQTT cleints. If you don't want the plugin to be able to fail in case LDAP is unreachable on startup, then change the ",(0,i.kt)("inlineCode",{parentName:"p"},"lazyConnect")," setting to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"After receiving an authentication request form an MQTT client, the plugin will bind to the LDAP server using the ",(0,i.kt)("inlineCode",{parentName:"p"},"bindDn")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"bindPassword")," options and a connect timeout of 10 seconds (",(0,i.kt)("inlineCode",{parentName:"p"},"connection.timeoutMs"),"). It will use a username provided by the MQTT client and the settings defined under ",(0,i.kt)("inlineCode",{parentName:"p"},"userSearch")," to perform a user search request on the LDAP server. It will traverse only subordinates of ",(0,i.kt)("inlineCode",{parentName:"p"},"ou=Users,dc=example,dc=com")," base object to any depth (as specified by ",(0,i.kt)("inlineCode",{parentName:"p"},"sub")," value) and apply ",(0,i.kt)("inlineCode",{parentName:"p"},"(uid=%u)")," filter. It will not dereference any aliases (",(0,i.kt)("inlineCode",{parentName:"p"},"never"),") and terminate the LDAP query in case it takes more than 10 seconds (as defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"timeLimit"),"). If for some reason the request hangs and response time exceeds 15 seconds (",(0,i.kt)("inlineCode",{parentName:"p"},"options.timeoutMs"),"), the connection with the LDAP server will be forecefully terminated due to a timeout. In case of a timeout the authentication request of the client will be denied. On the other hand, if the user search request succeeds, the DN of the first result will be returned by the LDAP server and the broker will try binding to the server again using the found DN and the password provided by the MQTT client during the initial authentication request. In case this binding succeeds, user is authenticated to the broker."),(0,i.kt)("p",null,"Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"bindPassword")," entry may also be an object containing one of three possible entries: ",(0,i.kt)("inlineCode",{parentName:"p"},"plain"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"env"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"filePath"),". Below is an example with all three possible entries. However, in practice only a single one must be specified. Also note that ",(0,i.kt)("inlineCode",{parentName:"p"},"plain")," entry is the same as just specifying password for ",(0,i.kt)("inlineCode",{parentName:"p"},"bindPassword")," as a string."),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    ...\n            "bindPassword": {\n                "plain": "<secret>",\n                "env": "<ENV_VAR_NAME>",\n                "filePath": "<file_path_to_client_id_if_no_env_given>"\n            }\n    ...\n}\n')),(0,i.kt)("p",null,"Below you can see an example of SSL options with certificates and keys defined in plaintext using ",(0,i.kt)("inlineCode",{parentName:"p"},"ca"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"key")," options:"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    ...\n                "ssl": {\n                    "rejectUnauthorized": true,\n                    "ca": "-----BEGIN CERTIFICATE-----\\nMIIDqzCCApOgAwIBAgIUOcwjkkTUpeRgd+LiDodH...3VlVvDmCx67Scv4bsZnA==\\n-----END CERTIFICATE-----",\n                    "cert": "-----BEGIN CERTIFICATE-----\\nMIIDTjCCAjYCFA+PcTt/ouPUq13W1gNxcZJ...9OM+OMFhw==\\n-----END CERTIFICATE-----",\n                    "key": "-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhki...yWwtpUqG/7vOGOb2aA=\\n-----END PRIVATE KEY-----"\n                },\n    ...\n}\n')),(0,i.kt)("p",null,"You can alternatively use the file paths to certificate and key files stored on disk with ",(0,i.kt)("inlineCode",{parentName:"p"},"caPath"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"certPath"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"keyPath")," options."),(0,i.kt)("h2",c({},{id:"error-handling"}),"Error handling"),(0,i.kt)("p",null,"Any configuration or license errors will prevent the plugin from loading, and corresponding error messages will be logged."),(0,i.kt)("p",null,"If recoverable errors occur during the operation of the plugin, it will generate respective error messages prefixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"ERR:")," in the logs."),(0,i.kt)("h2",c({},{id:"notable-behavior"}),"Notable behavior"),(0,i.kt)("p",null,"The plugin enforces strict DN parsing as defined in LDAP standards (RFC 4514 and RFC 4512). DNs format must comply to these standards, for instance, relative DNs (RDNs) must be represented as key value pairs ",(0,i.kt)("inlineCode",{parentName:"p"},"key=value"),". Multiple RDNs must be separated by commas and special characters in an RDN must be escaped with ",(0,i.kt)("inlineCode",{parentName:"p"},"\\"),"."),(0,i.kt)("h2",c({},{id:"limitations"}),"Limitations"),(0,i.kt)("p",null,"LDAP Authentication plugin currently supports authentication only. ACLs are not supported and should be specified using other means, such as an ACL file."),(0,i.kt)("h2",c({},{id:"json-schema"}),"JSON Schema"),(0,i.kt)("p",null,"Schema for all possible parameters for the ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap.json")," config file:"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "type": "object",\n    "properties": {\n        "version": {\n            "description": "Version of the config file",\n            "type": "number",\n            "default": "1",\n        },\n        "connection": {\n            "type": "object",\n            "description": "Options needed to bind to LDAP server as an admin user in order to search for authenticating users",\n            "properties": {\n                "lazyConnect": {\n                    "description": "Whether to try to check LDAP availablity on startup and fail if it is unreachable",\n                    "type": "boolean",\n                    "nullable": true,\n                    "default": false\n                },\n                "uri": {\n                    "description": "URI of the bind server including port, protocol, and path. For example: \\"ldap://ldap.example.com:389\\"",\n                    "type": "string",\n                    "nullable": false\n                },\n                "ssl": {\n                    "description": "SSL configuration for the connection in case ldaps protocol is used",\n                    "type": "object",\n                    "nullable": true,\n                    "properties": {\n                        "ca": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Plaintext CA certificate to use for the connection",\n                        },\n                        "key": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Plaintext client\'s private key to use for the connection",\n                        },\n                        "cert": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Plaintext client\'s certificate to use for the connection",\n                        },\n                        "caPath": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Full path to the CA certificate file",\n                        },\n                        "keyPath": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Full path to the client\'s private key file",\n                        },\n                        "certPath": {\n                            "type": "string",\n                            "nullable": true,\n                            "description": "Full path to the client\'s certificate file",\n                        },\n                        "rejectUnauthorized": {\n                            "type": "boolean",\n                            "nullable": true,\n                            "description": "Whether to reject unauthorized server connections or not",\n                        }\n                    }\n                },\n                "credentials": {\n                    "description": "Credentials to bind admin user to LDAP server",\n                    "type": "object",\n                    "properties": {\n                        "bindDn": {\n                            "description": "Distinguished name to use for binding to LDAP server",\n                            "type": "string"\n                        },\n                        "bindPassword": {\n                            "description": "Password to use for binding to LDAP server",\n                            "oneOf": [\n                                {\n                                    "type": "string"\n                                },\n                                {\n                                    "type": "object",\n                                    "properties": {\n                                        "plain": {\n                                            "desciption": "Binding password as plaintext",\n                                            "type": "string",\n                                            "nullable": true\n                                        },\n                                        "env": {\n                                            "desciption": "Name of the environment variable which binding password is to be extracted from",\n                                            "type": "string",\n                                            "nullable": true\n                                        },\n                                        "filePath": {\n                                            "desciption": "Full path to the file on the filesystem which binding password is to be read from",\n                                            "type": "string",\n                                            "nullable": true\n                                        }\n                                    },\n                                    "required": [],\n                                }\n                            ]\n                        }\n                    },\n                    "nullable": false,\n                    "required": ["bindDn", "bindPassword"]\n                },\n                "timeoutMs": {\n                    "description": "Maximum number of milliseconds to wait for response when connecting to the LDAP server",\n                    "type": "number",\n                    "default": 0,\n                    "nullable": true\n                },\n            },\n            "nullable": false,\n            "required": ["uri", "credentials"]\n        },\n        "options": {\n            "description": "Options for performing LDAP operations such as a search",\n            "type": "object",\n            "properties": {\n                "userSearch": {\n                    "description": "Options related to searching for users in LDAP directory tree",\n                    "type": "object",\n                    "properties": {\n                        "baseDn": {\n                            "description": "The base of the subtree in which the search for the user is to be performed",\n                            "type": "string"\n                        },\n                        "filter": {\n                            "description": "Filter of the LDAP user search request. Must conform to syntax specified in RFC4515. %u gets substituted by MQTT client\'s username",\n                            "type": "string",\n                            "nullable": true,\n                            "default": "(uid=%u)"\n                        },\n                        "scope": {\n                            "description": "The scope of the search to be performed",\n                            "type": "string",\n                            "nullable": true,\n                            "enum": ["base", "one", "sub", "children"],\n                            "default": "sub"\n                        },\n                        "timeLimit": {\n                            "description": "Amount of time in seconds that LDAP srever should spent processing the request. A value of 0 indicates no limit",\n                            "type": "number",\n                            "nullable": true,\n                            "default": 10\n                        },\n                        "dereferenceAliases": {\n                            "description": "The policy of dereferencing aliases as defined in section 4.5.1.3 of RFC4511",\n                            "type": "string",\n                            "nullable": true,\n                            "enum": ["never", "always", "search", "find"],\n                            "default": "never"\n                        },\n                    },\n                    "nullable": false,\n                    "required": ["baseDn"],\n                },\n                "timeoutMs": {\n                    "description": "Maximum number of milliseconds to wait for server response to any LDAP operation after connecting",\n                    "type": "number",\n                    "default": 0,\n                    "nullable": true\n                },\n            },\n            "nullable": false,\n            "required": ["userSearch"]\n        }\n    },\n    "nullable": false,\n    "required": ["version", "connection"],\n}\n')))}C.isMDXComponent=!0},49044:(e,n,t)=>{t.d(n,{Z:()=>l});var i=t(67294),a=t(39082),o=t(62659),r=t(83166);function l({inline:e}){return i.createElement(a.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:i.createElement(r.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);