"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[84936],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>m,default:()=>y,frontMatter:()=>d,metadata:()=>h,toc:()=>g});var o=n(3905),r=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e};const d={id:"ha-onprem",title:"On premise Installation Guide Pro Mosquitto HA Cluster",sidebar_label:"HA Cluster Installation"},m=void 0,h={unversionedId:"getting-started/ha-onprem",id:"version-2.8/getting-started/ha-onprem",title:"On premise Installation Guide Pro Mosquitto HA Cluster",description:"Install Docker Environment",source:"@site/mosquitto_versioned_docs/version-2.8/getting-started/HAonprem.md",sourceDirName:"getting-started",slug:"/getting-started/ha-onprem",permalink:"/mosquitto/getting-started/ha-onprem",draft:!1,tags:[],version:"2.8",frontMatter:{id:"ha-onprem",title:"On premise Installation Guide Pro Mosquitto HA Cluster",sidebar_label:"HA Cluster Installation"}},k={},g=[{value:"Install Docker Environment",id:"install-docker-environment",level:2},{value:"Log into the Cedalo registry",id:"log-into-the-cedalo-registry",level:2},{value:"Start the Pro Mosquitto Setup",id:"start-the-pro-mosquitto-setup",level:2},{value:"Start docker containers",id:"start-docker-containers",level:3},{value:"Cluster setup in the MMC",id:"cluster-setup-in-the-mmc",level:3},{value:"How to run the setup on more than one server",id:"how-to-run-the-setup-on-more-than-one-server",level:3},{value:"Create a Cluster",id:"create-a-cluster",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Adjusting Docker Settings for Linux Environment",id:"adjusting-docker-settings-for-linux-environment",level:3},{value:"Logs",id:"logs",level:3}],f={toc:g};function y(e){var t,r=e,{components:p}=r,d=((e,t)=>{var n={};for(var o in e)s.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&l)for(var o of l(e))t.indexOf(o)<0&&c.call(e,o)&&(n[o]=e[o]);return n})(r,["components"]);return(0,o.kt)("wrapper",(t=u(u({},f),d),a(t,i({components:p,mdxType:"MDXLayout"}))),(0,o.kt)("h2",u({},{id:"install-docker-environment"}),"Install Docker Environment"),(0,o.kt)("p",null,"To run Cedalo products, you need an installed version of docker and docker compose.\nDocker is not system dependend and can also be installed on Mac or Linux."),(0,o.kt)("p",null,"Open the following link and install ",(0,o.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/engine/install/"}),"Docker"),".\nIf you have not installed a version of docker desktop and only installed the docker engine, make sure to further install ",(0,o.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"Docker Compose"),"."),(0,o.kt)("img",{className:"docimagemb",src:n(73449).Z,width:"50%"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Figure 1 - Docker Desktop Installer")),(0,o.kt)("p",null,"Make sure your system meets the minimum requirements."),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{}),"\u25cf 64 - bit processor with Second Level Address Translation (SLAT)\n\u25cf 4GB system RAM\n\u25cf BIOS-level hardware virtualization support must be enabled in the BIOS settings. The status can be\nchecked in your Task Manager:\n")),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"If you choose Hyper-V make sure virtualization is enabled. If virtualization is not enabled, you will have to turn it on in your BIOS.\nIf you do not know how: Here is a very good step-by-step ",(0,o.kt)("a",u({parentName:"p"},{href:"https://mashtips.com/enable-virtualization-windows-10/"}),"tutorial"),".")),(0,o.kt)("p",null,"After installing make sure docker is running.\nOn a typical installation the Docker daemon is started by a system utility, not manually by a user. This makes it easier to automatically start Docker when the machine reboots.\nThe command to start Docker depends on your operating system. Check the correct page under Install ",(0,o.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/engine/install/"}),"Docker"),"."),(0,o.kt)("p",null,"During the installation process, Docker requests from you that you set up an account with Docker. You need that\naccount mainly for the setup/install process of Docker, but later you will be provided by Cedalo with a\nseparate account to access the Cedalo registry."),(0,o.kt)("h2",u({},{id:"log-into-the-cedalo-registry"}),"Log into the Cedalo registry"),(0,o.kt)("p",null,"To get your local premium subscription running you need to use the docker login we provided.\nYou will not be able to pull the right images with your personal docker account."),(0,o.kt)("p",null,"After the docker installation you can use ",(0,o.kt)("em",{parentName:"p"},"docker login")," to log into docker.\n(",(0,o.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/engine/reference/commandline/login/"}),"https://docs.docker.com/engine/reference/commandline/login/"),")"),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Under normal circumstances, running further docker containers should not influence existing processes. However, this cannot be guaranteed. Please make sure to bring all Docker based applications in a secured state or power them down before logging on with the Cedalo premium subscription account and starting the Mosquitto Pro HA Cluster Setup.")),(0,o.kt)("p",null,"To login open your shell (e.g., cmd.exe under Windows) and enter following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{}),"docker login registry.cedalo.com -u [username provided by us] -p [password provided by us]\n")),(0,o.kt)("p",null,"You should receive a message that the login succeeded, otherwise please let us know under\n",(0,o.kt)("a",u({parentName:"p"},{href:"mailto:getting.started@cedalo.com"}),"getting.started@cedalo.com")),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"If you are using Docker Desktop, logging in via the UI is ",(0,o.kt)("strong",{parentName:"p"},"not possible"),". Please use the command line login.")),(0,o.kt)("h2",u({},{id:"start-the-pro-mosquitto-setup"}),"Start the Pro Mosquitto Setup"),(0,o.kt)("h3",u({},{id:"start-docker-containers"}),"Start docker containers"),(0,o.kt)("p",null,"Download the shared setup via the given link we provided you in the e-mail.\nThis folder contains an example mosquitto 3-node cluster setup where each node has an own server (i.e., ",(0,o.kt)("inlineCode",{parentName:"p"},"server1"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"server2"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"server3"),") directory. The ",(0,o.kt)("inlineCode",{parentName:"p"},"server1")," directory also contains the configuration for the Management Center. Enter the given license in the license folder in each server directory. The setup expects the file to be named ",(0,o.kt)("inlineCode",{parentName:"p"},"license.lic"),"."),(0,o.kt)("p",null,"The example configuration may simply be started using the provided startup scripts:"),(0,o.kt)("p",null,"Linux/MacOS:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-sh"}),"./start.sh up -d\n")),(0,o.kt)("p",null,"Windows:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-sh"}),"./start.bat up -d\n")),(0,o.kt)("p",null,"The following containers will be created:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"mosquitto1, mosquitto2, mosquitto3: The three Mosquitto cluster nodes"),(0,o.kt)("li",{parentName:"ul"},"haproxy1, haproxy2, haproxy3: Three HAProxys forward MQTT client connections to the leader of the cluster, which is the active MQTT node."),(0,o.kt)("li",{parentName:"ul"},"management-center: The Management Center (MMC) which will connect to the individual Mosquitto nodes and the HAProxys")),(0,o.kt)("p",null,"Docker will create an internal network with IP range 172.20.0.0/16 used for the internal communication between the containers."),(0,o.kt)("p",null,"Each Mosquitto node will open the port 1885 on the internal network as an admin port for the reachability of the MMC. Please do not make this internal admin port reachable from outside the internal network.\nAdditionally, the active cluster leader will open the Port 1883 in the dockers\nprivate network so that the HAProxy can forward request from his public ",(0,o.kt)("inlineCode",{parentName:"p"},"1883"),"\nport."),(0,o.kt)("p",null,"By default, the test setup will only be reachable on localhost (of the docker\nhost) as the MQTT Port ",(0,o.kt)("inlineCode",{parentName:"p"},"1883")," (form the HAProxy) and the MMC HTTP Port ",(0,o.kt)("inlineCode",{parentName:"p"},"8088"),"\nwill only bound to localhost. If you need the setup to be reachable from the outside please adapt the port rules in the docker-compose.yml file accordingly."),(0,o.kt)("h3",u({},{id:"cluster-setup-in-the-mmc"}),"Cluster setup in the MMC"),(0,o.kt)("p",null,"The Management Center has six predefined connections:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"To the three brokers via port 1885"),(0,o.kt)("li",{parentName:"ol"},"To the three HAProxys via port 1883.\nWe have included all three HAProxy connections, even though just one would suffice. This ensures all failover scenarios are covered.\nIn a cluster, changes can only be amended to the cluster leader. The HAProxy connections allow for a direct connection to the leader via the 1883 port (which always chooses the leader). Port 1885 directs to each node and does not redirect.")),(0,o.kt)("p",null,"A cluster is already created and running. Check the cluster state in the Cluster menu. The leader is indicated via a green icon."),(0,o.kt)("p",null,"This is an example of a cluster running three nodes on a single server."),(0,o.kt)("h3",u({},{id:"how-to-run-the-setup-on-more-than-one-server"}),"How to run the setup on more than one server"),(0,o.kt)("p",null,"We recommend recreating this setup on three separate servers.\nTo adapt this example for a real-world implementation, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Navigate to the cluster menu in the Mosquitto Management Center and delete the existing cluster. This action will remove all entries from all folders associated with the current cluster."),(0,o.kt)("li",{parentName:"ol"},"Place the three folders named ",(0,o.kt)("inlineCode",{parentName:"li"},"server1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"server2"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"server3")," on three distinct servers."),(0,o.kt)("li",{parentName:"ol"},"Ensure that you update the IP addresses in both the ",(0,o.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," files and the ",(0,o.kt)("inlineCode",{parentName:"li"},"haproxy.cfg")," files to align with your local network configuration."),(0,o.kt)("li",{parentName:"ol"},"Change the connection details of the MMC in the ",(0,o.kt)("inlineCode",{parentName:"li"},"config.json")," file. (server1/management-center/config)")),(0,o.kt)("p",null,"For more information about the cluster configuration see ",(0,o.kt)("a",u({parentName:"p"},{href:"/mosquitto/broker/mosquitto-high-availability"}),"here"),"."),(0,o.kt)("h2",u({},{id:"create-a-cluster"}),"Create a Cluster"),(0,o.kt)("p",null,"Open the Management Center via: ",(0,o.kt)("a",u({parentName:"p"},{href:"http://localhost:8088/"}),"http://localhost:8088/"),"\nThe root credentials are the following and can be changed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{}),"username: cedalo\nPassword: mmcisawesome\n")),(0,o.kt)("img",{className:"docimagemb",src:n(57067).Z,width:"50%"}),(0,o.kt)("p",null,"Further users can be configured in the Management Center (User Management Menu)."),(0,o.kt)("p",null,"Before creating a cluster please ensure that each Mosquitto node is connected to the Mosquitto Management Center. You can check this in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker Connections")," menu and establish the connection by clicking the connection switch of the deactivated connections."),(0,o.kt)("p",null,"A local example Cluster can directly be created without any further configuration. First, make sure all three brokers are connected (Broker Connections Menu). Then create a new cluster in the Cluster Management menu. The configuration is shown in the image below. You can choose between the cluster modes \u201cFull Sync\u201d and \u201cDynamic Security Sync\u201d."),(0,o.kt)("img",{className:"docimagemb",src:n(82694).Z,width:"75%"}),(0,o.kt)("p",null,"To add any DynamicSecurity (Clients/Roles/Groups) changes to the HA Cluster in the MMC, make sure to select the leader. To identify the leader, select the cluster by simply clicking on the entry in the \u201cCluster Management\u201d menu. After that all associated nodes are displayed. The leader\u2019s icon differs from the ones of the remaining nodes (see image below)."),(0,o.kt)("img",{className:"docimagemb",src:n(61425).Z,width:"75%"}),(0,o.kt)("p",null,"For more information about the cluster configuration see ",(0,o.kt)("a",u({parentName:"p"},{href:"/mosquitto/broker/mosquitto-high-availability"}),"here"),"."),(0,o.kt)("h2",u({},{id:"configuration"}),"Configuration"),(0,o.kt)("p",null,"The configuration of the entire setup is managed through multiple files. Here are the details of each file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"docker-compose.yml: This file controls various settings related to the docker environment. It manages configurations such as port mappings and environment variables.")),(0,o.kt)("img",{className:"docimagemb",src:n(57067).Z,width:"50%"}),(0,o.kt)("p",null,"Additionally, there are other configuration files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"mosquitto.conf: This file is located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"\\mosquitto\\config")," directory. It contains specific configurations for the Mosquitto component.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"config.json: This file is located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"\\management-center\\config")," directory. It contains configurations specific to the Management Center component."))),(0,o.kt)("p",null,"These files play a crucial role in customizing and fine-tuning the settings of the entire system."),(0,o.kt)("h3",u({},{id:"adjusting-docker-settings-for-linux-environment"}),"Adjusting Docker Settings for Linux Environment"),(0,o.kt)("p",null,"If you're using Linux for your Docker operations, there's one important setting you need to tweak. By default, Docker uses something called ",(0,o.kt)("inlineCode",{parentName:"p"},"userland-proxy"),", but for smooth client communication, we need to turn this off."),(0,o.kt)("p",null,"Follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Locate the Configuration File"))),(0,o.kt)("p",null,"Open your file explorer and go to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/docker/")," directory. Inside, you'll find a file named ",(0,o.kt)("inlineCode",{parentName:"p"},"daemon.json"),"."),(0,o.kt)("ol",u({},{start:2}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Edit the Configuration"))),(0,o.kt)("p",null,"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"daemon.json")," with a text editor (like nano or VSCode) to make changes. If the file doesn't exist, you can create it."),(0,o.kt)("ol",u({},{start:3}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Adjust the Settings"))),(0,o.kt)("p",null,"Replace the existing content with the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n    "userland-proxy": false,\n    "log-driver": "json-file",\n    "log-opts": {\n        "max-size": "100m",\n        "max-file": "10",\n        "labels": "production_status",\n        "env": "os,customer"\n    }\n}\n')),(0,o.kt)("p",null,"This configuration ensures that the userland-proxy is turned off and sets up some useful logging options."),(0,o.kt)("ol",u({},{start:4}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Save and Apply"))),(0,o.kt)("p",null,"Save the file and close the text editor."),(0,o.kt)("ol",u({},{start:5}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Restart Docker"))),(0,o.kt)("p",null,"You'll need to restart Docker to apply these changes. You can do this by opening your terminal and running:\n",(0,o.kt)("inlineCode",{parentName:"p"},"sudo systemctl restart docker")),(0,o.kt)("h3",u({},{id:"logs"}),"Logs"),(0,o.kt)("p",null,"Docker Compose logs provide valuable information about the status and behavior of containers running in a Docker Compose environment. "),(0,o.kt)("p",null,"To access Docker Compose logs for a Mosquitto MQTT Broker service, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open a terminal or command prompt.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Navigate to the directory containing your ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker-compose logs\n")),(0,o.kt)("p",{parentName:"li"},"For all logs. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker-compose logs <service_name>\n")),(0,o.kt)("p",{parentName:"li"},"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<service_name>")," with the actual name of your service as defined in your ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file to only access a specific service. "))),(0,o.kt)("p",null,"Mosquitto supports multiple log level to provide different levels of details for logs. To change the log level for the Mosquitto, update the ",(0,o.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file.\nSet the ",(0,o.kt)("inlineCode",{parentName:"p"},"log_type"),' to "all" to get access to the full log. Restart Mosquitto to apply changes. '),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{}),"```conf\nlog_type all\n```\n")))}y.isMDXComponent=!0},61425:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/clusterview-f44d5ec93cbc4db0966c9a215f5c4d2f.png"},82694:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/createcluster-d9e5d0f2830d8faf2c1735f20f708600.png"},57067:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/docker-compose_mmcpw-3b878b34071ebad1dba6eca2f60e6599.png"},73449:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/dockerdesktop-848606ac0f247d7a1b3412ab7f9bc01b.png"}}]);