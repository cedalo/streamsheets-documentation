"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[84560],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=o,h=c["".concat(s,".").concat(d)]||c[d]||p[d]||r;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},98375:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>d,default:()=>N,frontMatter:()=>c,metadata:()=>h,toc:()=>f});var a=n(3905),o=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&m(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&m(e,n,t[n]);return e};const c={id:"high-availability",title:"High Availability",sidebar_label:"High Availability"},d=void 0,h={unversionedId:"kubernetes/high-availability",id:"version-2.7/kubernetes/high-availability",title:"High Availability",description:"To set up a multi-node-HA Mosquitto broker and Management Center using Helm charts, you'll first need a Kubernetes environment. For deploying a full fledged kubernetes cluster on multiple hosts, Kubeadm is an excellent choice. Kubeadm is a command-line tool in the Kubernetes ecosystem designed to facilitate the process of setting up and bootstrapping a Kubernetes cluster.(Discussed in Introduction section).",source:"@site/mosquitto_versioned_docs/version-2.7/kubernetes/high-availability.md",sourceDirName:"kubernetes",slug:"/kubernetes/high-availability",permalink:"/mosquitto/kubernetes/high-availability",draft:!1,tags:[],version:"2.7",frontMatter:{id:"high-availability",title:"High Availability",sidebar_label:"High Availability"},sidebar:"someSidebar",previous:{title:"HA-Single-host",permalink:"/mosquitto/kubernetes/multi-node-single-host"},next:{title:"High Availability Autoscaling",permalink:"/mosquitto/kubernetes/high-availability-autoscaling"}},k={},f=[{value:"Installation",id:"installation",level:2},{value:"Kubernetes Cluster Setup",id:"kubernetes-cluster-setup",level:2},{value:"Dependencies and Prerequisites",id:"dependencies-and-prerequisites",level:3},{value:"Further Useful Commands:",id:"further-useful-commands",level:3},{value:"Usage",id:"usage",level:2}],g={toc:f};function N(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=p(p({},g),m),r(t,i({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"To set up a multi-node-HA Mosquitto broker and Management Center using Helm charts, you'll first need a Kubernetes environment. For deploying a full fledged kubernetes cluster on multiple hosts, Kubeadm is an excellent choice. Kubeadm is a command-line tool in the Kubernetes ecosystem designed to facilitate the process of setting up and bootstrapping a Kubernetes cluster.(Discussed in Introduction section).\nThis setup would deploy a 3 Mosquitto broker as a statefulsets. Also, a Management-Center pod and HA-proxy pod as a deployment entity. All the deployment would be deployed on multiple hosts. This deployment by default uses a NFS server to mount volumes. You would need to setup the NFS server before using this deployment."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Recommended Setup")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"1 Control-plane node, 3 worker nodes and a NFS Server"),(0,a.kt)("li",{parentName:"ol"},"You can name them control-plane, node-1, node-2, node-3, nfs-server. If you want to have different names for your machines you would have to uncompress the helm charts and change the hostnames entries of ",(0,a.kt)("inlineCode",{parentName:"li"},"values.yaml"),".\n",(0,a.kt)("inlineCode",{parentName:"li"},"tar -xzvf mosquitto-multi-node-multi-host-0.1.0.tgz"),(0,a.kt)("inlineCode",{parentName:"li"},"cd mosquitto-multi-node-multi-host"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Change the values of hostname from node-1/node-2/node-3 to the names of your machines."),(0,a.kt)("li",{parentName:"ul"},"Go back to the parent directory:\n",(0,a.kt)("inlineCode",{parentName:"li"},"cd ../")),(0,a.kt)("li",{parentName:"ul"},"Package the helm charts\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm package mosquitto-multi-node-multi-host")),(0,a.kt)("li",{parentName:"ul"},"Install the package. (Further details refer to ",(0,a.kt)("a",p({parentName:"li"},{href:"#installation"}),"installation")," is given below.)")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HA-PROXY Configurations"),"\nHA-proxy need to be configured accordingly for the kubernetes setup. For server m1, m2 and m3 needs to be configured in this case. Instead of using docker IP we would use DNS names to address the pods. For eg\n",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0.mosquitto.multinode.svc.cluster.local"),". Here ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-1"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-2")," are the name of individual mosquitto pods running as statefulsets. Each new pod would increase its pod-ordinal by 1. Rest can be defined as follows\n",(0,a.kt)("inlineCode",{parentName:"p"},"<pod-name>.<name-of-the-statefulset>.<namespace>.svc.cluster.local")),(0,a.kt)("pre",null,(0,a.kt)("code",p({parentName:"pre"},{}),"global\n    daemon\n    maxconn 4096\n\nfrontend mqtt_frontend\n    bind *:1883\n    mode tcp\n    default_backend mqtt_backend\n    timeout client 10m\n\nbackend mqtt_backend\n    timeout connect 5000\n    timeout server 10m\n    mode tcp\n    option redispatch\n    server m1 mosquitto-0.mosquitto.multinode.svc.cluster.local:1883 check on-marked-down shutdown-sessions\n    server m2 mosquitto-1.mosquitto.multinode.svc.cluster.local:1883 check on-marked-down shutdown-sessions\n    server m3 mosquitto-2.mosquitto.multinode.svc.cluster.local:1883 check on-marked-down shutdown-sessions\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Note"),": Make sure to add more entries to this haproxy.cfg file if you wish to add nodes to this cluster. You would have to reconfigure the HACONFIG in that case. You can refer to ",(0,a.kt)("inlineCode",{parentName:"p"},"Add Node")," i.e point 7 in Installation section for tips on reconfiguring haconfig configmap."),(0,a.kt)("h2",p({},{id:"installation"}),"Installation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prerequisites"),": Kubernetes Cluster should be up and running.If if you are yet to setup the cluster, refer ",(0,a.kt)("a",p({parentName:"p"},{href:"#kubernetes-cluster-setup"}),"Kubernetes Cluster Setup"),".\nOnce kubernetes cluster is up and running and you have installed all the configmaps through ",(0,a.kt)("inlineCode",{parentName:"p"},"setup.sh"),", you can now follow these steps to install the multi-node Mosquitto broker setup:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup NFS Server")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Install necessary dependencies\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get update"),(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get install nfs-kernel-server")),(0,a.kt)("li",{parentName:"ul"},"Configure exports directory.Open the ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/exports")," file on NFS-server. Expose the directories so that pods running on other nodes can access these directories.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You can use the following as a reference. Here we expose three mosquitto nodes and management center.",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{}),"/home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server1/mosquitto/data *(rw,sync,no_root_squash,no_subtree_check)\n/home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server2/mosquitto/data  *(rw,sync,no_root_squash,no_subtree_check)\n/home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server3/mosquitto/data *(rw,sync,no_root_squash,no_subtree_check)\n/home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server1/management-center/config *(rw,sync,no_root_squash,no_subtree_check)\n"))))),(0,a.kt)("li",{parentName:"ul"},"Make sure all the ",(0,a.kt)("inlineCode",{parentName:"li"},"data")," directories have adequate privileges so that mosquitto kubernetes pods can create additional directories inside these ",(0,a.kt)("inlineCode",{parentName:"li"},"data")," directories. If you face any issues like ",(0,a.kt)("inlineCode",{parentName:"li"},"permission denied")," you can try giving the ",(0,a.kt)("inlineCode",{parentName:"li"},"1000")," ownership to all the relevant ",(0,a.kt)("inlineCode",{parentName:"li"},"data")," dir using following command:")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{}),"sudo chown -R 1000:1000 /home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server1/mosquitto/data\nsudo chown -R 1000:1000 /home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server2/mosquitto/data\nsudo chown -R 1000:1000 /home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/server3/mosquitto/data\n")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": We provide ownership of ",(0,a.kt)("inlineCode",{parentName:"li"},"1000")," as mosquitto kubernetes pods uses user id of ",(0,a.kt)("inlineCode",{parentName:"li"},"1000")," by default."),(0,a.kt)("li",{parentName:"ul"},"Expose the directories using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo exportfs -a")),(0,a.kt)("li",{parentName:"ul"},"Restart the kernel-server\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo systemctl restart nfs-kernel-server")),(0,a.kt)("li",{parentName:"ul"},"Install neccessary nfs-common on other nodes so that they act as nfs-clients:\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get install nfs-common")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Change Directory:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Navigate to the project directory (i.e multi-node-multi-host).\n",(0,a.kt)("inlineCode",{parentName:"li"},"cd mosquitto-2.7-mmc-2.7-cluster-kubernetes/kubernetes/multi-node-multi-host/")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Helm Chart:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Use the following ",(0,a.kt)("inlineCode",{parentName:"li"},"helm install")," command to deploy the setup to your Kubernetes cluster. Replace ",(0,a.kt)("inlineCode",{parentName:"li"},"<release-name>")," with the desired name for your Helm release and ",(0,a.kt)("inlineCode",{parentName:"li"},"<namespace>")," with your chosen Kubernetes namespace:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"helm install <release-name>  mosquitto-multi-node-multi-host-0.1.0.tgz   --set repoPath=$HOME -n <namespace>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"repoPath"),": Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"repoPath")," flag to the path where this repo was cloned. The above command expects it to be at ",(0,a.kt)("inlineCode",{parentName:"li"},"$HOME"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace"),": Set it to the namespace of your deployment."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": Ensure that you have a running Kubernetes cluster set up to run this deployment. We recommend setting up the kubernetes cluster using Kubeadm. You can also use our installation script to set up Kubernetes cluster. To setup the kubernetes cluster, follow the instructions in Kubernetes Cluster Setup."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": If you want to deploy the setup in a different namespace, make sure to pass a seperate flag ",(0,a.kt)("inlineCode",{parentName:"li"},"--set namespace=<your-custom-namespace>")," along with the helm installation command"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": By default the NFS server IP is set to 10.156.0.10 .You can change the NFS server IP by passing ",(0,a.kt)("inlineCode",{parentName:"li"},"--set nfs=<your-nfs-ip>")," by passing it along with helm installation command."),(0,a.kt)("li",{parentName:"ul"},"So for eg: If you NFS IP is 10.10.10.10,your name namespace is ",(0,a.kt)("inlineCode",{parentName:"li"},"test-namespace")," and your arbitrary release name is ",(0,a.kt)("inlineCode",{parentName:"li"},"sample-release-name")," then your helm installation command should be:")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"helm install sample-release-name  mosquitto-multi-node-multi-host-0.1.0.tgz   --set repoPath=$HOME -n test-namespace --set namespace=test-namespace --set nfs=10.10.10.10\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can monitor the running pods using the following command:\n",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods -o wide -n <namespace>"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open Applications\n",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:31021")," (MMC)"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"IP: ip-of-host-running-ha-proxy & Port: 31028 (HA)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To uninstall the setup:\n",(0,a.kt)("inlineCode",{parentName:"p"},"helm uninstall <release-name> -n <namespace>"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Add Nodes")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Configure your HAproxy by adding entries to the haproxy.cfg.For eg to add fourth node, add below line to haproxy.cfg:\n",(0,a.kt)("inlineCode",{parentName:"li"},"server m4 mosquitto-3.mosquitto.multinode.svc.cluster.local:1883 check on-marked-down shutdown-sessions")),(0,a.kt)("li",{parentName:"ul"},"Delete the haproxy configmap of kubernetes\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl delete configmap haconfig -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"Reconfigure HAconfig:\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create configmap haconfig -n <namespace> --from-file=<path-to-haproxy.cfg>")),(0,a.kt)("li",{parentName:"ul"},"Uninstall helm package\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm uninstall <release-name> -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"Reinstall helm package so that new configmaps can come into effect(Use the same command you used to install it the first time with appropriate flags.Below eg is just a reference)\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm install <release-name>  mosquitto-multi-node-multi-host-0.1.0.tgz   --set repoPath=$HOME -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"In order to add nodes to existing cluster You can scale the kubernetes replica count of statefulset to desired number. For eg if you want to increase the number of nodes from default three nodes to five nodes you can use the following command:\n",(0,a.kt)("inlineCode",{parentName:"li"}," kubectl scale statefulsets mosquitto --replicas=5 -n <namespace>"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can now add the broker connections and the additional nodes in the cluster through Management-center.")),(0,a.kt)("ol",p({},{start:8}),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Remove Nodes"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You can start by removing the node configuration from the existing cluster using the Management Center."),(0,a.kt)("li",{parentName:"ul"},"You can now remove the broker connections using the Management Center."),(0,a.kt)("li",{parentName:"ul"},"Then you can set the replica count to desired number. For eg if you want to decrease the number of nodes from five nodes to three nodes you can use the following command.\n",(0,a.kt)("inlineCode",{parentName:"li"}," kubectl scale statefulsets mosquitto --replicas=3 -n <namespace>"))))),(0,a.kt)("h2",p({},{id:"kubernetes-cluster-setup"}),"Kubernetes Cluster Setup"),(0,a.kt)("h3",p({},{id:"dependencies-and-prerequisites"}),"Dependencies and Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Docker"),(0,a.kt)("li",{parentName:"ul"},"Kubernetes Cluster with Kubeadm"),(0,a.kt)("li",{parentName:"ul"},"Helm")),(0,a.kt)("p",null,"If you need to set up a Kubernetes cluster, you can refer to our installation script. If you plan on using your own cluster, you can skip to step 4. Follow these steps on your master/control-plane node :"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup the ha-cluster setups folder:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Copy or setup the ",(0,a.kt)("inlineCode",{parentName:"li"},"mosquitto-2.7-mmc-2.7-cluster-kubernetes")," folder to your local machines. (Each nodes including NFS server)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Choose Architecture Folder:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Depending on your host architecture, navigate to the corresponding folder:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"For Debian AMD64:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"cd mosquitto-2.7-mmc-2.7-cluster-kubernetes/kubernetes/multi-node-multi-host/debian_amd64\n"))))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Common Dependencies:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Run the following command to install the necessary dependencies on all the nodes(including control-plane node):",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"bash common-installation-debian.sh\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Master Dependencies:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Run the following command to install the necessary dependencies only on the master node (i.e control-plane node):",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"bash  master-installation-debian.sh\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup Kubernetes: IMPORTANT")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Execute the setup script to configure Kubernetes:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"bash setup.sh\n")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Follow the instructions of this file. This would create configmap for mosquitto.conf, create configmaps for your license file."),(0,a.kt)("li",{parentName:"ul"},"Make sure you have placed your license file in the required folder before running this script i.e at ",(0,a.kt)("inlineCode",{parentName:"li"},"/home/<user>/mosquitto-2.7-mmc-2.7-cluster-kubernetes/license/license.lic")," (if license folder does not exist ,create it and add your license.lic file)"),(0,a.kt)("li",{parentName:"ul"},"The default namespace for installation is ",(0,a.kt)("inlineCode",{parentName:"li"},"multinode"),". You can change the namespace through the setup script. Script will prompt you to choose the namespace of your choice."))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup Kubernetes Secrets:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This step is required for kubernetes to pull required docker images from the registry. You can set the secrets using the following command::",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"kubectl create secret docker-registry  mosquitto-pro-secret  --docker-server=registry.cedalo.com --docker-username=<username> --docker-password=<password>  --docker-email=<email> -n <namespace>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"namespace")," should be the same as the one you selected or enetered while running the ",(0,a.kt)("inlineCode",{parentName:"li"},"setup.sh"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"docker-username"),": Your docker username"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"docker-password"),": Your docker password"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"docker-email"),": Email registered for accessing docker registry")))),(0,a.kt)("h3",p({},{id:"further-useful-commands"}),"Further Useful Commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you want to change mosquitto.conf. Make the required changes in mosquitto.conf then delete the configmap and create a new one. Make sure to uninstall the deployment before making the change."),(0,a.kt)("li",{parentName:"ul"},"You can uninstall the setup using the following command:\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm uninstall <release-name> -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"To delete the configmap:\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl delete configmap mosquitto-config -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"To reconfigure the configmap:\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create configmap mosquitto-config  -n $namespace --from-file=<path-to-mosquitto.conf>")),(0,a.kt)("li",{parentName:"ul"},"If you want to customize the deployments, you can unzip the package using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"tar -xzvf mosquitto-multi-node-multi-host-0.1.0.tgz")),(0,a.kt)("li",{parentName:"ul"},"Make the changes and repackage the folder mosquitto-multi-node-single-host using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm package mosquitto-multi-node-multi-host "))),(0,a.kt)("h2",p({},{id:"usage"}),"Usage"),(0,a.kt)("p",null,"Once the installation is complete, you can start using the multi-node Mosquitto broker. Be sure to check the Mosquitto documentation for further details on configuring and using the broker"))}N.isMDXComponent=!0}}]);