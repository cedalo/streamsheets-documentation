"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[93853],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),m=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=m(a),c=r,h=d["".concat(i,".").concat(c)]||d[c]||p[c]||l;return a?n.createElement(h,s(s({ref:t},u),{},{components:a})):n.createElement(h,s({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var m=2;m<l;m++)s[m]=a[m];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2424:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return u},default:function(){return d}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),s=["components"],o={id:"mosquitto-broker",title:"Mosquitto Broker",sidebar_label:"Mosquitto Broker"},i=void 0,m={unversionedId:"mosquitto-broker",id:"version-2.1/mosquitto-broker",title:"Mosquitto Broker",description:"System requirements",source:"@site/mosquitto_versioned_docs/version-2.1/NEW_mosquitto-broker.md",sourceDirName:".",slug:"/mosquitto-broker",permalink:"/mosquitto/2.1/mosquitto-broker",tags:[],version:"2.1",frontMatter:{id:"mosquitto-broker",title:"Mosquitto Broker",sidebar_label:"Mosquitto Broker"},sidebar:"someSidebar",previous:{title:"MQTT in a nutshell",permalink:"/mosquitto/2.1/mqtt"},next:{title:"Publishing",permalink:"/mosquitto/2.1/publishing"}},u=[{value:"System requirements",id:"system-requirements",children:[{value:"The Mosquitto broker is the most efficient broker offered worldwide.",id:"the-mosquitto-broker-is-the-most-efficient-broker-offered-worldwide",children:[],level:3},{value:"High Availability (HA)",id:"high-availability-ha",children:[],level:3},{value:"Minimum Hardware Requirements",id:"minimum-hardware-requirements",children:[{value:"Hardware",id:"hardware",children:[],level:4},{value:"Software",id:"software",children:[],level:4},{value:"Docker",id:"docker",children:[],level:4}],level:3}],level:2},{value:"Mosquitto MQTT Broker versions",id:"mosquitto-mqtt-broker-versions",children:[{value:"Open-Source",id:"open-source",children:[],level:3},{value:"Premium",id:"premium",children:[{value:"Eclipse Mosquitto as a managed Service",id:"eclipse-mosquitto-as-a-managed-service",children:[],level:4},{value:"Cedalo Enterprise Platform for Eclipse Mosquitto On-Premise",id:"cedalo-enterprise-platform-for-eclipse-mosquitto-on-premise",children:[],level:4}],level:3}],level:2},{value:"Mosquitto Broker Client Library",id:"mosquitto-broker-client-library",children:[{value:"Proxy Protocol",id:"proxy-protocol",children:[],level:3},{value:"Idle Timeout",id:"idle-timeout",children:[],level:3}],level:2},{value:"Cedalo Stream Processing (CSP) plugin",id:"cedalo-stream-processing-csp-plugin",children:[{value:"Quick start",id:"quick-start",children:[],level:3},{value:"Stream Processing",id:"stream-processing",children:[],level:3},{value:"Modifying the payload with select statements",id:"modifying-the-payload-with-select-statements",children:[],level:3},{value:"Basic payload manipulation",id:"basic-payload-manipulation",children:[],level:3},{value:"Select Aliases",id:"select-aliases",children:[],level:3},{value:"Aggregate functions",id:"aggregate-functions",children:[],level:3},{value:"Choosing messages are used with where statements",id:"choosing-messages-are-used-with-where-statements",children:[],level:3}],level:2},{value:"Stream persistence and replay",id:"stream-persistence-and-replay",children:[{value:"autosave_interval seconds",id:"autosave_interval-seconds",children:[],level:3},{value:"Replaying",id:"replaying",children:[],level:3},{value:"persistence_location path",id:"persistence_location-path",children:[],level:3},{value:"Message count",id:"message-count",children:[],level:3},{value:"Clearing messages",id:"clearing-messages",children:[],level:3},{value:"Time to Live (TTL)",id:"time-to-live-ttl",children:[],level:3},{value:"API description",id:"api-description",children:[],level:3},{value:"clearStreamMessages",id:"clearstreammessages",children:[{value:"Clear all messages that are more recent than 1620131088.",id:"clear-all-messages-that-are-more-recent-than-1620131088",children:[],level:4},{value:"Clear all messages that are older than 1620131088.",id:"clear-all-messages-that-are-older-than-1620131088",children:[],level:4},{value:"Clear all messages that are more recent than 1620044688 and are also older than 1620131088.",id:"clear-all-messages-that-are-more-recent-than-1620044688-and-are-also-older-than-1620131088",children:[],level:4}],level:3},{value:"createStream and modifyStream",id:"createstream-and-modifystream",children:[],level:3},{value:"deleteStream",id:"deletestream",children:[],level:3},{value:"disableStream",id:"disablestream",children:[],level:3},{value:"enableStream",id:"enablestream",children:[],level:3},{value:"getLicense",id:"getlicense",children:[],level:3},{value:"getStream",id:"getstream",children:[],level:3},{value:"getStreamMessageCount",id:"getstreammessagecount",children:[],level:3},{value:"listStreams",id:"liststreams",children:[],level:3},{value:"replayStream",id:"replaystream",children:[],level:3},{value:"stopStreamReplay",id:"stopstreamreplay",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"system-requirements"},"System requirements"),(0,l.kt)("h3",{id:"the-mosquitto-broker-is-the-most-efficient-broker-offered-worldwide"},"The Mosquitto broker is the most efficient broker offered worldwide."),(0,l.kt)("p",null,'When considering how much a MQTT Broker is used and the work it has to perform, it is not so much about the number of clients that you should focus on but rather the amount of data sent per second, the "traffic".'),(0,l.kt)("p",null,"Suppose you have 1.5 million clients but each client is sending only little data and, additionally, that even quite rarely, e.g. only every couple of minutes."),(0,l.kt)("p",null,"Then, this leads to much less traffic and workload on the broker than merely a few thousand clients sending big data messages at high frequency."),(0,l.kt)("p",null,"A different scenario that can incur a lot of traffic and workload for the broker is if you want to transfer pictures every millisecond using QoS level 2 (QoS2) - a Quality of Service level occupying the resources of a broker way more than other Quality of Service levels."),(0,l.kt)("p",null,"Read more about ",(0,l.kt)("a",{parentName:"p",href:"/mosquitto/2.1/quality-of-service"},"Quality of Service"),"."),(0,l.kt)("p",null,"Additionally, the circumstances of the setup influence the performance. Thinking of remote devices, a very good latency is certainly harder to achieve than when the devices would be close together."),(0,l.kt)("h3",{id:"high-availability-ha"},"High Availability (HA)"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"Premium feature")))),(0,l.kt)("p",null,"HA is the ability of a system to work at optimal performance continuously for a long period."),(0,l.kt)("p",null,"This means that the systems should work without failure. The Mosquitto MQTT broker is designed to be stable and consistently functional by clustering."),(0,l.kt)("p",null,"Clustering provides prevention of disadvantages whenever a broker might break down, e.g. hardware failure. Therefore usually three brokers get clustered."),(0,l.kt)("p",null,'In the case of a breakdown of broker number one, the so-called "load balancer" shifts the workload to a passive broker number two.'),(0,l.kt)("p",null,"To be absolutely safe, there is at least one passive broker clustered."),(0,l.kt)("p",null,"The HA architecture requires that the cluster has a majority of nodes active and connected in order for the cluster to be operable and stable. So for 3 nodes, 2 must be available. For 5 nodes, 3 must be available and so on. The third node of three isn't just an extra backup, but required as part of the cluster algorithm."),(0,l.kt)("h3",{id:"minimum-hardware-requirements"},"Minimum Hardware Requirements"),(0,l.kt)("h4",{id:"hardware"},"Hardware"),(0,l.kt)("p",null,'Hardware requirements for Eclipse Mosquitto can vary depending on the client connections and message rates expected. The minimum specification below is for a low power device supporting 10s of clients with a low message rate. The recommended specification is for a device capable of supporting 10,000s of clients with reasonable message rates. The "with stream processing" specification includes extra RAM and storage for stream processing support.'),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Minimum"),(0,l.kt)("th",{parentName:"tr",align:null},"Recommended"),(0,l.kt)("th",{parentName:"tr",align:null},"Recommended (with stream processing)"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"RAM")),(0,l.kt)("td",{parentName:"tr",align:null},"128MB"),(0,l.kt)("td",{parentName:"tr",align:null},"4GB"),(0,l.kt)("td",{parentName:"tr",align:null},"16GB"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"CPU")),(0,l.kt)("td",{parentName:"tr",align:null},"1 core 32-bit ARM"),(0,l.kt)("td",{parentName:"tr",align:null},"Recent 4+ core AMD/Intel"),(0,l.kt)("td",{parentName:"tr",align:null},"Recent 4+ core AMD/Intel"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Storage")),(0,l.kt)("td",{parentName:"tr",align:null},"20MB"),(0,l.kt)("td",{parentName:"tr",align:null},"200MB"),(0,l.kt)("td",{parentName:"tr",align:null},"40GB"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"software"},"Software"),(0,l.kt)("p",null,"Eclipse Mosquitto is available natively on Linux, Windows, and other Unix-like systems, and using Docker."),(0,l.kt)("p",null,"On Windows, a Docker installation gives the best performance."),(0,l.kt)("h4",{id:"docker"},"Docker"),(0,l.kt)("p",null,"The minimum Docker version is 19.03."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/cedalo"},"https://hub.docker.com/u/cedalo")),(0,l.kt)("h2",{id:"mosquitto-mqtt-broker-versions"},"Mosquitto MQTT Broker versions"),(0,l.kt)("h3",{id:"open-source"},"Open-Source"),(0,l.kt)("p",null,"The open source Eclipse Mosquitto is the most popular and downloaded MQTT broker in the world. The Mosquitto MQTT broker enables you to connect sensors, devices, and applications with more flexibility and speed since it is written in C."),(0,l.kt)("p",null,"Eclipse Mosquitto is open source (EPL/EDL licensed)."),(0,l.kt)("p",null,"It implements the MQTT protocol versions 5.0, 3.1.1 and 3.1."),(0,l.kt)("p",null,"Report bugs or submit changes on the Github repository or the foums."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/eclipse/mosquitto"},"https://github.com/eclipse/mosquitto")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://forum.cedalo.com/"},"https://forum.cedalo.com/")),(0,l.kt)("p",null,"Talk to other users on the Mosquitto mailing list or on Slack."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://accounts.eclipse.org/mailing-list/mosquitto-dev"},"https://accounts.eclipse.org/mailing-list/mosquitto-dev")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://eclipse-iot-wg.slack.com/join/shared_invite/zt-d8zil9s0-NF5UHh92Odf3AbonspswHA#/shared-invite/email"},"https://eclipse-iot-wg.slack.com/join/shared_invite/zt-d8zil9s0-NF5UHh92Odf3AbonspswHA#/shared-invite/email")),(0,l.kt)("p",null,"Get help from the forums."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://forum.cedalo.com/"},"https://forum.cedalo.com/")),(0,l.kt)("p",null,"Cite Mosquitto in your academic work ."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://mosquitto.org/blog/2017/06/citing-eclipse-mosquitto/"},"https://mosquitto.org/blog/2017/06/citing-eclipse-mosquitto/")),(0,l.kt)("h3",{id:"premium"},"Premium"),(0,l.kt)("p",null,"Cedalo Enterprise Platform for Eclipse Mosquitto builds on the core of the open source Mosquitto. It comes with premium support and plugins like Stream Processing and High Availability."),(0,l.kt)("p",null,"Take a look at the features and capabilities of Eclipse Mosquitto versus the Cedalo Enterprise Platform for Eclipse Mosquitto offerings and choose your MQTT broker:"),(0,l.kt)("h4",{id:"eclipse-mosquitto-as-a-managed-service"},"Eclipse Mosquitto as a managed Service"),(0,l.kt)("p",null,"Mosquitto hosted in the Cedalo Cloud"),(0,l.kt)("h4",{id:"cedalo-enterprise-platform-for-eclipse-mosquitto-on-premise"},"Cedalo Enterprise Platform for Eclipse Mosquitto On-Premise"),(0,l.kt)("p",null,"Mosquitto with ",(0,l.kt)("a",{parentName:"p",href:"https://cedalo.com/pricing/mosquitto/"},"Premium")," Management Center."),(0,l.kt)("h2",{id:"mosquitto-broker-client-library"},"Mosquitto Broker Client Library"),(0,l.kt)("p",null,"The Mosquitto MQTT Broker supports any client library that is supporting MQTT protocol."),(0,l.kt)("p",null,"Here is an ",(0,l.kt)("a",{parentName:"p",href:"https://www.eclipse.org/paho/index.php?page=downloads.php"},"overview"),"."),(0,l.kt)("h3",{id:"proxy-protocol"},"Proxy Protocol"),(0,l.kt)("p",null,"In computer networking, a proxy server is a server application that acts as an intermediary between a client requesting a resource and the server providing that resource."),(0,l.kt)("p",null,"Instead of connecting directly to a server that can fulfill a request for a resource, such as a file or web page, the client directs the request to the proxy server, which evaluates the request and performs the required network transactions."),(0,l.kt)("p",null,"This serves as a method to simplify or control the complexity of the request, or provide additional benefits such as load balancing, privacy, or security."),(0,l.kt)("p",null,"Proxies were devised to add structure and encapsulation to distributed systems.\nA proxy server thus functions on behalf of the client when requesting service, potentially masking the true origin of the request to the resource server."),(0,l.kt)("h3",{id:"idle-timeout"},"Idle Timeout"),(0,l.kt)("p",null,"If you wish to have minimum workload, you might want to close client connections that have no traffic. Idle Timeout enables to set a time interval instructing the broker to check for activity at the end of the time interval."),(0,l.kt)("p",null,"If there is no exchange of packets the connection will be closed."),(0,l.kt)("h2",{id:"cedalo-stream-processing-csp-plugin"},"Cedalo Stream Processing (CSP) plugin"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"Premium feature")))),(0,l.kt)("p",null,"Cedalo Stream Processing (CSP) plugin is a Mosquitto Premium feature.\nThe plugin allows the creation of topic streams in the Mosquitto broker.\nA topic stream receives all messages on a specified topic and can then perform the following tasks:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Republish messages on a different topic, with optional QoS and retain control."),(0,l.kt)("li",{parentName:"ul"},"Persist messages to disk, with the ability to replay messages in the future."),(0,l.kt)("li",{parentName:"ul"},"Process JSON payload to extract particular data values prior to republishing."),(0,l.kt)("li",{parentName:"ul"},"Apply aggregation functions to data prior to republishing/persisting."),(0,l.kt)("li",{parentName:"ul"},"Select which messages are processed/persisted based on data values in the payload."),(0,l.kt)("li",{parentName:"ul"},"Controlling the plugin is carried out with an MQTT topic based API. The Management Center for Mosquitto web tool provides a convenient front end to access the API, the ",(0,l.kt)("inlineCode",{parentName:"li"},"mosquitto_ctrl")," tool provides command line access to the API, or custom tools can be written to control it.")),(0,l.kt)("p",null,"Read more about the ",(0,l.kt)("a",{parentName:"p",href:"/mosquitto/2.1/management-center"},"Management Center"),"."),(0,l.kt)("h3",{id:"quick-start"},"Quick start"),(0,l.kt)("p",null,"After installing the Cedalo Platform Docker image, the Mosquitto configuration file must be edited to enable the CSP plugin."),(0,l.kt)("p",null,"Edit ",(0,l.kt)("inlineCode",{parentName:"p"},"cedalo_platform/mosquitto/config/mosquitto.conf"),", and add the following lines:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"plugin /usr/lib/cedalo_stream_processing.so")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"plugin_opt_data_dir /mosquitto/data/csp"))),(0,l.kt)("p",null,"Find more information about the install here:"),(0,l.kt)("p",null,"Read more about the ",(0,l.kt)("a",{parentName:"p",href:"/mosquitto/2.1/broker-download"},"Download"),"."),(0,l.kt)("p",null,"Important, when using a plugin, is to place the plugin in the configuration data, too."),(0,l.kt)("p",null,"After that restart the Mosquitto broker.\nCheck the command straight after the restart for the loaded Cedalo Streaming Plugin (CSP)."),(0,l.kt)("p",null,"Changing the configuration is only necessary, if you want to switch from an existing open source installation to a premium version."),(0,l.kt)("h3",{id:"stream-processing"},"Stream Processing"),(0,l.kt)("p",null,"The stream processing feature allows messages with JSON payloads to be modified before they are republished and/or persisted to disk. This is managed with a user defined query that has similar concepts to a SQL statement."),(0,l.kt)("h3",{id:"modifying-the-payload-with-select-statements"},"Modifying the payload with select statements"),(0,l.kt)("p",null,"When processing is enabled the JSON payload can be manipulated using select statements. If no select statements are defined, then the payload will be left unmodified. If select statements are defined, then only the parts of the message that are defined in the select will be added to the outgoing payload, and only messages that match the select specification will be republished or persisted."),(0,l.kt)("p",null,"The following examples demonstrate how to use define the select queries. Only the select part of the command payload is shown, see the createStream command for the full command payload requirement.\nThe example incoming payload is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},' {\n"Machine Data": {\n "Speed": 7.5,\n "Angle Deg": 55.3,\n        "Angle Rad": 0.97,\n        "Power": 601.6\n    },\n    "Location": "Freiburg"\n}\n')),(0,l.kt)("p",null,"A basic select picks a JSON object from the source payload and optionally places it in the target payload. To access items in the JSON object each element of the object hierarchy is described by the object name in square brackets. For example, to select the Speed element the source item would be set to ","[Machine Data][Speed]",". The same technique is used when choosing the target location. It is perfectly valid to have the source and target paths be the same."),(0,l.kt)("h3",{id:"basic-payload-manipulation"},"Basic payload manipulation"),(0,l.kt)("p",null,"This example extracts the Speed and makes it a top level object, keeps the Location and discards all other payload entries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"select": [\n {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location]\n    }\n]\n')),(0,l.kt)("p",null,"With the example payload this would result in the following output payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "Speed": 7.5,\n    "Location": "Freiburg"\n}\n')),(0,l.kt)("h3",{id:"select-aliases"},"Select Aliases"),(0,l.kt)("p",null,"When defining a select statement an alias can be created. This is a text string, that must not begin or end with a square bracket, that can be used is a where statement instead of the full JSON path."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location],\n        "alias": "location"\n    }\n]\n')),(0,l.kt)("h3",{id:"aggregate-functions"},"Aggregate functions"),(0,l.kt)("p",null,"Simple time aggregations can be defined for select statements for calculations over a time bucket. "),(0,l.kt)("p",null,"This includes the min, max, sum, count, and time_bucket functions. "),(0,l.kt)("p",null,"When a function is defined, the current values for each select statement is stored, and when a message is received, the payload is used to calculate the new value depending on the function in use. "),(0,l.kt)("p",null,"A new message will be republished/persisted for every message that is received, and will contain the current values. "),(0,l.kt)("p",null,"The current time bucket can be added to the target payload for identifying which bucket a message is in."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"time_bucket")," function defines the parameters of the time bucket to be used. "),(0,l.kt)("p",null,"It has the parameters intervalsize and intervaloffset, which are both in seconds. intervalsize defines the length of the time bucket and must be greater than 0. intervaloffset defines the start offset of the time bucket. "),(0,l.kt)("p",null,"So to create a 60 second time interval that starts at 15 seconds into the minute you would use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"select": [\n {\n        "source": "", # source is ignored for the `time_bucket` function\n        "target": "", # set to a JSON path to output to the payload, or blank to ignore\n        "function": {\n            "name": "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 15\n        }\n    }\n]\n')),(0,l.kt)("p",null,"Only one ",(0,l.kt)("inlineCode",{parentName:"p"},"time_bucket")," is allowed per query. The other functions are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max")," : the maximum value in the time bucket"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min")," : the minimum value in the time bucket"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sum")," : the sum of all values in the time bucket"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"count")," : the count of messages received in the time bucket. This function does not require a source.")),(0,l.kt)("p",null,"A more complete example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Data][SpeedMax]",\n        "alias" : "speedmax",\n        "function": {\n            "name" : "max"\n        }\n    },\n    {\n        "source": "[Machine Data][Power]",\n        "target": "[Data][PowerSum]",\n        "alias" : "powersum",\n        "function": {\n            "name" : "sum"\n        }\n    },\n    {\n        "target": "[Data][Count]",\n        "alias" : "IntervalCount",\n        "function": {\n            "name" : "count"\n        }\n    },\n    {\n        "source": "*",\n        "target": "",\n        "alias" : "timeInterval",\n        "function": {\n            "name" : "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 30\n        }\n    },\n    {\n        "source": "[Location]",\n        "target": "[Location]",\n        "alias" : "Location"\n    }\n]\n')),(0,l.kt)("p",null,"This would produce the output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "Data" {\n        "SpeedMax": 10,\n        "PowerSum": 123,\n        "Count": 3\n    },\n    "Location": "Freiburg"\n}\n')),(0,l.kt)("p",null,"The processing feature has some internal sources that can be used:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," : the current Unix timestamp in seconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"windowstart")," : the start of the current time bucket, if enabled"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"windowend")," : the end of the current time bucket, if enabled")),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"select": [\n    {\n        "source": "timestamp",\n        "target": "[Data][Now]",\n    }\n]\n')),(0,l.kt)("h3",{id:"choosing-messages-are-used-with-where-statements"},"Choosing messages are used with where statements"),(0,l.kt)("p",null,"It is possible to restrict which messages are processed and persisted by using a where statement."),(0,l.kt)("h2",{id:"stream-persistence-and-replay"},"Stream persistence and replay"),(0,l.kt)("p",null,"The stream persistence feature allows all messages received on a stream to be saved to disk and then replayed to a new topic at a later point in time. "),(0,l.kt)("p",null,"Persistence can be turned on or off at any point for any stream, if the feature is available."),(0,l.kt)("p",null,"When used on a stream that has processing configured, the processed payload will be stored not the original payload."),(0,l.kt)("p",null,"Stream persistence is not available for 32-bit platforms."),(0,l.kt)("h3",{id:"autosave_interval-seconds"},"autosave_interval seconds"),(0,l.kt)("p",null,"The number of seconds that mosquitto will wait between each time it saves the in-memory database to disk. If set to 0, the in-memory database will only be saved when mosquitto exits or when receiving the SIGUSR1 signal. Note that this setting only has an effect if persistence is enabled. Defaults to 1800 seconds (30 minutes)."),(0,l.kt)("p",null,"This option applies globally."),(0,l.kt)("p",null,"Reloaded on reload signal."),(0,l.kt)("h3",{id:"replaying"},"Replaying"),(0,l.kt)("p",null,"Replaying a stream means republishing its messages on a different topic. A single replay may be running for each stream at once."),(0,l.kt)("p",null,"To replay a stream, use the replayStream command. The only requirement for is to specify the destination topic. Further control is possible using the gte, lte, limit, speed, and reverse parameters."),(0,l.kt)("p",null,"If only the replaytopic parameter is provided, all of the messages stored for the stream will be republished in order, with the first message published immediately and subsequent messages published at approximately the same interval as the original messages."),(0,l.kt)("p",null,"The range and number of messages to be replayed can be limited using gte, lte, and limit. "),(0,l.kt)("p",null,"gte and lte are the lower and upper bounds of the time range that should be replayed, respectively. They are both Unix timestamps in seconds. "),(0,l.kt)("p",null,'Both are optional, so specifying a range "all messages up to this point" or "all messages since this point" are both possible, as well as "only messages within this range".'),(0,l.kt)("p",null,"The limit parameter limits the total number of messages that will be replayed, and can be used in conjunction with gte and/or lte, or on its own. The default value of -1 means there is no numerical limit."),(0,l.kt)("p",null,'The speed of the replay can be controlled using the speed parameter. Set to the string "original" to keep the original speed, or to "fastest" to be republished at the fastest rate possible. '),(0,l.kt)("p",null,"Alternatively, set to a number to specify an exact speed multiple, e.g. setting to 2.5 would replay the stream 2.5x faster than the original."),(0,l.kt)("p",null,"Stopping an in-progress replay for a stream can be done using the stopStreamReplay command."),(0,l.kt)("h3",{id:"persistence_location-path"},"persistence_location path"),(0,l.kt)("p",null,"The path where the persistence database should be stored. If not given, then the current directory is used."),(0,l.kt)("p",null,"This option applies globally."),(0,l.kt)("p",null,"Current versions (2.0 and earlier) only use this for internal persistence location, but later versions will allow this to be set for use by all plugins."),(0,l.kt)("p",null,"Reloaded on reload signal."),(0,l.kt)("h3",{id:"message-count"},"Message count"),(0,l.kt)("p",null,"It is possible to obtain the estimated number of message currently persisted using the getStreamMessageCount command."),(0,l.kt)("h3",{id:"clearing-messages"},"Clearing messages"),(0,l.kt)("p",null,"Persisted messages can be manually cleared using the clearStreamMessages API command. "),(0,l.kt)("p",null,"This completely removes the messages from disk and can not be undone."),(0,l.kt)("p",null,"All messages can be cleared, or a range of messages can be cleared based on the message timestamp in unix timestamp seconds format."),(0,l.kt)("p",null,"Use the gte parameter to specify the lower bound of the timestamp that will be cleared, and the lte parameter to specify the upper bound of the range to be cleared."),(0,l.kt)("p",null,"See the API description for details of gte and lte."),(0,l.kt)("h3",{id:"time-to-live-ttl"},"Time to Live (TTL)"),(0,l.kt)("p",null,"When creating a new stream and enabling persistence, the Time to Live (TTL) property will be used, which allows the disk usage of streams to be limited."),(0,l.kt)("p",null,"Setting TTL to 0 means that all messages received will be kept on disk forever, unless they are manually cleared."),(0,l.kt)("p",null,"Setting TTL to a positive integer means that messages will be removed from the persistence store in the future."),(0,l.kt)("p",null,"TTL is measured in seconds, and guarantees that messages that are younger than that number of seconds will be kept in the database."),(0,l.kt)("p",null,"Messages older than the TTL interval are not immediately removed from the database: they can remain in the database until at most twice the TTL interval before they are removed, depending on when they were received."),(0,l.kt)("h3",{id:"api-description"},"API description"),(0,l.kt)("p",null,"The CSP plugin is controlled over the ",(0,l.kt)("inlineCode",{parentName:"p"},"$CONTROL/stream-processing/v1")," topic, with replies published to ",(0,l.kt)("inlineCode",{parentName:"p"},"$CONTROL/stream-processing/v1/response"),". You should ensure that your access control solution denies access to these topics for unauthorized users."),(0,l.kt)("p",null,"Commands are sent as JSON payloads, as described in the command sections below. The examples in each section show only a single command in the command array, but multiple commands can be sent at once and will be processed in order."),(0,l.kt)("p",null,"Commands will generate a response on the response topic. Unless otherwise specified, this will consist of the command string, the optional correlationData string, and an error string. If the command completed successfully, the error string will not be present. Where a command returns data in the response there will be a data object with contents as described in the individual command sections."),(0,l.kt)("p",null,"Response payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "responses":[\n        {\n            "command": "getStreamMessageCount",\n            "correlationData": "3c079967-5bee-4409-aa9f-a963180cde94",\n            "error": "Persistence not configured for this stream"\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"clearstreammessages"},"clearStreamMessages"),(0,l.kt)("p",null,"Clear persisted messages within a defined range.\nParameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be cleared."),(0,l.kt)("li",{parentName:"ul"},'gte : optional lower bound of the range to be cleared, i.e. all messages more recent than this will be cleared. If not present or set to "", then no lower bound will be used. Unix timestamp in seconds.'),(0,l.kt)("li",{parentName:"ul"},'lte : optional upper bound of the range to be cleared, i.e. all messages older than this will be cleared. If not present or set to "", then no upper bound will be used. Unix timestamp in seconds.'),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Non-code examples:"),(0,l.kt)("h4",{id:"clear-all-messages-that-are-more-recent-than-1620131088"},"Clear all messages that are more recent than 1620131088."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"clearStreamMessages gte=1620131088")),(0,l.kt)("h4",{id:"clear-all-messages-that-are-older-than-1620131088"},"Clear all messages that are older than 1620131088."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"clearStreamMessages lte=1620131088")),(0,l.kt)("h4",{id:"clear-all-messages-that-are-more-recent-than-1620044688-and-are-also-older-than-1620131088"},"Clear all messages that are more recent than 1620044688 and are also older than 1620131088."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"clearStreamMessages gte=1620044688 lte=1620131088")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "clearStreamMessages",\n            "streamname": "<name of stream>",\n            "gte": <optional lower bound as unix timestamp number>,\n            "lte": <optional upper bound as unix timestamp number>,\n            "correlationData": ""`\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"createstream-and-modifystream"},"createStream and modifyStream"),(0,l.kt)("p",null,"Create a new stream, or modify an existing stream.\nWhen modifying a stream, only parameters that are present in the JSON payload are updated."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be created/modified."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value."),(0,l.kt)("li",{parentName:"ul"},"sourcetopic : the MQTT topic that will be used as the source of messages."),(0,l.kt)("li",{parentName:"ul"},"targettopic : optional MQTT topic where stream messages will be republished."),(0,l.kt)("li",{parentName:"ul"},"targetqos : optional QoS that will be used when republishing messages. If set to -1 then the original QoS will be used."),(0,l.kt)("li",{parentName:"ul"},"ttl : optional Time to Live in seconds that will be used when persisting messages."),(0,l.kt)("li",{parentName:"ul"},"active : boolean, if set to true the stream will be enabled and operational. If set to false, none of the stream features will be used."),(0,l.kt)("li",{parentName:"ul"},"process : boolean, if set to true the stream processing feature will be enabled. If set to false, stream processing will be disabled and payloads will be republished without modification."),(0,l.kt)("li",{parentName:"ul"},"persist : boolean, if set to true the stream persistence feature will be enabled. If set to false, stream persistence will be disabled and messages will not be persisted to disk."),(0,l.kt)("li",{parentName:"ul"},"textname : optional user string to name the stream."),(0,l.kt)("li",{parentName:"ul"},"textdescription : optional user string to describe the stream."),(0,l.kt)("li",{parentName:"ul"},"query : optional object used with the processing feature, can contain a select and/or a where array."),(0,l.kt)("li",{parentName:"ul"},"select : optional query array"),(0,l.kt)("li",{parentName:"ul"},"where : optional query array. At the moment this array can only contain a single object with an operator, left, and right members. The left string is a JSON path field or alias. The right item can only be a value and can be a string, number, or boolean. The operator is a string which can be one of ==, !=, >, <, >=, or <=.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "createStream",\n            "streamname": "<name>",\n            "correlationData": "",\n            "sourcetopic": "",\n            "targettopic": "",\n            "targetqos": -1|0|1|2,\n            "ttl": 86400,\n            "active": true|false,\n            "process": true|false,\n            "persist": true|false,\n            "textname": "",\n            "textdescription": "",\n            "query": {\n                "select": [\n                    {\n                        "source": "",\n                        "target": "",\n                        "alias": "",\n                        "function": {\n                            "name": ""\n                        }\n                    }\n                ],\n                "where": [\n                    {\n                        "operator": "==",\n                        "left": "",\n                        "right: ""\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"deletestream"},"deleteStream"),(0,l.kt)("p",null,"Delete a stream. "),(0,l.kt)("p",null,"This cannot be undone."),(0,l.kt)("p",null,"If the stream is currently carrying out a replay, the replay will be stopped."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be deleted."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. ")),(0,l.kt)("p",null,"Use a random/unique value."),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js{"},'    "commands": [\n        {\n            "command": "deleteStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"disablestream"},"disableStream"),(0,l.kt)("p",null,"Disable an existing stream."),(0,l.kt)("p",null,"Enabling / setting active here means that the stream will accept messages and process, persist, and republish them as it is configured. "),(0,l.kt)("p",null,"If a stream is disabled / set inactive then it will not process, persist, or republish messages."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be disabled."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. ")),(0,l.kt)("p",null,"Use a random/unique value."),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js{"},' "commands": [\n        {\n            "command": "disableStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"enablestream"},"enableStream"),(0,l.kt)("p",null,"Enable an existing stream. Enabling / setting active here means that the stream will accept messages and process, persist, and republish them as it is configured."),(0,l.kt)("p",null,"If a stream is disabled / set inactive then it will not process, persist, or republish messages."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be enabled."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. ")),(0,l.kt)("p",null,"Use a random/unique value."),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "enableStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"getlicense"},"getLicense"),(0,l.kt)("p",null,"Retrieve the current licensed features."),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "getLicense",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"Response payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "responses":[\n        {\n            "command": "getLicense",\n            "correlationData": "",\n            "data": {\n                "issuedBy": "Cedalo AG",\n                "issuedTo": "name@customer.com",\n                "comment": "Comment",\n                "serial": "00000000-0000-0000-0000-000000000000",\n                "features": [\n                    {\n                        "name": "stream-count",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000,\n                        "count": -1\n                    },\n                    {\n                        "name": "stream-processing",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000\n                    },\n                    {\n                        "name": "stream-persistence",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"getstream"},"getStream"),(0,l.kt)("p",null,"Get information on a stream."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be queried."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "getStream",\n            "streamname": "<name>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"Response payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "responses":[\n        {\n            "command": "getStream",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name>",\n                "sourcetopic": "",\n                "targettopic": "",\n                "textname": "",\n                "textdescription": "",\n                "targetqos": -1,\n                "ttl": 86400,\n                "active": true|false,\n                "process": true|false,\n                "persist": true|false,\n                "replaying": true|false,\n                "query": {\n                    # Query spec\n                }\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"getstreammessagecount"},"getStreamMessageCount"),(0,l.kt)("p",null,"Retrieve the approximate count of messages that are currently persisted."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be queried."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "getStreamMessageCount",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"Response payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "responses":[\n        {\n            "command": "getStreamMessageCount",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name of stream>",\n                "count": <count>\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"liststreams"},"listStreams"),(0,l.kt)("p",null,"List all configured streams."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"verbose : boolean, if set to false a simple list of stream names will be returned. If set to true, the list of streams will be returned as objects in the same format as when using the getStream command."),(0,l.kt)("li",{parentName:"ul"},"count : optional maximum number of streams to return."),(0,l.kt)("li",{parentName:"ul"},"offset : optional offset to start the stream list."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "listStreams",\n            "streamname": "<name>",\n            "verbose": true|false,\n            "count": <number>,\n            "offset": <number>\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"Response payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "responses":[\n        {\n            "command": "listStreams",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name>",\n                "sourcetopic": "",\n                "targettopic": "",\n                "textname": "",\n                "textdescription": "",\n                "targetqos": -1|0|1|2,\n                "ttl": 86400,\n                "active": true|false,\n                "process": true|false,\n                "persist": true|false,\n                "replaying": true|false,\n                "query": {\n                    # Query spec\n                }\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"replaystream"},"replayStream"),(0,l.kt)("p",null,"Replay a persisted stream to a different topic."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be replayed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"replaytopic")," : The topic where the messages will be published."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gte"),' : optional lower bound of the range to be cleared, i.e. all messages more recent than this will be replayed. If not present or set to "", then no lower bound will be used. Unix timestamp in seconds.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lte"),' : optional upper bound of the range to be cleared, i.e. all messages older than this will be replayed. If not present or set to "", then no upper bound will be used. Unix timestamp in seconds.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"limit")," : optionally limit the number of messages replayed. This number represents a maximum value and may not be reached if there are not enough messages persisted. A value of -1, the default, means that no numerical limit will be applied."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"speed"),' : optionally change the speed at which the messages are replayed. This can be one of the strings "original" or "fastest", or a number indicating the factor. For example, a speed of 2.5 means replay at 2.5x the original speed.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reverse")," : optionally set to true to play the messages in reverse order."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "replayStream",\n            "streamname": "<name of stream>",\n            "replaytopic": "<replay destination topic>",\n            "gte": <optional lower bound as unix timestamp number>,\n            "lte": <optional upper bound as unix timestamp number>,\n            "limit": <optional message limit, number>,\n            "speed": <optional replay speed, number>,\n            "reverse": <optional reverse playback mode, boolean>,\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,l.kt)("h3",{id:"stopstreamreplay"},"stopStreamReplay"),(0,l.kt)("p",null,"Stop a stream replay, if it is running."),(0,l.kt)("p",null,"Parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"streamname : the name of the stream to be stopped."),(0,l.kt)("li",{parentName:"ul"},"correlationData : optional string that can be used to correlate commands with responses. Use a random/unique value.")),(0,l.kt)("p",null,"Command payload:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'{\n "commands": [\n        {\n            "command": "stopStreamReplay",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')))}d.isMDXComponent=!0}}]);