"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[81129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},10671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>y,frontMatter:()=>u,metadata:()=>m,toc:()=>k});var r=n(3905),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e};const u={id:"proxy-protocol",title:"Proxy Protocol",sidebar_label:"Proxy Protocol"},h=void 0,m={unversionedId:"advanced-features/proxy-protocol",id:"version-3.1/advanced-features/proxy-protocol",title:"Proxy Protocol",description:"Introduction",source:"@site/mosquitto_versioned_docs/version-3.1/advanced-features/proxy-protocol.md",sourceDirName:"advanced-features",slug:"/advanced-features/proxy-protocol",permalink:"/mosquitto/advanced-features/proxy-protocol",draft:!1,tags:[],version:"3.1",frontMatter:{id:"proxy-protocol",title:"Proxy Protocol",sidebar_label:"Proxy Protocol"},sidebar:"someSidebar",previous:{title:"Sparkplug Decode",permalink:"/mosquitto/advanced-features/sparkplug/sparkplug-decode"},next:{title:"Overview",permalink:"/mosquitto/advanced-features/streams/streams-index"}},f={},k=[{value:"Introduction",id:"introduction",level:2},{value:"Choosing between PROXY v1 and v2",id:"choosing-between-proxy-v1-and-v2",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Backward compatible",id:"backward-compatible",level:3},{value:"HA Proxy Configuration examples",id:"ha-proxy-configuration-examples",level:2},{value:"HA Proxy General setup",id:"ha-proxy-general-setup",level:3},{value:"Global section",id:"global-section",level:4},{value:"Defaults section",id:"defaults-section",level:4},{value:"Proxy configuration examples",id:"proxy-configuration-examples",level:3},{value:"Direct pass-through, without PROXY protocol",id:"direct-pass-through-without-proxy-protocol",level:4},{value:"TLS termination with server certificate only, without PROXY protocol",id:"tls-termination-with-server-certificate-only-without-proxy-protocol",level:4},{value:"TLS termination with mutual TLS - client and server certificates, without PROXY protocol",id:"tls-termination-with-mutual-tls---client-and-server-certificates-without-proxy-protocol",level:4},{value:"Direct pass-through, with PROXY v2 protocol",id:"direct-pass-through-with-proxy-v2-protocol",level:4},{value:"TLS termination with server certificate only, with PROXY v2 protocol",id:"tls-termination-with-server-certificate-only-with-proxy-v2-protocol",level:4},{value:"TLS termination with mutual TLS - client and server certificate, with PROXY v2 protocol",id:"tls-termination-with-mutual-tls---client-and-server-certificate-with-proxy-v2-protocol",level:4},{value:"TLS termination with mutual TLS - client and server certificate, with username and PROXY v2 protocol",id:"tls-termination-with-mutual-tls---client-and-server-certificate-with-username-and-proxy-v2-protocol",level:4},{value:"NGINX PROXY v1 example",id:"nginx-proxy-v1-example",level:2}],v={toc:k};function y(e){var t,n=e,{components:o}=n,p=((e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=d(d({},v),p),i(t,a({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h2",d({},{id:"introduction"}),"Introduction"),(0,r.kt)("p",null,"Using Mosquitto as an entirely standalone broker works very well, but sometimes\nyou may wish to place it behind a load balancer / proxy such as HAProxy or\nNGINX. This provides certain advantages such as carrying out TLS termination\nin the proxy to reduce load on the broker."),(0,r.kt)("p",null,"It does have one disadvantage which is that only\nthe proxy IP address is found in the broker logs - the client IP addresses are\nnot seen."),(0,r.kt)("p",null,"This page describes some different ways you can combine Mosquitto and\nHAProxy. It is not a complete guide to HAProxy."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important:")," Enabling PROXY protocol support requires that the broker itself\nis not directly accessible on its network port. All communication must go\nthrough the proxy. If a client is able to connect to the broker directly, it\nis trivial to spoof connection information and this is especially important\nwhen using client certificates for mutual TLS on HAProxy. In that case, the\ncontents of the PROXY header can directly indicate whether a client is allowed\nto connect so it must be protected."),(0,r.kt)("p",null,"It may be desirable to use a firewall to restrict access to the broker port."),(0,r.kt)("h2",d({},{id:"choosing-between-proxy-v1-and-v2"}),"Choosing between PROXY v1 and v2"),(0,r.kt)("p",null,"Where it is available you should always prefer PROXY v2. It is more efficient\nand has more features. In particular, v1 does not support anything other than\npassing on IPv4 and IPv6 addresses and ports. It does not have support for\npassing on TLS information when termination is carried out on the proxy, which\nrestricts the possibility of using client certificates."),(0,r.kt)("p",null,"Not all proxies support PROXY v2, however, so if you are using e.g. nginx you\nwill need to opt for PROXY v1."),(0,r.kt)("h2",d({},{id:"configuration"}),"Configuration"),(0,r.kt)("p",null,"Pro Mosquitto supports both PROXY v1 and v2 and can be enabled with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"enable_proxy_protocol")," option. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example configuration of a port using PROXY v2"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 2\n# Further listener settings\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example configuration of a port using PROXY v1"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 1\n# Further listener settings\n")),(0,r.kt)("h3",d({},{id:"backward-compatible"}),"Backward compatible"),(0,r.kt)("p",null,"In Mosquitto 2.9 only PROXY v2 is supported and can be enabled using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"enable_proxy_protocol_v2")," option.\nThis option remains valid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example configuration of a port"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol_v2\n# Further listener settings\n")),(0,r.kt)("h2",d({},{id:"ha-proxy-configuration-examples"}),"HA Proxy Configuration examples"),(0,r.kt)("h3",d({},{id:"ha-proxy-general-setup"}),"HA Proxy General setup"),(0,r.kt)("p",null,"All examples presented will be of the ",(0,r.kt)("inlineCode",{parentName:"p"},"haproxy.cfg")," file, typically located at\n",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/haproxy/haproxy.cfg")," on a native Linux installation."),(0,r.kt)("p",null,"The first part of the config file contains the ",(0,r.kt)("inlineCode",{parentName:"p"},"global")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"defaults")," sections\nwhich are going to be common to all the examples and not repeated."),(0,r.kt)("h4",d({},{id:"global-section"}),"Global section"),(0,r.kt)("p",null,"This is a fairly standard global section, presented without comment."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"global\n        log /dev/log    local0\n        log /dev/log    local1 notice\n        user haproxy\n        group haproxy\n        daemon\n\n        # Default SSL material locations\n        ca-base /etc/ssl/certs\n        crt-base /etc/ssl/private\n\n        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate\n        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384\n        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\n        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets\n")),(0,r.kt)("h4",d({},{id:"defaults-section"}),"Defaults section"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"defaults\n        mode    tcp\n        timeout connect 5000\n        timeout client  60000\n        timeout server  60000\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mode tcp")," - set TCP mode rather than HTTP mode by default. MQTT is not HTTP."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout connect 5000")," - the timeout allowed for a client to connect, in\nmilliseconds."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout client 60000")," - if a client does not communicate in this interval,\nthe connection will be closed by HAProxy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout server 60000")," - if the broker does not communicate in this interval,\nthe connection will be closed by HAProxy.")),(0,r.kt)("p",null,"The client and server timeout intervals should be chosen based on the intervals\nyou expect to have communication occurring in your clients. If your\ncommunication is typically very sparse, the timeout should be chosen based on\nyour keepalive interval, otherwise the quiet clients will be disconnected\nbefore they have chance to send a keepalive request."),(0,r.kt)("h3",d({},{id:"proxy-configuration-examples"}),"Proxy configuration examples"),(0,r.kt)("h4",d({},{id:"direct-pass-through-without-proxy-protocol"}),"Direct pass-through, without PROXY protocol"),(0,r.kt)("p",null,"The most basic approach is to pass connections directly through HAProxy to\nMosquitto without being modified. This means that if an unencrypted MQTT\nconnection is made, it will pass through as an unencrypted connection, and if an\nencrypted MQTT connection is made it will pass through as an encrypted MQTT\nconnection. Likewise, websockets connections are passed through unaffected."),(0,r.kt)("p",null,"Create a frontend, which is where HAProxy will listen for connections, and a\nbackend, which is where the broker that HAProxy will connect to is defined."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtt_frontend\n         bind *:1883\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1884 check on-marked-down shutdown-sessions\n")),(0,r.kt)("p",null,"In this case, HAProxy is listening on all interfaces on port 1883 and will\nattempt to connect to the broker on address 127.0.0.1 on port 1884. In other\nwords, HAProxy and Mosquitto are running on the same instance. This is not\nrequired."),(0,r.kt)("p",null,"The broker configuration could be with an encrypted or unencrypted listener:"),(0,r.kt)("p",null,"Unencrypted:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1884\n# Further listener settings\n")),(0,r.kt)("p",null,"Encrypted:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1884\ncertfile <path/to/server.crt>\nkeyfile <path/to/server.key>\n# Further listener settings\n")),(0,r.kt)("h4",d({},{id:"tls-termination-with-server-certificate-only-without-proxy-protocol"}),"TLS termination with server certificate only, without PROXY protocol"),(0,r.kt)("p",null,"Place your server certificate and private key in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/haproxy/certs/"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtts_frontend\n         bind 0.0.0.0:8883 ssl crt /etc/haproxy/certs/\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1883 check on-marked-down shutdown-sessions\n")),(0,r.kt)("p",null,"The broker configuration should declare an unencrypted listener:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\n# Further listener settings\n")),(0,r.kt)("h4",d({},{id:"tls-termination-with-mutual-tls---client-and-server-certificates-without-proxy-protocol"}),"TLS termination with mutual TLS - client and server certificates, without PROXY protocol"),(0,r.kt)("p",null,"In addition to the server certificate, you must also provide the CA certificate\nthat will sign the client certificates, ask for verification of the client\ncertificate and make the certificate required."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtts_frontend\n         bind *:8883 ssl crt /etc/haproxy/certs/ verify required ca-file /etc/haproxy/client-ca.crt\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1883 check on-marked-down shutdown-sessions\n")),(0,r.kt)("p",null,"The broker configuration should declare an unencrypted listener:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\n# Further listener settings\n")),(0,r.kt)("h4",d({},{id:"direct-pass-through-with-proxy-v2-protocol"}),"Direct pass-through, with PROXY v2 protocol"),(0,r.kt)("p",null,"To enable PROXY protocol v2 on HAProxy, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2")," option to the backend."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtt_frontend\n         bind *:1883\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1884 check on-marked-down shutdown-sessions send-proxy-v2\n")),(0,r.kt)("p",null,"The broker configuration should declare an unencrypted listener and enable\nPROXY protocol v2 support. It is not possible to have a direct pass-through\nwith encrypted connections on the broker."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 2\n# Further listener settings\n")),(0,r.kt)("h4",d({},{id:"tls-termination-with-server-certificate-only-with-proxy-v2-protocol"}),"TLS termination with server certificate only, with PROXY v2 protocol"),(0,r.kt)("p",null,"For TLS connections, use ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2-ssl")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2"),". This\nensures that TLS information is added to the PROXY header."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtts_frontend\n         bind *:8883 ssl crt /etc/haproxy/certs/\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1883 check on-marked-down shutdown-sessions send-proxy-v2-ssl\n")),(0,r.kt)("p",null,"On the broker side, use ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy_protocol_v2_require_tls true")," to ensure that\nonly connections that were made using TLS are accepted on the broker. No other\nTLS configuration is required."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 2\nproxy_protocol_v2_require_tls true\n")),(0,r.kt)("h4",d({},{id:"tls-termination-with-mutual-tls---client-and-server-certificate-with-proxy-v2-protocol"}),"TLS termination with mutual TLS - client and server certificate, with PROXY v2 protocol"),(0,r.kt)("p",null,"For TLS connections, use ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2-ssl")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2"),". This\nensures that TLS information is added to the PROXY header."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtts_frontend\n         bind *:8883 ssl crt /etc/haproxy/certs/ verify required ca-file /etc/haproxy/client-ca.crt\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1883 check on-marked-down shutdown-sessions send-proxy-v2-ssl\n")),(0,r.kt)("p",null,"The broker configuration uses ",(0,r.kt)("inlineCode",{parentName:"p"},"require_certificate true")," to indicate that\nthe broker should check the PROXY protocol header for the valid certificate\nresult. No other TLS configuration is required."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 2\nproxy_protocol_v2_require_tls true\nrequire_certificate true\n")),(0,r.kt)("h4",d({},{id:"tls-termination-with-mutual-tls---client-and-server-certificate-with-username-and-proxy-v2-protocol"}),"TLS termination with mutual TLS - client and server certificate, with username and PROXY v2 protocol"),(0,r.kt)("p",null,"The Mosquitto option ",(0,r.kt)("inlineCode",{parentName:"p"},"use_identity_as_username true")," can be used with the PROXY\nprotocol support. This requires that the ",(0,r.kt)("inlineCode",{parentName:"p"},"send-proxy-v2-ssl-cn")," option is used\non HAProxy."),(0,r.kt)("p",null,"It is not possible to use ",(0,r.kt)("inlineCode",{parentName:"p"},"use_subject_as_username")," with the PROXY protocol."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"frontend mqtts_frontend\n         bind *:8883 ssl crt /etc/haproxy/certs/ verify required ca-file /etc/haproxy/client-ca.crt\n         default_backend mqtt_backend\n\nbackend mqtt_backend\n        server server1 127.0.0.1:1883 check on-marked-down shutdown-sessions send-proxy-v2-ssl-cn\n")),(0,r.kt)("p",null,"The broker configuration uses ",(0,r.kt)("inlineCode",{parentName:"p"},"require_certificate")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"use_identity_as_username"),". No other TLS configuration is required."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1883\nenable_proxy_protocol 2\nproxy_protocol_v2_require_tls true\nrequire_certificate true\nuse_identity_as_username true\n")),(0,r.kt)("h2",d({},{id:"nginx-proxy-v1-example"}),"NGINX PROXY v1 example"),(0,r.kt)("p",null,"This example configures NGINX to listen on port 8883 and forward TCP\nconnections to a Mosquitto broker configured to use a TLS connection."),(0,r.kt)("p",null,"NGINX configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"stream {\n    server {\n        listen 8883;\n        proxy_pass 127.0.0.1:1884;\n        proxy_protocol on;\n    }\n}\n")),(0,r.kt)("p",null,"Mosquitto configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"listener 1884\ncertfile <path/to/server.crt>\nkeyfile <path/to/server.key>\n# Further listener settings\n")))}y.isMDXComponent=!0}}]);