"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[45291],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(o),m=r,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return o?n.createElement(h,i(i({ref:t},d),{},{components:o})):n.createElement(h,i({ref:t},d))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},2643:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>f,contentTitle:()=>m,default:()=>g,frontMatter:()=>p,metadata:()=>h,toc:()=>k});var n=o(3905),r=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,o)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,u=(e,t)=>{for(var o in t||(t={}))s.call(t,o)&&d(e,o,t[o]);if(l)for(var o of l(t))c.call(t,o)&&d(e,o,t[o]);return e};const p={id:"docker-single-node",title:"Docker Single Node",sidebar_label:"Single Node"},m=void 0,h={unversionedId:"deployment/on-premises/deployment/installation/docker/docker-single-node",id:"version-3.1/deployment/on-premises/deployment/installation/docker/docker-single-node",title:"Docker Single Node",description:"The following is a step-by-step tutorial to guide you through the installation process of Mosquitto Pro Docker.",source:"@site/mosquitto_versioned_docs/version-3.1/deployment/on-premises/deployment/installation/docker/docker-single-node.md",sourceDirName:"deployment/on-premises/deployment/installation/docker",slug:"/deployment/on-premises/deployment/installation/docker/docker-single-node",permalink:"/mosquitto/deployment/on-premises/deployment/installation/docker/docker-single-node",draft:!1,tags:[],version:"3.1",frontMatter:{id:"docker-single-node",title:"Docker Single Node",sidebar_label:"Single Node"},sidebar:"someSidebar",previous:{title:"Download On-Premises Setup",permalink:"/mosquitto/deployment/on-premises/deployment/installation/on-premise-setup"},next:{title:"High Availability",permalink:"/mosquitto/deployment/on-premises/deployment/installation/docker/docker-high-availability"}},f={},k=[{value:"Install Docker Environment",id:"install-docker-environment",level:2},{value:"Start the Pro Mosquitto Setup",id:"start-the-pro-mosquitto-setup",level:2},{value:"Check Status",id:"check-status",level:3},{value:"Access the Cedalo MQTT Platform",id:"access-the-cedalo-mqtt-platform",level:3},{value:"Connect a client",id:"connect-a-client",level:4},{value:"Example Docker Compose",id:"example-docker-compose",level:2}],y={toc:k};function g(e){var t,r=e,{components:d}=r,p=((e,t)=>{var o={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&c.call(e,n)&&(o[n]=e[n]);return o})(r,["components"]);return(0,n.kt)("wrapper",(t=u(u({},y),p),a(t,i({components:d,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"The following is a step-by-step tutorial to guide you through the installation process of Mosquitto Pro Docker.\nThe tutorial assumes you have downloaded the Mosquitto Installer from us and have a valid license to work with. You can get a trial license by setting up an account on our website ",(0,n.kt)("a",u({parentName:"p"},{href:"https://cedalo.com"}),"www.cedalo.com"),"."),(0,n.kt)("h2",u({},{id:"install-docker-environment"}),"Install Docker Environment"),(0,n.kt)("p",null,"To run Cedalo Docker products, you need an installed version of docker and docker compose.\nDocker is not system depended and can be installed on Windows, Mac or Linux. Please see more information about docker and usage specifications on their website. "),(0,n.kt)("p",null,"Open the following link and install ",(0,n.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/engine/install/"}),"Docker"),".\nIf you have not installed a version of docker desktop and only installed the docker engine, make sure to further install ",(0,n.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"Docker Compose"),"."),(0,n.kt)("img",{className:"docimagemb",src:o(41467).Z,width:"50%"}),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Figure 1 - Docker Desktop Installer")),(0,n.kt)("p",null,"Make sure your system meets the minimum requirements."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"\u25cf 64 - bit processor with Second Level Address Translation (SLAT)\n\u25cf 4GB system RAM\n\u25cf BIOS-level hardware virtualization support must be enabled in the BIOS settings. The status can be\nchecked in your Task Manger:\n")),(0,n.kt)("admonition",u({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"If you choose Hyper-V make sure visualization is enabled. If Visualization is not enabled, you will have to turn it on in your BIOS.\nIf you don \u0301t know how: Here is a very good step-by-step ",(0,n.kt)("a",u({parentName:"p"},{href:"https://mashtips.com/enable-virtualization-windows-10/"}),"tutorial"),".")),(0,n.kt)("p",null,"After installing make sure docker is running.\nOn a typical installation the Docker daemon is started by a system utility, not manually by a user. This makes it easier to automatically start Docker when the machine reboots.\nThe command to start Docker depends on your operating system. Check the correct page under Install ",(0,n.kt)("a",u({parentName:"p"},{href:"https://docs.docker.com/engine/install/"}),"Docker"),"."),(0,n.kt)("h2",u({},{id:"start-the-pro-mosquitto-setup"}),"Start the Pro Mosquitto Setup"),(0,n.kt)("p",null,"Download the shared setup via our platform. You either have access through our trial or through a valid subscription to an on-premises plan. A trial license gives full access to all features. The downloaded setup has set reasonable default configurations and can be started without further changes. If you already know, which changes you want to make, you can do so now."),(0,n.kt)("p",null,'If you have downloaded your setup via the Cedalo Platfrom, the license file, named "license.lic," is already included and can be found at ',(0,n.kt)("inlineCode",{parentName:"p"},"./license/license.lic"),".\nIf not, please manually add your license file."),(0,n.kt)("p",null,"To start Pro Mosquitto and the Cedalo MQTT Platform, navigate to the setup folder using the terminal and run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"docker compose up -d\n")),(0,n.kt)("admonition",u({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"For older versions of Docker, Docker Compose is installed separately and is invoked using ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"docker compose"),".")),(0,n.kt)("admonition",u({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"In-between Docker Desktop can warn you about file-sharing. File-sharing is intended by Cedalo. The Docker container would otherwise not be able to access certain files from the platform configuration that are stored in a regular Windows folder. Make sure to allow this access.")),(0,n.kt)("h3",u({},{id:"check-status"}),"Check Status"),(0,n.kt)("p",null,"During installation, a Docker environment will be created for Mosquitto Pro, consisting of two containers: one for Mosquitto and another for the Management Center (Cedalo MQTT Platform). To verify that both containers are running, use the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"docker ps\n")),(0,n.kt)("p",null,"You should see both the Mosquitto broker and the Cedalo MQTT platform listed as running."),(0,n.kt)("p",null,"For more detailed information, you can check the logs of the containers. To view the logs, run the following command from the root directory:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"docker-compose logs\n")),(0,n.kt)("h3",u({},{id:"access-the-cedalo-mqtt-platform"}),"Access the Cedalo MQTT Platform"),(0,n.kt)("p",null,"By default, the test setup is accessible only on localhost, with MQTT port 1883 and HTTP port 3000 bound to the local machine. If you need external access to this setup, adjust the port configuration in the docker-compose.yml file accordingly."),(0,n.kt)("p",null,"To access the Management Center UI for your initial broker setup, go to http://localhost:3000/. You will be prompted to create your admin credentials when you first log in."),(0,n.kt)("p",null,"If you're using the Enterprise version of the Cedalo Platform, you can configure additional users within each project's settings."),(0,n.kt)("h4",u({},{id:"connect-a-client"}),"Connect a client"),(0,n.kt)("p",null,'To connect your first client to the Pro Mosquitto broker, create a new client account and assign it a role. For full permissions to publish and subscribe, choose the role "client". For a detailed walkthrough of this process, please refer to our ',(0,n.kt)("a",u({parentName:"p"},{href:"/mosquitto/getting-started/trial-broker-onboarding"}),"Onboarding Guide"),"."),(0,n.kt)("p",null,"To connect to your Mosquitto instance, use the address localhost:1883 and the credentials you set up during the client account creation."),(0,n.kt)("p",null,"If you need to enable anonymous access, add the following line to your mosquitto.conf file under the listener configuration:\n",(0,n.kt)("inlineCode",{parentName:"p"},"allow_anonymous true")),(0,n.kt)("h2",u({},{id:"example-docker-compose"}),"Example Docker Compose"),(0,n.kt)("p",null,"Image names in our default setups and this example always pull the latest patch for each minor release. For instance, 3.0 will automatically pull 3.0.x based on the available patch version."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"services:\n  mosquitto:\n    image: registry.cedalo.com/mosquitto/mosquitto:3.0\n    ports:\n      - 1883:1883 # MQTT no TLS\n      - 8883:8883 # MQTT with TLS (needs to be configured in mosquitto.conf)\n      - 8090:8090 # Websocket no TLS (needs to be configured in mosquitto.conf)\n    networks:\n      - cedalo-platform\n    environment:\n      CEDALO_LICENSE_FILE: /mosquitto/license/license.lic\n    volumes:\n      - ./mosquitto/config:/mosquitto/config\n      - ./mosquitto/data:/mosquitto/data\n      - ./license:/mosquitto/license/\n  platform:\n    image: registry.cedalo.com/platform/enterprise:3.0\n    # image registry.cedalo.com/platform/business:3.0  // Enterprise images only run with an enterprise license. Choose the right image for your license. \n    platform: linux/amd64\n    ports:\n      - 3000:3000\n    expose:\n      - 3000\n    depends_on:\n      - mosquitto\n    networks:\n      - cedalo-platform\n    environment:\n      API_INTERNAL_HOST: platform\n      BASE_URL: http://localhost:3000\n      NEXTAUTH_URL: http://localhost:3000\n      MOSQUITTO_PLATFORM_LICENSE_FILE: /platform/license/license.lic\n      AUTH_SECRET: Efe9QCR1ViHDrGMv\n      SETUP_TYPE: single\n\n    volumes:\n      - ./platform/data:/data\n      - ./license:/platform/license/\n      # map unix socket for audit trail:\n      # - /dev/log:/dev/log\nnetworks:\n  cedalo-platform:\n    name: cedalo-platform\n    driver: bridge\n")))}g.isMDXComponent=!0},41467:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/dockerdesktop-848606ac0f247d7a1b3412ab7f9bc01b.png"}}]);