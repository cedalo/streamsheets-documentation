"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[64196],{75943:function(t,e,n){var a=n(95318);e.Z=void 0;var r=a(n(64938)),l=n(85893),o=(0,r.default)((0,l.jsx)("path",{d:"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z"}),"Science");e.Z=o},99813:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return m},default:function(){return p}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=(n(92313),n(93866),n(13977),["components"]),i={id:"mongoreplace",title:"MONGO.REPLACE",hide_title:!0},u=void 0,s={unversionedId:"functions/databases/mongoreplace",id:"functions/databases/mongoreplace",title:"MONGO.REPLACE",description:"MONGO.REPLACE",source:"@site/streamsheets/functions/databases/mongoreplace.md",sourceDirName:"functions/databases",slug:"/functions/databases/mongoreplace",permalink:"/streamsheets/next/functions/databases/mongoreplace",tags:[],version:"current",frontMatter:{id:"mongoreplace",title:"MONGO.REPLACE",hide_title:!0},sidebar:"someSidebar",previous:{title:"MONGO.QUERY",permalink:"/streamsheets/next/functions/databases/mongoquery"},next:{title:"MONGO.STORE",permalink:"/streamsheets/next/functions/databases/mongostore"}},m=[],c={toc:m};function p(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"MONGO.REPLACE"),(0,l.kt)("p",null,"Replaces elements in a Mongo database. Only replaces one entry at a time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("p",null,"=MONGO.REPLACE(Connection, Collection, Query, Document, Upsert)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Connection"),(0,l.kt)("td",{parentName:"tr",align:null},"Connection"),(0,l.kt)("td",{parentName:"tr",align:null},"Reference to connection used for replacing. The database name is configured in the affiliated connection settings.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Collection"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Choose an existing collection, where the item is stored.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Query"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"Define a query using a JSON cell range, which defines the document to be replaced.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Document"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"Defines the key-value pair(s) to be replacing the old entry.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Upsert"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional Parameter to define, if a new document will be created when the query can not find a document to be replaced.  ",(0,l.kt)("br",null),(0,l.kt)("br",null),"Default value: FALSE")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Booelan or Error"),(0,l.kt)("td",{parentName:"tr",align:null},"TRUE, if no ",(0,l.kt)("a",{parentName:"td",href:"../../other#error-codes"},"error"),".")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Formula"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("pre",null,(0,l.kt)("code",null,'=MONGO.REPLACE(MongoConnection!,"TestCollection", JSON(A1:B4), JSON(C1:D4))'))),(0,l.kt)("td",{parentName:"tr",align:null},"TRUE"),(0,l.kt)("td",{parentName:"tr",align:null},"The Query looks for a document in the collection which matches the A1:B4 key-value pairs. The found document will be deleted and the new document takes its place. If nothing is found to be replaced, no action will occur.")))))}p.isMDXComponent=!0},13977:function(t,e,n){n.d(e,{Z:function(){return u}});var a=n(36459),r=n(67294),l=n(21055),o=n(13486),i=n(75943);function u(t){return(0,a.Z)(t),r.createElement(l.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:r.createElement(i.Z,{style:{color:"white"},size:"small"}),label:"Experimental"})}},93866:function(t,e,n){n.d(e,{Z:function(){return u}});var a=n(36459),r=n(67294),l=n(21055),o=n(55137),i=n(83166);function u(t){return(0,a.Z)(t),r.createElement(l.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:r.createElement(i.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},92313:function(t,e,n){n.d(e,{Z:function(){return o}});var a=n(67294),r=n(21055),l=n(13328);function o(t){var e=t.version;return e?a.createElement(r.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:a.createElement(l.Z,{size:"small"}),label:""+e}):a.createElement(a.Fragment,null)}}}]);