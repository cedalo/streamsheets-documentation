"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[32798],{13328:function(e,t,n){var a=n(95318);t.Z=void 0;var r=a(n(64938)),l=n(85893),s=(0,r.default)((0,l.jsx)("path",{d:"m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}),"NewReleases");t.Z=s},75943:function(e,t,n){var a=n(95318);t.Z=void 0;var r=a(n(64938)),l=n(85893),s=(0,r.default)((0,l.jsx)("path",{d:"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z"}),"Science");t.Z=s},90366:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return p},default:function(){return d}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),s=(n(92313),n(93866)),o=(n(13977),["components"]),i={id:"jsonprocess",title:"JSON.PROCESS",hide_title:!0},u=void 0,m={unversionedId:"functions/streamsheet/jsonprocess",id:"functions/streamsheet/jsonprocess",title:"JSON.PROCESS",description:"JSON.PROCESS",source:"@site/streamsheets/functions/streamsheet/jsonprocess.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/jsonprocess",permalink:"/streamsheets/next/functions/streamsheet/jsonprocess",tags:[],version:"current",frontMatter:{id:"jsonprocess",title:"JSON.PROCESS",hide_title:!0},sidebar:"someSidebar",previous:{title:"JSON",permalink:"/streamsheets/next/functions/streamsheet/json"},next:{title:"JSON.TO.RANGE",permalink:"/streamsheets/next/functions/streamsheet/jsontorange"}},p=[],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"JSON.PROCESS"),(0,l.kt)(s.Z,{mdxType:"PremiumFeature"}),(0,l.kt)("p",null,"Traverses given JSON object and processes each cell in specified cell-range. Before the cell-range is processed the current JSON value is written to defined value cell, whereas the corresponding key is returned from the function itself. A nested JSON can be completely traversed by setting the optional recursive parameter to TRUE. To immediately stop the JSON traversal use ",(0,l.kt)("a",{parentName:"p",href:"$HelpLink"},"BREAK()"),"/functions/streamsheet/break) in processed cell-range."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("p",null,"=JSON.PROCESS(JSON, ValueCell, CellRange, ","[","Recursive","]",")"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"A JSON object to process.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ValueCell"),(0,l.kt)("td",{parentName:"tr",align:null},"Cell"),(0,l.kt)("td",{parentName:"tr",align:null},"Cell-reference to write current JSON value to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CellRange"),(0,l.kt)("td",{parentName:"tr",align:null},"Range"),(0,l.kt)("td",{parentName:"tr",align:null},"Cell-range to process for each JSON value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Recursive (optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify TRUE to completely traverse a nested JSON object. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"Default value: FALSE")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"String or Error"),(0,l.kt)("td",{parentName:"tr",align:null},"Currently processed JSON key or an ",(0,l.kt)("a",{parentName:"td",href:"../../other#error-codes"},"error")," value.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("p",null,"Traverse simple JSON and process specified cell-range:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"A"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},'{"name": "foo", "age": 42 }')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},'=CONCAT(A2, A4, "-")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},'=CONCAT(A3, B3, "-")')))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Formula"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("pre",null,(0,l.kt)("code",null,"=JSON.PROCESS(JSON(A1), B3, A2:A3)"))),(0,l.kt)("td",{parentName:"tr",align:null},"age"),(0,l.kt)("td",{parentName:"tr",align:null},"Processes given cell-range for each JSON key-value pair. When finished A2 contains all the keys (",(0,l.kt)("inlineCode",{parentName:"td"},"-name-age-"),") and  A3 all the corresponding values (",(0,l.kt)("inlineCode",{parentName:"td"},"-foo-42-"),")")))))}d.isMDXComponent=!0},13977:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(36459),r=n(67294),l=n(21055),s=n(13486),o=n(75943);function i(e){return(0,a.Z)(e),r.createElement(l.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:s.Z[500]},size:"small",icon:r.createElement(o.Z,{style:{color:"white"},size:"small"}),label:"Experimental"})}},93866:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(36459),r=n(67294),l=n(21055),s=n(55137),o=n(83166);function i(e){return(0,a.Z)(e),r.createElement(l.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:s.Z[500]},size:"small",icon:r.createElement(o.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},92313:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(67294),r=n(21055),l=n(13328);function s(e){var t=e.version;return t?a.createElement(r.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:a.createElement(l.Z,{size:"small"}),label:""+t}):a.createElement(a.Fragment,null)}}}]);