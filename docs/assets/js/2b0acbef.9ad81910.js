"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[88099],{83166:(e,n,t)=>{var o=t(64836);n.Z=void 0;var a=o(t(64938)),i=t(85893),r=(0,a.default)((0,i.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");n.Z=r},84936:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>S,contentTitle:()=>k,default:()=>v,frontMatter:()=>m,metadata:()=>h,toc:()=>f});var o=t(3905),a=t(49044),i=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&p(e,t,n[t]);if(s)for(var t of s(n))d.call(n,t)&&p(e,t,n[t]);return e};const m={id:"mc-connections-rest-api",title:"Connections REST API \u2b50"},k=void 0,h={unversionedId:"mc-connections-rest-api",id:"version-2.5/mc-connections-rest-api",title:"Connections REST API \u2b50",description:"Updated in 2.6",source:"@site/management-center_versioned_docs/version-2.5/connections-rest-api.md",sourceDirName:".",slug:"/mc-connections-rest-api",permalink:"/management-center/mc-connections-rest-api",draft:!1,tags:[],version:"2.5",frontMatter:{id:"mc-connections-rest-api",title:"Connections REST API \u2b50"},sidebar:"someSidebar",previous:{title:"Connections",permalink:"/management-center/mc-connections"},next:{title:"User Management",permalink:"/management-center/mc-user-management"}},S={},f=[{value:"Application Tokens REST API",id:"application-tokens-rest-api",level:2},{value:"Patch functionality",id:"patch-functionality",level:2},{value:"Error responses",id:"error-responses",level:2}],b={toc:f};function v(e){var n,t=e,{components:i}=t,p=((e,n)=>{var t={};for(var o in e)c.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&s)for(var o of s(e))n.indexOf(o)<0&&d.call(e,o)&&(t[o]=e[o]);return t})(t,["components"]);return(0,o.kt)("wrapper",(n=u(u({},b),p),r(n,l({components:i,mdxType:"MDXLayout"}))),(0,o.kt)(a.Z,{mdxType:"PremiumFeature"}),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Updated in 2.6")),(0,o.kt)("p",null,"This page describes how to use the ",(0,o.kt)("strong",{parentName:"p"},"Connections REST API")," that is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC)."),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Before sending a command request, make sure that you have been authenticated.")),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Application Tokens REST API can be accessed only by the users with ",(0,o.kt)("em",{parentName:"p"},"admin")," or ",(0,o.kt)("em",{parentName:"p"},"connectionManager")," role.")),(0,o.kt)("h2",u({},{id:"application-tokens-rest-api"}),"Application Tokens REST API"),(0,o.kt)("p",null,"Connections REST API features the following endpoints that allow for some CRUD operations on the connections:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GET /api/connections")," - get all the connections")),(0,o.kt)("p",null,"Example of the response:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "mosquitto-dev",\n    "name": "Development Server",\n    "url": "mqtts://url.com:1883",\n    "credentials": {\n      "username": "admin",\n      "password": "adminpassword"\n    },\n    "ca": {\n      "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n      "endoding": "base64"\n    },\n    "cert": {\n      "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n      "endoding": "base64"\n    },\n    "key": {\n      "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n      "endoding": "base64"\n    },\n    "rejectUnauthorized": "true",\n    "status": {\n      "connected": "false",\n      "error": {\n        "code": "UNABLE_TO_VERIFY_LEAF_SIGNATURE"\n      }\n    }\n  },\n  ...\n]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"POST /api/connections")," - create a new connection")),(0,o.kt)("p",null,"Request body must be a connection that you want to create."),(0,o.kt)("p",null,"Example of the request body:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n  "id": "mosquitto-dev",\n  "name": "Development Server",\n  "url": "mqtts://url.com:1883",\n  "credentials": {\n    "username": "admin",\n    "password": "adminpassword"\n  },\n  "ca": {\n    "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n    "endoding": "base64"\n  },\n  "cert": {\n    "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n    "endoding": "base64"\n  },\n  "key": {\n    "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lVQlkxaGxDR3ZkajROaEJYa1ovd...",\n    "endoding": "base64"\n  },\n  "rejectUnauthorized": "true"\n}\n')),(0,o.kt)("p",null,"Response: list of all the existing connections"),(0,o.kt)("p",null,"Connection will not only be created but also connected by default."),(0,o.kt)("p",null,"A special response error of type ",(0,o.kt)("inlineCode",{parentName:"p"},"text/plain"),' is 500: "Connection created but could not connect" thrown when connection has been successfully created but something went wrong, when using it to initiate a connection with a broker.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DELETE /api/connections/{connectionId}")," - delete a specified connection")),(0,o.kt)("p",null,"Path Parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connectionId")," - id of the connection you want to delete")),(0,o.kt)("p",null,"Response: list of the remaining connections"),(0,o.kt)("h2",u({},{id:"patch-functionality"}),"Patch functionality"),(0,o.kt)("p",null,"In case you issue ",(0,o.kt)("inlineCode",{parentName:"p"},"POST"),' request to create a new connection and it returns 500: "Connection created but could not connect", you can change the body (except of course name of the connection and connection id) and issue the same POST request again. What it will do is it will patch you previously unsuccessful connection. This connection will be updated with new provided information and the Management Center will try reconnecting.'),(0,o.kt)("h2",u({},{id:"error-responses"}),"Error responses"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"403 - Forbidden (Connection with the same name/id already exists | Maximum number of connections reached) | User does not have access permissions")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"404 - Plugin not found/Not enabled")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"500 - An internal server error occured (special case with a ",(0,o.kt)("inlineCode",{parentName:"p"},"POST"),' request being 500: "Connection created but could not connect")'))))}v.isMDXComponent=!0},49044:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(67294),a=t(39082),i=t(62659),r=t(83166);function l({inline:e}){return o.createElement(a.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:i.Z[500]},size:"small",icon:o.createElement(r.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);