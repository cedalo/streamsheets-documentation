"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[7410],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return t?r.createElement(k,o(o({ref:n},c),{},{components:t})):r.createElement(k,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},56021:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>m,default:()=>h,frontMatter:()=>d,metadata:()=>k,toc:()=>b});var r=t(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,n,t)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,p=(e,n)=>{for(var t in n||(n={}))s.call(n,t)&&c(e,t,n[t]);if(i)for(var t of i(n))u.call(n,t)&&c(e,t,n[t]);return e};const d={id:"restapi-dynamic-security",title:"Dynamic Security",sidebar_label:"Dynamic Security"},m=void 0,k={unversionedId:"api/restapis/restapi-dynamic-security",id:"version-2.7/api/restapis/restapi-dynamic-security",title:"Dynamic Security",description:"Manage the dynamic security functionality of brokers",source:"@site/mosquitto_versioned_docs/version-2.7/api/restapis/dynamic-security.md",sourceDirName:"api/restapis",slug:"/api/restapis/restapi-dynamic-security",permalink:"/mosquitto/2.7/api/restapis/restapi-dynamic-security",draft:!1,tags:[],version:"2.7",frontMatter:{id:"restapi-dynamic-security",title:"Dynamic Security",sidebar_label:"Dynamic Security"},sidebar:"someSidebar",previous:{title:"Connections",permalink:"/mosquitto/2.7/api/restapis/restapi-connections"},next:{title:"Monitoring",permalink:"/mosquitto/2.7/api/restapis/restapi-monitoring"}},y={},b=[{value:"Available API Paths",id:"available-api-paths",level:2},{value:"Path: /api/dynamic-security/{brokerId}/command",id:"path-apidynamic-securitybrokeridcommand",level:2},{value:"Methods",id:"methods",level:3},{value:"POST",id:"post",level:4},{value:"Path: /api/dynamic-security/{brokerId}/export",id:"path-apidynamic-securitybrokeridexport",level:2},{value:"Methods",id:"methods-1",level:3},{value:"GET",id:"get",level:4}],g={toc:b};function h(e){var n,t=e,{components:a}=t,c=((e,n)=>{var t={};for(var r in e)s.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&i)for(var r of i(e))n.indexOf(r)<0&&u.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(n=p(p({},g),c),l(n,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Manage the dynamic security functionality of brokers"),(0,r.kt)("h2",p({},{id:"available-api-paths"}),"Available API Paths"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"#apidynamic-securitybrokeridcommand"}),"/api/dynamic-security/{brokerId}/command"),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"#apidynamic-securitybrokeridexport"}),"/api/dynamic-security/{brokerId}/export"),(0,r.kt)("br",null))),(0,r.kt)("hr",null),(0,r.kt)("h2",p({},{id:"path-apidynamic-securitybrokeridcommand"}),"Path: /api/dynamic-security/{brokerId}/command"),(0,r.kt)("h3",p({},{id:"methods"}),"Methods"),(0,r.kt)("h4",p({},{id:"post"}),"POST"),(0,r.kt)("p",null,"Executes a command on the specified broker. Must be editor to access"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Location"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Required"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",p({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"brokerId")),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"path"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"string"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"true"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"ID of the broker where the command will be executed")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Name "),(0,r.kt)("td",null," Required "),(0,r.kt)("td",null," Type "),(0,r.kt)("td",null," Request Properties or Schema")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("b",null," body ")),(0,r.kt)("td",null," true "),(0,r.kt)("td",null," object "),(0,r.kt)("td",null," Command object. For more information on commands refer to the dynamic security section of the official Mosquitto Cedalo documentation.",(0,r.kt)("p",null," Properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "command": {\n    "type": "string",\n    "description": "Command name"\n  }\n} \n')),(0,r.kt)("p",null," Optional properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "description": "Other command parameters. Refer to dynamic security documentation"\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null," Command execution result "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "command": {\n    "type": "string",\n    "description": "Name of the executed command"\n  },\n  "data": {\n    "type": "object",\n    "description": "Data (command execution result) returned by the broker"\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),'{\n  "command": "listRoles",\n  "data": {\n    "totalCount": 8,\n    "roles": [\n      "client",\n      "dynsec-admin",\n      "inspect-admin",\n      "license-admin",\n      "streams-admin",\n      "super-admin",\n      "sys-observe",\n      "topic-observe"\n    ]\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 409 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker connection does not exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," An internal server error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "An internal server error occurred"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null),(0,r.kt)("h2",p({},{id:"path-apidynamic-securitybrokeridexport"}),"Path: /api/dynamic-security/{brokerId}/export"),(0,r.kt)("h3",p({},{id:"methods-1"}),"Methods"),(0,r.kt)("h4",p({},{id:"get"}),"GET"),(0,r.kt)("p",null,"Retrieves the dynamic security data for the specified broker. Must be editor to access"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Location"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Required"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",p({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"brokerId")),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"path"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"string"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"true"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"ID of the broker you want to get the dynamic security data for")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null," Dynamic security data (broker clients, groups, roles and their ACLs) "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "clients": {\n    "type": "object",\n    "description": "Information about broker clients"\n  },\n  "groups": {\n    "type": "object",\n    "description": "Information about broker groups"\n  },\n  "roles": {\n    "type": "object",\n    "description": "Information about broker roles and their ACLs"\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),'{\n  "clients": {\n    "command": "listClients",\n    "data": {\n      "totalCount": 2,\n      "clients": [\n        {\n          "username": "admin",\n          "textname": "Admin user",\n          "roles": [\n            {\n              "rolename": "super-admin"\n            },\n            {\n              "rolename": "sys-observe"\n            },\n            {\n              "rolename": "topic-observe"\n            }\n          ],\n          "groups": [],\n          "connections": [\n            {\n              "address": "111.111.111.111"\n            }\n          ]\n        },\n        {\n          "username": "democlient",\n          "textname": "Demonstration client with full read/write access to the \'#\' topic hierarchy.",\n          "roles": [\n            {\n              "rolename": "client"\n            }\n          ],\n          "groups": [],\n          "connections": []\n        }\n      ]\n    }\n  },\n  "groups": {\n    "command": "listGroups",\n    "data": {\n      "totalCount": 2,\n      "groups": [\n        {\n          "groupname": "test",\n          "textname": "test",\n          "textdescription": "",\n          "clients": [],\n          "roles": []\n        },\n        {\n          "groupname": "unauthenticated",\n          "textname": "Unauthenticated group",\n          "textdescription": "If unauthenticated access is allowed, this group can be used to define roles for clients that connect without a password.",\n          "clients": [],\n          "roles": []\n        }\n      ]\n    }\n  },\n  "roles": {\n    "command": "listRoles",\n    "data": {\n      "totalCount": 4,\n      "roles": [\n        {\n          "rolename": "client",\n          "textdescription": "Read/write access to the full application topic hierarchy.",\n          "allowwildcardsubs": true,\n          "acls": [\n            {\n              "acltype": "publishClientSend",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "publishClientReceive",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "subscribePattern",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "unsubscribePattern",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            }\n          ]\n        },\n        {\n          "rolename": "super-admin",\n          "textdescription": "Grants access to administer all kind of broker controls",\n          "allowwildcardsubs": true,\n          "acls": [\n            {\n              "acltype": "publishClientSend",\n              "topic": "$CONTROL/#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "publishClientReceive",\n              "topic": "$CONTROL/#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "subscribePattern",\n              "topic": "$CONTROL/#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "unsubscribePattern",\n              "topic": "$CONTROL/#",\n              "priority": 0,\n              "allow": true\n            }\n          ]\n        },\n        {\n          "rolename": "sys-observe",\n          "textdescription": "Observe the $SYS topic hierarchy.",\n          "allowwildcardsubs": true,\n          "acls": [\n            {\n              "acltype": "publishClientReceive",\n              "topic": "$SYS/#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "subscribePattern",\n              "topic": "$SYS/#",\n              "priority": 0,\n              "allow": true\n            }\n          ]\n        },\n        {\n          "rolename": "topic-observe",\n          "textdescription": "Read only access to the full application topic hierarchy.",\n          "allowwildcardsubs": true,\n          "acls": [\n            {\n              "acltype": "publishClientReceive",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "subscribePattern",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            },\n            {\n              "acltype": "unsubscribePattern",\n              "topic": "#",\n              "priority": 0,\n              "allow": true\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 409 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker connection does not exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," Broker is unavailable or some other error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "An internal server error occurred",\n      "There was a problem accesing the broker"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null))}h.isMDXComponent=!0}}]);