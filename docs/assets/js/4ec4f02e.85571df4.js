"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[14182],{83166:(e,t,a)=>{var r=a(64836);t.Z=void 0;var n=r(a(64938)),l=a(85893),o=(0,n.default)((0,l.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=o},33665:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>c,default:()=>S,frontMatter:()=>k,metadata:()=>N,toc:()=>h});var r=a(3905),n=a(49044),l=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))i.call(t,a)&&u(e,a,t[a]);if(p)for(var a of p(t))m.call(t,a)&&u(e,a,t[a]);return e};const k={id:"jsonprocess",title:"JSON.PROCESS",hide_title:!0},c=void 0,N={unversionedId:"functions/Streamsheet/jsonprocess",id:"version-3.0/functions/Streamsheet/jsonprocess",title:"JSON.PROCESS",description:"JSON.PROCESS",source:"@site/streamsheets_versioned_docs/version-3.0/functions/Streamsheet/jsonprocess.md",sourceDirName:"functions/Streamsheet",slug:"/functions/Streamsheet/jsonprocess",permalink:"/streamsheets/functions/Streamsheet/jsonprocess",draft:!1,tags:[],version:"3.0",frontMatter:{id:"jsonprocess",title:"JSON.PROCESS",hide_title:!0},sidebar:"someSidebar",previous:{title:"JSON",permalink:"/streamsheets/functions/Streamsheet/json"},next:{title:"JSON.TO.RANGE",permalink:"/streamsheets/functions/Streamsheet/jsontorange"}},g={},h=[],f={toc:h};function S(e){var t,a=e,{components:l}=a,u=((e,t)=>{var a={};for(var r in e)i.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&m.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=d(d({},f),u),o(t,s({components:l,mdxType:"MDXLayout"}))),(0,r.kt)("h1",null,"JSON.PROCESS"),(0,r.kt)(n.Z,{mdxType:"PremiumFeature"}),(0,r.kt)("p",null,"Traverses given JSON object and processes each cell in specified cell-range. Before the cell-range is processed the current JSON value is written to defined value cell, whereas the corresponding key is returned from the function itself. A nested JSON can be completely traversed by setting the optional recursive parameter to TRUE. To immediately stop the JSON traversal use ",(0,r.kt)("a",d({parentName:"p"},{href:"../../functions/Streamsheet/break"}),"BREAK()")," in processed cell-range."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=JSON.PROCESS(JSON, ValueCell, CellRange, ","[","Recursive","]",")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"JSON"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"JSON"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"A JSON object to process.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"ValueCell"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Cell"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Cell-reference to write current JSON value to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"CellRange"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Range"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Cell-range to process for each JSON value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Recursive (optional)"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Boolean"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Specify TRUE to completely traverse a nested JSON object. ",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: FALSE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"String or Error"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Currently processed JSON key or an ",(0,r.kt)("a",d({parentName:"td"},{href:"../../other/errorcodes"}),"error")," value.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("p",null,"Traverse simple JSON and process specified cell-range:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null})),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"A"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"1"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),'{"name": "foo", "age": 42 }')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"2"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),'=CONCAT(A2, A4, "-")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),"3"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),'=CONCAT(A3, B3, "-")')))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Formula"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Result"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"=JSON.PROCESS(JSON(A1), B3, A2:A3)"))),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"age"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Processes given cell-range for each JSON key-value pair. When finished A2 contains all the keys (",(0,r.kt)("inlineCode",{parentName:"td"},"-name-age-"),") and  A3 all the corresponding values (",(0,r.kt)("inlineCode",{parentName:"td"},"-foo-42-"),")")))))}S.isMDXComponent=!0},49044:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(67294),n=a(39082),l=a(62659),o=a(83166);function s({inline:e}){return r.createElement(n.Z,{sx:{margin:e?"0px 5px":"5px 5px 15px 5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:l.Z[500]},size:"small",icon:r.createElement(o.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);