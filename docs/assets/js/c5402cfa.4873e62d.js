"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[22523],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||l;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},38152:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>y,frontMatter:()=>m,metadata:()=>d,toc:()=>b});var n=r(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&c(e,r,t[r]);if(i)for(var r of i(t))p.call(t,r)&&c(e,r,t[r]);return e};const m={id:"filewrite",title:"FILE.WRITE",sidebar_label:"FILE.WRITE"},f=void 0,d={unversionedId:"functions/streams/filewrite",id:"version-2.4/functions/streams/filewrite",title:"FILE.WRITE",description:"Write a given range as comma separeted values to a file. You can use the",source:"@site/streamsheets_versioned_docs/version-2.4/functions/streams/filewrite.md",sourceDirName:"functions/streams",slug:"/functions/streams/filewrite",permalink:"/streamsheets/2.4/functions/streams/filewrite",draft:!1,tags:[],version:"2.4",frontMatter:{id:"filewrite",title:"FILE.WRITE",sidebar_label:"FILE.WRITE"},sidebar:"version-2.4/someSidebar",previous:{title:"STDEV.S",permalink:"/streamsheets/2.4/functions/statistical/stdevs"},next:{title:"HTTP.REQUEST",permalink:"/streamsheets/2.4/functions/streams/httprequest"}},g={},b=[],k={toc:b};function y(e){var t,a=e,{components:c}=a,m=((e,t)=>{var r={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r})(a,["components"]);return(0,n.kt)("wrapper",(t=u(u({},k),m),l(t,o({components:c,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Write a given range as comma separeted values to a file. You can use the\nFunction Wizard for this function. The mounted root path is set in the .YML file. E.g.: ",(0,n.kt)("inlineCode",{parentName:"p"},"C:rootfolder:/filefeeder"),'. Add /filefeeder to the\n"Root Directory" field in the Connector to connect it to the root folder.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=FILE.WRITE(Producer, Range, Filename, ","[","Directory, Mode, Separator","]",")"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Producer"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"File Producer to use for writing the file.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Range"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"The range to write to a file. Can also be a single value.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Filename"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Name of the file that is written.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Directory"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Optional. The directory of the file that is written. Defaults to the root directory of the File Producer.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Mode"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),'Optional. Has to be "create" or "append". Defaults to "append". "create" replaces an existing file with the same name, "append" appends instead.')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Separator"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),'Optional. Separator to use when writing range to file. Defaults to ",".')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return Value")),(0,n.kt)("p",null,"TRUE, if no ",(0,n.kt)("a",u({parentName:"p"},{href:"../../other#error-codes"}),"error"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Function"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",u({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"=FILE.WRITE(","|","File Producer, \u201cMessage\u201d, \u201cfile.csv\u201d, \u201cdirectory\u201d)"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"TRUE"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Write the text \u201cMessage\u201d to the file located at \u201c{rootDirectory}/directory/file.csv\u201d using the \u201cFile Producer\u201d")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",u({parentName:"tr"},{align:null}),"=FILE.WRITE(","|","File Producer, A2:C3, \u201cfile.csv\u201d, ,\u201dcreate\u201d, \u201c;\u201d) ",(0,n.kt)("br",null),"   ",(0,n.kt)("br",null)," ",(0,n.kt)("img",{src:r(32729).Z,width:"100%"})),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"TRUE"),(0,n.kt)("td",u({parentName:"tr"},{align:null}),"Writes the content of the range A2:C3 to the fiel located at \u201c{rootDirectory}/file.csv\u201d using \u201c;\u201d as separator and replacing an already existing file with the same name. The resulting content of the file is:  ",(0,n.kt)("br",null),(0,n.kt)("inlineCode",{parentName:"td"},"Example1;Example2;Example3")," ",(0,n.kt)("br",null)," ",(0,n.kt)("inlineCode",{parentName:"td"},"Example4;Example5;Example6 "))))))}y.isMDXComponent=!0},32729:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/FILE.WRITE-6116b5f5086c766bb2c9b7cf92cb0ff2.png"}}]);