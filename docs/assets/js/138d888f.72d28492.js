(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[42984],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return m},kt:function(){return s}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),u=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=u(n),s=a,f=d["".concat(p,".").concat(s)]||d[s]||c[s]||l;return n?r.createElement(f,i(i({ref:e},m),{},{components:n})):r.createElement(f,i({ref:e},m))}));function s(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82610:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p},default:function(){return m}});var r=n(22122),a=n(19756),l=(n(67294),n(3905)),i={id:"drawline",title:"DRAW.LINE",sidebar_label:"DRAW.LINE"},o={unversionedId:"functions/shape/drawline",id:"version-2.3/functions/shape/drawline",isDocsHomePage:!1,title:"DRAW.LINE",description:"Define a graphical line.",source:"@site/streamsheets_versioned_docs/version-2.3/functions/shape/drawline.md",sourceDirName:"functions/shape",slug:"/functions/shape/drawline",permalink:"/streamsheets/2.3/functions/shape/drawline",version:"2.3",sidebar_label:"DRAW.LINE",frontMatter:{id:"drawline",title:"DRAW.LINE",sidebar_label:"DRAW.LINE"},sidebar:"version-2.3/someSidebar",previous:{title:"DRAW.LABEL",permalink:"/streamsheets/2.3/functions/shape/drawlabel"},next:{title:"DRAW.POLYGON",permalink:"/streamsheets/2.3/functions/shape/drawpolygon"}},p=[],u={toc:p};function m(t){var e=t.components,n=(0,a.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Define a graphical line."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("p",null,"=DRAW.LINE(UniqueID, Container, Name, X1, Y1, X2, Y2 ","[",",LineFormat","]",")"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UniqueId"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique Id of drawing object. Should not be modified and must be unique.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Container"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Name of the container object this object is placed within. Coordinates are relative then.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of drawing object. Must be unique.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"X1"),(0,l.kt)("td",{parentName:"tr",align:null},"X Start Coordinate in 1/100th mm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Y1"),(0,l.kt)("td",{parentName:"tr",align:null},"Y Start Coordinate in 1/100th mm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"X2"),(0,l.kt)("td",{parentName:"tr",align:null},"X End Coordinate in 1/100th mm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Y2"),(0,l.kt)("td",{parentName:"tr",align:null},"Y End Coordinate in 1/100th mm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LineFormat"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Options: ",(0,l.kt)("br",null)," - ",(0,l.kt)("inlineCode",{parentName:"td"},"None")," for no line ",(0,l.kt)("br",null)," - Hexadecimal color value (",(0,l.kt)("inlineCode",{parentName:"td"},"#FF0000")," for Red) ",(0,l.kt)("br",null)," - JSON String created using lineformat")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Value")),(0,l.kt)("p",null,"TRUE, if line could be created."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Function"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'=DRAW.LINE("ID1", "", "Line1", 1000, 1000, 3000, 3000)'),(0,l.kt)("td",{parentName:"tr",align:null},"TRUE"),(0,l.kt)("td",{parentName:"tr",align:null},"Draw a line from coordinate 1cm, 1cm to coordinate 3cm, 3cm.")))))}m.isMDXComponent=!0}}]);