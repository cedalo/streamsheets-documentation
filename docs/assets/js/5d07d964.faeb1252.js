"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[80563],{83166:(e,t,n)=>{var i=n(64836);t.Z=void 0;var a=i(n(64938)),o=n(85893),r=(0,a.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=r},95387:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>y,frontMatter:()=>d,metadata:()=>h,toc:()=>k});var i=n(3905),a=n(49044),o=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&m(e,n,t[n]);if(s)for(var n of s(t))u.call(t,n)&&m(e,n,t[n]);return e};const d={id:"mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",sidebar_label:"Mosquitto Client CA Management"},f=void 0,h={unversionedId:"broker/Mosquitto Manual/mosquitto-certificate-management",id:"version-2.6/broker/Mosquitto Manual/mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",description:"There are multiple ways of authenticating clients. The most common way is using",source:"@site/mosquitto_versioned_docs/version-2.6/broker/Mosquitto Manual/certificate-management.md",sourceDirName:"broker/Mosquitto Manual",slug:"/broker/Mosquitto Manual/mosquitto-certificate-management",permalink:"/mosquitto/broker/Mosquitto Manual/mosquitto-certificate-management",draft:!1,tags:[],version:"2.6",frontMatter:{id:"mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",sidebar_label:"Mosquitto Client CA Management"},sidebar:"someSidebar",previous:{title:"Streams",permalink:"/mosquitto/broker/Mosquitto Manual/mosquitto-streams"},next:{title:"High Availability",permalink:"/mosquitto/broker/mosquitto-high-availability"}},g={},k=[{value:"Plugin configuration",id:"plugin-configuration",level:2}],b={toc:k};function y(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var i in e)c.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&s)for(var i of s(e))t.indexOf(i)<0&&u.call(e,i)&&(n[i]=e[i]);return n})(n,["components"]);return(0,i.kt)("wrapper",(t=p(p({},b),m),r(t,l({components:o,mdxType:"MDXLayout"}))),(0,i.kt)(a.Z,{mdxType:"PremiumFeature"}),(0,i.kt)("p",null,"There are multiple ways of authenticating clients. The most common way is using\nthe ",(0,i.kt)("a",p({parentName:"p"},{href:"/mosquitto/broker/Mosquitto%20Manual/broker-dynamic-security"}),"dynamic-security plugin")," and creating client accounts with a username password approach. An\nadded security layer for authentication is the usage of client certificates. These can be used in addition or as an\nalternative to the username password authentication."),(0,i.kt)("p",null,"Client certificates are a digital certificate, which is used by a connecting client to authenticate at a server. The\nserver approves a connection, if the certificate can be validated by a stored client certificate authority. This setting\nis configured in the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file. To allow a deployment of CAs via another entity, this plugin provides a\nMosquitto control API which manages CA certificates for\ncertificate based authentication/validation."),(0,i.kt)("p",null,"The topic of the plugins control API is ",(0,i.kt)("inlineCode",{parentName:"p"},"$CONTROL/certificate-management/v1"),".\nCurrently, supported commands offered by the API are ",(0,i.kt)("inlineCode",{parentName:"p"},"insertCACertificate"),", which\ncan be used to extend the existing Certificate Authority (CA) Chain or just the\nRoot CA by an additional signing/validating certificate. To get rid of a\npreviously added CA cert, the ",(0,i.kt)("inlineCode",{parentName:"p"},"deleteCACertificate")," command can be used."),(0,i.kt)("h2",p({},{id:"plugin-configuration"}),"Plugin configuration"),(0,i.kt)("p",null,"To enable the plugin it must be loaded into the broker with, by adding the\nfollowing to your ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",p({parentName:"pre"},{className:"language-aconf"}),"plugin /usr/lib/cedalo_certificate_management.so\n")),(0,i.kt)("p",null,"In addition to enable the brokers internal ",(0,i.kt)("inlineCode",{parentName:"p"},"$CONTROL/broker/v1")," API we need to\nadd:"),(0,i.kt)("pre",null,(0,i.kt)("code",p({parentName:"pre"},{className:"language-aconf"}),"enable_control_api true\n")),(0,i.kt)("p",null,"This is required to determine the listeners identifier, where the changes should\nbe applied to."),(0,i.kt)("p",null,"A sample broker configuration could look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",p({parentName:"pre"},{className:"language-aconf"}),"listener 1883 127.0.0.1 # listener 1 to manage the CA certificates (local connection only)\n\nlistener 8883 # listener 2 to be managed, accepting the client connections\ncertfile server.crt\nkeyfile server.key\ncapath ca_path\nrequire_certificate true\n\nallow_anonymous true\nenable_control_api true\n\nplugin /usr/lib/cedalo_certificate_management.so\n")),(0,i.kt)("p",null,"The path of the ",(0,i.kt)("inlineCode",{parentName:"p"},"capath")," configuration should contain at least a root CA cert."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Note:"))," The ",(0,i.kt)("inlineCode",{parentName:"p"},"cafile")," configuration with a single PEM file containing the CA\nchain is currently not supported for this command."),(0,i.kt)("p",null,"To add a new CA certificate to the running broker instance you can either use\n",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl")," or initiate a request-response API call."),(0,i.kt)("p",null,"To learn more about the API check out our API documentation.\nIf you are not into APIs and are looking for a UI to handle this functionality, you can use the ",(0,i.kt)("a",p({parentName:"p"},{href:"/mosquitto/management-center/overview/configuration/mc-certificates"}),"Mosquitto Management Center")," to upload and deploy\nCAs."))}y.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(67294),a=n(74889),o=n(62659),r=n(83166);function l({inline:e}){return i.createElement(a.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:i.createElement(r.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);