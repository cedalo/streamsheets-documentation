"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[51394],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>g});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=s(a),g=r,k=m["".concat(p,".").concat(g)]||m[g]||c[g]||l;return a?n.createElement(k,i(i({ref:e},u),{},{components:a})):n.createElement(k,i({ref:e},u))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},36734:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>g,default:()=>b,frontMatter:()=>m,metadata:()=>k,toc:()=>f});var n=a(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(t,e,a)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,c=(t,e)=>{for(var a in e||(e={}))p.call(e,a)&&u(t,a,e[a]);if(o)for(var a of o(e))s.call(e,a)&&u(t,a,e[a]);return t};const m={id:"averageifs",title:"AVERAGEIFS",sidebar_label:"AVERAGEIFS"},g=void 0,k={unversionedId:"functions/statistical/averageifs",id:"version-2.5/functions/statistical/averageifs",title:"AVERAGEIFS",description:"Returns the average of all cell values which meet multiple criteria.",source:"@site/streamsheets_versioned_docs/version-2.5/functions/statistical/averageifs.md",sourceDirName:"functions/statistical",slug:"/functions/statistical/averageifs",permalink:"/streamsheets/functions/statistical/averageifs",draft:!1,tags:[],version:"2.5",frontMatter:{id:"averageifs",title:"AVERAGEIFS",sidebar_label:"AVERAGEIFS"},sidebar:"version-2.5/someSidebar",previous:{title:"AVERAGEIF",permalink:"/streamsheets/functions/statistical/averageif"},next:{title:"CORREL",permalink:"/streamsheets/functions/statistical/correl"}},d={},f=[],N={toc:f};function b(t){var e,a=t,{components:r}=a,u=((t,e)=>{var a={};for(var n in t)p.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&s.call(t,n)&&(a[n]=t[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(e=c(c({},N),u),l(e,i({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Returns the average of all cell values which meet multiple criteria."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=AVERAGEIFS(AverageRange, CriterionRange1, Criterion1, ","[","CriterionRange2,...","]",", ","[","Criterion2,...","]",")"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"AverageRange"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Cell-range to calculate average for.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"CriterionRange1"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The cell-range which is checked against the criterion.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Criterion1"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The criterion each cell of CriterionRange1 has to fulfill.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"CriterionRange2,... (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Additional cell-range which is checked against next criterion.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Criterion2,... (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Additional criterion each cell of CriterionRange2 has to fulfill.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return")),(0,n.kt)("p",null,"The average over all cell values which meet all specified criteria."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null})),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"A"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"B"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"C"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"D"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"1"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"230000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Freiburg"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"197000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Cologne"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"345678"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Cologne"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"4"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"4"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Freiburg"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"321900"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"5"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Cologne"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"203000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"No")))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Formula"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"AVERAGEIFS(",(0,n.kt)("span",{class:"blue"},"A1:A5"),", ",(0,n.kt)("span",{class:"orange"},"B1:B5"),", ",(0,n.kt)("span",{class:"green"},'"Cologne"'),", ",(0,n.kt)("span",{class:"orange"},"C1:C5"),", ",(0,n.kt)("span",{class:"green"},'"',">",'2"'),")"))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"200000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Average price of houses in Cologne that have at least 3 rooms.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"AVERAGEIFS(",(0,n.kt)("span",{class:"blue"},"A1:A5"),", ",(0,n.kt)("span",{class:"orange"},"C1:C5"),", ",(0,n.kt)("span",{class:"green"},'"',">",'=4"'),")"))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"345678"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Average price of houses with 4 or more rooms.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"AVERAGEIFS(",(0,n.kt)("span",{class:"blue"},"A1:A5"),", ",(0,n.kt)("span",{class:"orange"},"C1:C5"),", ",(0,n.kt)("span",{class:"green"},'"',">",'4"'),")"))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("span",{class:"red"},"#DIV/0!")),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"No cell fulfills given criterion.")))))}b.isMDXComponent=!0}}]);