"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[72037],{83166:(e,n,t)=>{var i=t(64836);n.Z=void 0;var r=i(t(64938)),a=t(85893),o=(0,r.default)((0,a.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");n.Z=o},2548:(e,n,t)=>{var i=t(64836);n.Z=void 0;var r=i(t(64938)),a=t(85893),o=(0,r.default)((0,a.jsx)("path",{d:"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}),"InfoOutlined");n.Z=o},3533:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>b,default:()=>N,frontMatter:()=>h,metadata:()=>g,toc:()=>k});var i=t(3905),r=t(49044),a=t(9026),o=t(87961),s=Object.defineProperty,l=Object.defineProperties,p=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,m=(e,n,t)=>n in e?s(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,f=(e,n)=>{for(var t in n||(n={}))d.call(n,t)&&m(e,t,n[t]);if(u)for(var t of u(n))c.call(n,t)&&m(e,t,n[t]);return e};const h={id:"azure-bridge",title:"Azure EventHubs Bridge",sidebar_label:"Azure EventHubs Bridge"},b=void 0,g={unversionedId:"bridges/azure-bridge",id:"version-3.1/bridges/azure-bridge",title:"Azure EventHubs Bridge",description:"This plugin is configurable via the Cedalo MQTT platform UI, which simplifies the process of updating config values without the need to restart the broker. Additionally, config updates are synchronized accross cluster nodes, reducing the administrative overhead in clustered environments. Find more information about this here.",source:"@site/mosquitto_versioned_docs/version-3.1/bridges/Azure-bridge.md",sourceDirName:"bridges",slug:"/bridges/azure-bridge",permalink:"/mosquitto/bridges/azure-bridge",draft:!1,tags:[],version:"3.1",frontMatter:{id:"azure-bridge",title:"Azure EventHubs Bridge",sidebar_label:"Azure EventHubs Bridge"},sidebar:"someSidebar",previous:{title:"Platform Web Client",permalink:"/mosquitto/bridges/bridges-ui"},next:{title:"Google Pub/Sub Bridge",permalink:"/mosquitto/bridges/google-pubsub-bridge"}},v={},k=[{value:"Plugin activation",id:"plugin-activation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuration File Format",id:"configuration-file-format",level:2},{value:"Eventhubs",id:"eventhubs",level:3},{value:"Producers",id:"producers",level:3},{value:"Topic Mappings",id:"topic-mappings",level:3},{value:"JSON Schema",id:"json-schema",level:2}],y={toc:k};function N(e){var n,t=e,{components:s}=t,m=((e,n)=>{var t={};for(var i in e)d.call(e,i)&&n.indexOf(i)<0&&(t[i]=e[i]);if(null!=e&&u)for(var i of u(e))n.indexOf(i)<0&&c.call(e,i)&&(t[i]=e[i]);return t})(t,["components"]);return(0,i.kt)("wrapper",(n=f(f({},y),m),l(n,p({components:s,mdxType:"MDXLayout"}))),(0,i.kt)(r.Z,{mdxType:"PremiumFeature"}),(0,i.kt)(o.Z,{version:"3.1",mdxType:"SinceVersion3"}),(0,i.kt)("admonition",f({},{type:"info"}),(0,i.kt)("p",{parentName:"admonition"},"This plugin is configurable via the Cedalo MQTT platform UI, which simplifies the process of updating config values without the need to restart the broker. Additionally, config updates are synchronized accross cluster nodes, reducing the administrative overhead in clustered environments. Find more information about this ",(0,i.kt)("a",f({parentName:"p"},{href:"#INSERT_LINK"}),"here"),".")),(0,i.kt)("p",null,"The Azure EventHubs Bridge plugin can be used to send messages from the Mosquitto broker to one or several Azure EventHubs resources."),(0,i.kt)("p",null,"Features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Topic based message routing, supporting 1:1, 1:n, m:1, and m:n mappings between topics and event hubs (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#topic-mappings"}),"Topic Mappings"),")"),(0,i.kt)("li",{parentName:"ul"},"Authentication methods including Shared Access Signature (SAS) keys and Role-Based Access Control (RBAC) (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#eventhubs"}),"Eventhubs"),")"),(0,i.kt)("li",{parentName:"ul"},"Support partition-based message ordering via partitionKey (when using JSON payloads) or partitionId (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#producers"}),"Producers"),")"),(0,i.kt)("li",{parentName:"ul"},"Dynamic functions to provide timestamp-based values for correlation tracking (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#producers"}),"Producers"),")"),(0,i.kt)("li",{parentName:"ul"},"Batched or buffered message forwarding (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#producers"}),"Producers"),")"),(0,i.kt)("li",{parentName:"ul"},"Configurable retry mechanisms (see ",(0,i.kt)("a",f({parentName:"li"},{href:"#producers"}),"Producers"),")")),(0,i.kt)("p",null,"Note: the plugin cannot configure any referenced Azure EventHubs resources. This has to be done upfront."),(0,i.kt)("h2",f({},{id:"plugin-activation"}),"Plugin activation"),(0,i.kt)("p",null,"Ensure that the broker has a suitable license for using the Azure EventHubs Bridge plugin.\nIf that is the case the plugin can be activated by adding the following to the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{}),"plugin /usr/lib/cedalo_azure_eventhubs.so\npersistence_location /mosquitto/data\n")),(0,i.kt)("p",null,"Note: for a single node broker scenario it is currently required to add a file named  ",(0,i.kt)("inlineCode",{parentName:"p"},"Azure-EventHubs-Bridge.json")," within the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location")," folder.\nThis file may be empty as the configuration is managed via corresponding ",(0,i.kt)("a",f({parentName:"p"},{href:"#control-topic"}),"control api"),"."),(0,i.kt)("h2",f({},{id:"configuration"}),"Configuration"),(0,i.kt)("p",null,"The configuration of the bridge is achieved by providing a configuration file following the JSON schema below.\nYou can modify the configuration file using the MQTT API for the Azure Eventhub Bridge. This is described in detail ",(0,i.kt)("a",f({parentName:"p"},{href:"/mosquitto/api/mqttapis/azure-bridge"}),"here"),".\nAnother option is to use the user interface provided with the Cedalo Mosquitto Platform, which provides a\nwebpage to modify and update the configuration. This option is described below in the ",(0,i.kt)("a",f({parentName:"p"},{href:"/mosquitto/bridges/bridges-ui"}),"Bridges Platform UI section")),(0,i.kt)("h2",f({},{id:"configuration-file-format"}),"Configuration File Format"),(0,i.kt)("p",null,"The configuration consist of three main parts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eventhubs"),": define one or several Azure EventHubs resources (",(0,i.kt)("a",f({parentName:"li"},{href:"#eventhubs"}),"Eventhubs"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"producers"),": define resource targets to forward messages to (",(0,i.kt)("a",f({parentName:"li"},{href:"#producers"}),"Producers"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"topicMappings"),": define which messages should be forwarded and where (",(0,i.kt)("a",f({parentName:"li"},{href:"#topic-mappings"}),"Topic Mappings"),")")),(0,i.kt)("h3",f({},{id:"eventhubs"}),"Eventhubs"),(0,i.kt)("p",null,"Each Azure EventHubs resource is referenced by its name (aka namespace) and is authenticated either via a provided\nShared Access Signature (SAS) key or through Role-Based Access Control (RBAC).\nNote that the RBAC authentication uses a fully qualified namespace to reference the Azure resource.\nIf this property is not provided it defaults to the specified name postfixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"servicebus.windows.net"),", i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"<name>.servicebus.windows.net"),".\nFor SAS this is not required as the key contains the endpoint already."),(0,i.kt)("p",null,"Following is an example of a resource configuration which uses RBAC for authentication:"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-json"}),'{\n    "name": "EventHubsResource",\n    "auth": {\n        "rbac": {\n            "tenantId": "12345677-6171-47aa-b47b-1234567d89de",\n            "clientId": "abcdef12-aa90-4190-9cfc-123456789abc",\n            "clientSecret": "aVerySecretClientSecret",\n            "fullyQualifiedNamespace": "resource_namespace.servicebus.windows.net"\n        }\n    }\n}\n')),(0,i.kt)("h3",f({},{id:"producers"}),"Producers"),(0,i.kt)("p",null,"The producer settings control how messages are sent to individual event hubs. To authenticate against the\nAzure resource the ",(0,i.kt)("inlineCode",{parentName:"p"},"auth")," property of the referenced ",(0,i.kt)("inlineCode",{parentName:"p"},"eventhub")," is used. However, it is also possible to override these\nauth settings for each producer."),(0,i.kt)("p",null,"The bridge supports two types of producers, ",(0,i.kt)("inlineCode",{parentName:"p"},"batch")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"buffered"),". The batch producer forwards messages immediately,\nwhereas a buffered producer collects messages before sending them to optimize throughput. If the type is not specified\na batch producer is created by default."),(0,i.kt)("p",null,"Following options can be used to define how messages are sent to different hubs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),": a unique name for this producer to identify in mappings"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hub"),": the event hub name where messages will be sent to"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type"),": either ",(0,i.kt)("inlineCode",{parentName:"li"},"batch")," to create a batch producer or ",(0,i.kt)("inlineCode",{parentName:"li"},"buffered")," to use a buffered one"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eventhub"),": name of defined EventHubs resource"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"auth"),": optional authentication credentials for this producer. If provided these credentials override the ones from referenced eventhub"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options"),": general producer options",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"messageId"),": used for tracking the source of an event in logs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"correlationId"),": used for debugging or tracking events. Supports dynamic placeholders like ",(0,i.kt)("inlineCode",{parentName:"li"},"{NOW}")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"{NOW_ISO}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"partitionId"),": specifies the Azure event hub partition for in-order message processing. Do not use ",(0,i.kt)("inlineCode",{parentName:"li"},"partitionKey")," at the same time"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"partitionKey"),": specifies a dynamic partition key (only for JSON payloads). Supports JSON-path-based extraction",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field"),":  specifies the JSON-path to extract a value for partitioning"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default"),": defines a fallback value if the JSON-path cannot be resolved"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"retryOptions"),": configures message retry behavior when an event fails to send",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mode"),": defines the retry strategy, use one of following values:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fix"),": uses a fixed retry delay"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"exponential"),": increases retry delay exponentially until ",(0,i.kt)("inlineCode",{parentName:"li"},"maxRetryDelayInMs")," is reached"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"delayInMs"),": specifies the fixed delay in milliseconds before retrying"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxDelayInMs"),":  defines the maximum delay before a retry in exponential mode"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxRetries")," specifies the maximum number of retry attempts before giving up"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutInMs"),": defines the wait time before the request is declared as timed out"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"batch"),": options that only apply to batch producer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxSizeInBytes")," defines the maximum batch size for sending messages. If not set, the default value from Azure\nEventHubs will apply."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxOpenBatches"),": defines the maximum number of parallel open batches which currently sent or retry sending at the\nsame time. If not set, the default value is 10"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"buffer"),": options that only apply to buffered producer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxWaitTimeInMs"),": milliseconds to wait for next message, if none is received within this period the buffer will send all its messages"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxEventBufferLengthPerPartition"),": defines the maximum number of messages buffered per partition before sending")))),(0,i.kt)("p",null,"Following producer example creates a buffered producer and uses the previously defined eventhubs resource but overrides\nits ",(0,i.kt)("inlineCode",{parentName:"p"},"fullQualifiedNamespace")," property to target a different endpoint."),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-json"}),'{\n    "name": "Producer1",\n    "type": "buffered",\n    "hub": "hub1",\n    "eventhub": "EventHubsResource",\n    "options": {\n        "messageId": "Event sent at {NOW_ISO}"\n    },\n    "auth": {\n        "rbac": {\n            "fullyQualifiedNamespace": "another_resource_namespace.servicebus.windows.net"\n        }\n    },\n    "retryOptions": {\n        "mode": "fix",\n        "maxRetries": 100,\n        "timeoutInMs": 1000\n    },\n    "buffer": {\n        "maxWaitTimeInMs": 1000\n    }\n}\n')),(0,i.kt)("h3",f({},{id:"topic-mappings"}),"Topic Mappings"),(0,i.kt)("p",null,"Topic mappings define how broker messages are forwarded to EventHubs endpoints.\nWildcards like ",(0,i.kt)("inlineCode",{parentName:"p"},"+")," (single level) or ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," (multi-level) are supported too.\nThe bridge allows various types of\nmappings between MQTT topics and event hubs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1:1"),": a single topic is mapped to a single event hub"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1:n"),": a single topic is mapped to multiple event hubs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m:1"),": multiple topics are forwarded to a single event hub"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m:n"),": multiple topics are forwarded to multiple event hubs")),(0,i.kt)("p",null,"Following is an example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"m:n")," topic mapping:"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-json"}),'[\n    {\n    "mqttTopics": ["topic/test1","topic/test2"],\n        "target": "Producer1"\n    },\n    {\n    "mqttTopics": ["topic/test1", "topic/test2"],\n        "target": "Producer2"\n    }\n]\n\n')),(0,i.kt)("h2",f({},{id:"json-schema"}),"JSON Schema"),(0,i.kt)(a.default,{mdxType:"SchemaDisplay"}))}N.isMDXComponent=!0},9026:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>m,default:()=>v,frontMatter:()=>c,metadata:()=>f,toc:()=>b});var i=t(3905),r=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,d=(e,n)=>{for(var t in n||(n={}))l.call(n,t)&&u(e,t,n[t]);if(s)for(var t of s(n))p.call(n,t)&&u(e,t,n[t]);return e};const c={},m=void 0,f={unversionedId:"bridges/azure-eventhubs-bridge-schema",id:"version-3.1/bridges/azure-eventhubs-bridge-schema",title:"azure-eventhubs-bridge-schema",description:"Schema for the Microsoft Azure\xae Bridge, which describes all configuration options for the bridge.",source:"@site/mosquitto_versioned_docs/version-3.1/bridges/azure-eventhubs-bridge-schema.md",sourceDirName:"bridges",slug:"/bridges/azure-eventhubs-bridge-schema",permalink:"/mosquitto/bridges/azure-eventhubs-bridge-schema",draft:!1,tags:[],version:"3.1",frontMatter:{}},h={},b=[],g={toc:b};function v(e){var n,t=e,{components:r}=t,u=((e,n)=>{var t={};for(var i in e)l.call(e,i)&&n.indexOf(i)<0&&(t[i]=e[i]);if(null!=e&&s)for(var i of s(e))n.indexOf(i)<0&&p.call(e,i)&&(t[i]=e[i]);return t})(t,["components"]);return(0,i.kt)("wrapper",(n=d(d({},g),u),a(n,o({components:r,mdxType:"MDXLayout"}))),(0,i.kt)("p",null,"Schema for the Microsoft Azure\xae Bridge, which describes all configuration options for the bridge. "),(0,i.kt)("pre",null,(0,i.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n    "title": "Azure Bridge Configuration",\n    "description": "",\n    "type": "object",\n    "properties": {\n        "eventhubs": {\n            "description": "The Azure EventHubs Bridge can forward messages to multiple EventHubs resources.",\n            "type": "array",\n            "items": {\n                "description": "An Azure EventHubs resource.",\n                "type": "object",\n                "properties": {\n                    "name": {\n                        "description": "Unique namespace identifier of an EventHubs",\n                        "type": "string",\n                        "minLength": 1\n                    },\n                    "auth": {\n                        "description": "EventHubs specific authentication. Either specify a Shared Access Signature (SAS) key or use Role Based Access Control (RBAC)",\n                        "type": "object",\n                        "properties": {\n                            "sas": {\n                                "type": "object",\n                                "properties": {\n                                    "key": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    }\n                                },\n                                "required": [\n                                    "key"\n                                ]\n                            },\n                            "rbac": {\n                                "type": "object",\n                                "properties": {\n                                    "tenantId": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "clientId": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "clientSecret": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "fullyQualifiedNamespace": {\n                                        "description": "Full namespace qualifier. If not specified \\"<namespace>.servicebus.windows.net\\" will be used",\n                                        "type": "string",\n                                        "minLength": 1\n                                    }\n                                },\n                                "required": []\n                            }\n                        },\n                        "oneOf": [\n                            {\n                                "required": [\n                                    "sas"\n                                ]\n                            },\n                            {\n                                "required": [\n                                    "rbac"\n                                ]\n                            }\n                        ]\n                    }\n                },\n                "required": [\n                    "name",\n                    "auth"\n                ]\n            }\n        },\n        "producers": {\n            "description": "Per producer settings for each event hub within an EventHubs resource",\n            "type": "array",\n            "items": {\n                "description": "Producer settings for each event hub within an EventHubs resource",\n                "type": "object",\n                "properties": {\n                    "name": {\n                        "description": "Unique name for this producer to use and identify it in mappings",\n                        "type": "string",\n                        "minLength": 1\n                    },\n                    "type": {\n                        "description": "Use a batch producer for direct message passing or a buffered producer to collect several messages before sending to eventhub",\n                        "type": "string",\n                        "default": "batch",\n                        "enum": [\n                            "batch",\n                            "buffered"\n                        ]\n                    },\n                    "hub": {\n                        "description": "Name of the hub to send messages to",\n                        "type": "string",\n                        "minLength": 1\n                    },\n                    "eventhub": {\n                        "description": "Namespace of the EventHubs to use",\n                        "type": "string",\n                        "minLength": 1\n                    },\n                    "auth": {\n                        "description": "Producer specific authentication. Specify only if differ from EventHubs auth",\n                        "type": "object",\n                        "properties": {\n                            "sas": {\n                                "type": "object",\n                                "properties": {\n                                    "key": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    }\n                                },\n                                "required": [\n                                    "key"\n                                ]\n                            },\n                            "rbac": {\n                                "type": "object",\n                                "properties": {\n                                    "tenantId": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "clientId": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "clientSecret": {\n                                        "type": "string",\n                                        "minLength": 1\n                                    },\n                                    "fullyQualifiedNamespace": {\n                                        "description": "Full namespace qualifier. If not specified \\"<namespace>.servicebus.windows.net\\" will be used",\n                                        "type": "string",\n                                        "minLength": 1\n                                    }\n                                },\n                                "required": []\n                            }\n                        },\n                        "oneOf": [\n                            {\n                                "required": [\n                                    "sas"\n                                ]\n                            },\n                            {\n                                "required": [\n                                    "rbac"\n                                ]\n                            }\n                        ]\n                    },\n                    "options": {\n                        "description": "General producer options",\n                        "type": "object",\n                        "properties": {\n                            "messageId": {\n                                "description": "Custom, may be useful for tracking event source",\n                                "type": "string"\n                            },\n                            "correlationId": {\n                                "description": "Custom, may be useful for debbuing or tracking events",\n                                "type": "string"\n                            },\n                            "partitionId": {\n                                "description": "Partition id like \\"0\\", \\"1\\",... This enables ordered event process on same partition. Either specify this or partitionKey, but not both!",\n                                "type": "string"\n                            },\n                            "partitionKey": {\n                                "description": "A fix or dynamic value. This enables ordered event process on same partition. Either specify this or partitionId, but not both!",\n                                "type": "object",\n                                "properties": {\n                                    "field": {\n                                        "description": "JSON-path wich specifies a field within message payload. To use a fix value specify default only.",\n                                        "type": "string"\n                                    },\n                                    "default": {\n                                        "description": "Either used as default if field could not be resolved or as fix value if no field is specified"\n                                    }\n                                }\n                            }\n                        },\n                        "anyOf": [\n                            {\n                                "required": [\n                                    "partitionId"\n                                ],\n                                "not": {\n                                    "required": [\n                                        "partitionKey"\n                                    ]\n                                }\n                            },\n                            {\n                                "required": [\n                                    "partitionKey"\n                                ],\n                                "not": {\n                                    "required": [\n                                        "partitionId"\n                                    ]\n                                }\n                            },\n                            {\n                                "not": {\n                                    "required": [\n                                        "partitionId",\n                                        "partitionKey"\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    "retryOptions": {\n                        "type": "object",\n                        "properties": {\n                            "mode": {\n                                "type": "string",\n                                "enum": [\n                                    "fix",\n                                    "exponential"\n                                ]\n                            },\n                            "delayInMs": {\n                                "description": "Period in milliseconds to wait until next retry",\n                                "type": "number"\n                            },\n                            "maxDelayInMs": {\n                                "description": "Max. delay in milliseconds to wait before next retry. Only useful if mode is exponential",\n                                "type": "number"\n                            },\n                            "maxRetries": {\n                                "description": "Max. number of retries",\n                                "type": "number"\n                            },\n                            "timeoutInMs": {\n                                "description": "Milliseconds to wait before declaring current request as timed out",\n                                "type": "number"\n                            }\n                        }\n                    },\n                    "batch": {\n                        "description": "Options to apply for batch producer only",\n                        "type": "object",\n                        "properties": {\n                            "maxSizeInBytes": {\n                                "description": "Max. batch size",\n                                "type": "number"\n                            },\n                            "maxOpenBatches": {\n                                "description": "Max. number of batches sending or retrying at the same time. Default is 10",\n                                "type": "number"\n                            }\n                        }\n                    },\n                    "buffer": {\n                        "description": "Options for buffered producer only",\n                        "type": "object",\n                        "properties": {\n                            "maxWaitTimeInMs": {\n                                "description": "Milliseconds to wait for next message. If none is received during this period the buffered producer sends all of its messages.",\n                                "type": "number"\n                            },\n                            "maxEventBufferLengthPerPartitions": {\n                                "description": "Max. buffer length. If this limit is reached the buffer sends all of its messages.",\n                                "type": "number"\n                            }\n                        }\n                    }\n                },\n                "required": [\n                    "name",\n                    "hub",\n                    "eventhub"\n                ]\n            }\n        },\n        "topicMappings": {\n            "description": "Descriptions for how to map MQTT topics to azure event hubs",\n            "type": "array",\n            "items": {\n                "type": "object",\n                "properties": {\n                    "mqttTopics": {\n                        "description": "List of MQTT topics to map",\n                        "type": "array",\n                        "items": {\n                            "description": "MQTT topic to map",\n                            "type": "string",\n                            "minLength": 1\n                        }\n                    },\n                    "target": {\n                        "description": "Name of defined producer to send message to",\n                        "type": "string",\n                        "minLength": 1\n                    }\n                },\n                "required": [\n                    "mqttTopics",\n                    "target"\n                ]\n            }\n        }\n    },\n    "required": [\n        "eventhubs",\n        "producers"\n    ]\n}\n')))}v.isMDXComponent=!0},49044:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(67294),r=t(39082),a=t(62659),o=t(83166);function s({inline:e}){return i.createElement(r.Z,{sx:{margin:e?"0px 5px":"0px 5px 5px 10px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:a.Z[500]},size:"small",icon:i.createElement(o.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},87961:(e,n,t)=>{t.d(n,{Z:()=>o});var i=t(67294),r=t(39082),a=t(2548);function o({version:e}){return e?i.createElement(r.Z,{sx:{margin:"0px 5px 5px 10px",bgcolor:"#FD602E"},color:"info",size:"small",icon:i.createElement(a.Z,{size:"small"}),label:`Version ${e}`}):i.createElement(i.Fragment,null)}}}]);