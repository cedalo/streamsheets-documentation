"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[6611],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),l=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(r),m=n,h=f["".concat(c,".").concat(m)]||f[m]||u[m]||a;return r?i.createElement(h,o(o({ref:t},p),{},{components:r})):i.createElement(h,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},99951:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>y,frontMatter:()=>f,metadata:()=>h,toc:()=>v});var i=r(3905),n=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&p(e,r,t[r]);if(s)for(var r of s(t))l.call(t,r)&&p(e,r,t[r]);return e};const f={id:"server-certificates",title:"Server Certificates",sidebar_label:"Server Certificates"},m="Prerequisites",h={unversionedId:"security/certificates/server-certificates",id:"version-3.0/security/certificates/server-certificates",title:"Server Certificates",description:"Ensure you have the following files ready before configuring Mosquitto:",source:"@site/mosquitto_versioned_docs/version-3.0/security/certificates/server-certificates.md",sourceDirName:"security/certificates",slug:"/security/certificates/server-certificates",permalink:"/mosquitto/3.0/security/certificates/server-certificates",draft:!1,tags:[],version:"3.0",frontMatter:{id:"server-certificates",title:"Server Certificates",sidebar_label:"Server Certificates"},sidebar:"someSidebar",previous:{title:"SAML Authentication/SSO",permalink:"/mosquitto/3.0/security/platform-access/platform-saml-auth"},next:{title:"mTLS",permalink:"/mosquitto/3.0/security/certificates/mtls"}},d={},v=[{value:"Configuring Pro Mosquitto Broker with a Server Certificate",id:"configuring-pro-mosquitto-broker-with-a-server-certificate",level:2},{value:"Pro Mosquitto TLS termination",id:"pro-mosquitto-tls-termination",level:3},{value:"HA Proxy TLS termination",id:"ha-proxy-tls-termination",level:3},{value:"Client connections",id:"client-connections",level:3},{value:"Certificate access",id:"certificate-access",level:3},{value:"Configuring Cedalo Platform with a Server Certificate",id:"configuring-cedalo-platform-with-a-server-certificate",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Example configuration",id:"example-configuration",level:3},{value:"Docker compose",id:"docker-compose",level:3}],k={toc:v};function y(e){var t,r=e,{components:n}=r,p=((e,t)=>{var r={};for(var i in e)c.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&s)for(var i of s(e))t.indexOf(i)<0&&l.call(e,i)&&(r[i]=e[i]);return r})(r,["components"]);return(0,i.kt)("wrapper",(t=u(u({},k),p),a(t,o({components:n,mdxType:"MDXLayout"}))),(0,i.kt)("h1",u({},{id:"prerequisites"}),"Prerequisites"),(0,i.kt)("p",null,"Ensure you have the following files ready before configuring Mosquitto:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Server Certificate")," (",(0,i.kt)("inlineCode",{parentName:"li"},"server.crt"),"): The public server certificate."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Private Key")," (",(0,i.kt)("inlineCode",{parentName:"li"},"server.key"),"): The private key associated with the server certificate.")),(0,i.kt)("h2",u({},{id:"configuring-pro-mosquitto-broker-with-a-server-certificate"}),"Configuring Pro Mosquitto Broker with a Server Certificate"),(0,i.kt)("h3",u({},{id:"pro-mosquitto-tls-termination"}),"Pro Mosquitto TLS termination"),(0,i.kt)("p",null,"Open your ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file to add a certificate to a certain port.\nAdd or modify the following settings to configure the Pro Mosquitto broker to use the server certificate:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# Enable a listener on port 8883 for SSL/TLS connections\nlistener 8883\nprotocol mqtt\n\n# SSL/TLS certificate paths\ncertfile /path/to/server.crt\nkeyfile /path/to/server.key\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"listener 8883: Sets the port for SSL/TLS communication. Port 8883 is the standard MQTT SSL/TLS port."),(0,i.kt)("li",{parentName:"ul"},"certfile: Specifies the path to the server's public certificate file."),(0,i.kt)("li",{parentName:"ul"},"keyfile: Specifies the path to the server's private key file.")),(0,i.kt)("h3",u({},{id:"ha-proxy-tls-termination"}),"HA Proxy TLS termination"),(0,i.kt)("p",null,"In a cluster setup an HA Proxy is used for TLS termination. This is the default config of the frontend ",(0,i.kt)("inlineCode",{parentName:"p"},"haproxy.json"),"file: "),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"frontend mqtt_frontend\n    bind *:1883\n    mode tcp\n    default_backend mqtt_backend\n    timeout client 10m\n")),(0,i.kt)("p",null,"In order to enable TLS termination here add the following behind the ",(0,i.kt)("inlineCode",{parentName:"p"},"bind *:<port>")," parameter: ",(0,i.kt)("inlineCode",{parentName:"p"},"ssl crt /path/to/certs/server.pem"),"\nThis will do the TLS termination at the frontend stage before routing the traffic further to the set backend (here ",(0,i.kt)("inlineCode",{parentName:"p"},"mqtt_backend")," )."),(0,i.kt)("h3",u({},{id:"client-connections"}),"Client connections"),(0,i.kt)("p",null,"Use an MQTT client to connect to the broker using the secure port (e.g., 8883) to verify that the server certificate is being used:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"mosquitto_sub -h <broker-ip> -p 8883 -t test/topic --cafile /path/to/ca.crt\n")),(0,i.kt)("p",null,"In this example, a ",(0,i.kt)("inlineCode",{parentName:"p"},"--cafile")," parameter is added to the test because, depending on the device and the server certificate, your underlying system may not have the required CA in place to validate the server certificate you set."),(0,i.kt)("h3",u({},{id:"certificate-access"}),"Certificate access"),(0,i.kt)("p",null,"It is important that the files from the specified path are available to Pro Mosquitto. Ensure that the private key file is securely accessible to the Mosquitto service:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"sudo chmod 640 /path/to/server.key\nsudo chown mosquitto:mosquitto /path/to/server.key\n")),(0,i.kt)("p",null,"This ensures that only the Mosquitto service has access to the private key, enhancing security."),(0,i.kt)("p",null,"To apply the changes, restart Pro Mosquitto. Check the Mosquitto logs for troubleshooting if needed. "),(0,i.kt)("h2",u({},{id:"configuring-cedalo-platform-with-a-server-certificate"}),"Configuring Cedalo Platform with a Server Certificate"),(0,i.kt)("p",null,"You can achieve https:// access either via a reverse proxy of your choice or by adding the server certificates directly to the platform via environment variables."),(0,i.kt)("h3",u({},{id:"environment-variables"}),"Environment Variables"),(0,i.kt)("p",null,"To conifgure the server certificates use the following Environment Variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"BASE_URL"),": URL the platform will be reachable at (should have the same IP/hostname as specified in the certificate)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"NEXTAUTH_URL"),": URL the platform will be reachable at (should have the same IP/hostname as specified in the certificate)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"MOSQUITTO_PLATFORM_HTTPS_KEY_PATH"),": Path to server's private key file (required)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"MOSQUITTO_PLATFORM_HTTPS_CERT_PATH"),": Path to server's certificate (required)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"MOSQUITTO_PLATFORM_HTTPS_CA_PATH"),": path to CA certificate (optional)")),(0,i.kt)("h3",u({},{id:"example-configuration"}),"Example configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"            BASE_URL: https://192.168.178.27:3000\n            NEXTAUTH_URL: https://192.168.178.27:3000\n            MOSQUITTO_PLATFORM_HTTPS_KEY_PATH: /certs/cert.key\n            MOSQUITTO_PLATFORM_HTTPS_CERT_PATH: /certs/cert.crt\n")),(0,i.kt)("h3",u({},{id:"docker-compose"}),"Docker compose"),(0,i.kt)("p",null,"In docker based deployments make sure, that the linked certificates are reachable. A mount to the local directory allows you to store the used certs in the setup folders:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"        volumes:\n            ...\n            - ./certs:/certs\n")))}y.isMDXComponent=!0}}]);