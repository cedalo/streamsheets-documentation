"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[88211],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=m(n),d=s,p=u["".concat(l,".").concat(d)]||u[d]||h[d]||r;return n?a.createElement(p,i(i({ref:t},c),{},{components:n})):a.createElement(p,i({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89232:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var a=n(87462),s=n(63366),r=(n(67294),n(3905)),i=["components"],o={id:"components-streamsheet",title:"Streamsheet",sidebar_label:"Streamsheet"},l=void 0,m={unversionedId:"maincomponents/components-streamsheet",id:"version-2.3/maincomponents/components-streamsheet",title:"Streamsheet",description:"Eclipse Streamsheets are the main components to create the logic for your use",source:"@site/streamsheets_versioned_docs/version-2.3/maincomponents/streamsheet.md",sourceDirName:"maincomponents",slug:"/maincomponents/components-streamsheet",permalink:"/streamsheets/2.3/maincomponents/components-streamsheet",tags:[],version:"2.3",frontMatter:{id:"components-streamsheet",title:"Streamsheet",sidebar_label:"Streamsheet"},sidebar:"version-2.3/someSidebar",previous:{title:"Streams",permalink:"/streamsheets/2.3/maincomponents/components-streams"},next:{title:"Getting Started",permalink:"/streamsheets/2.3/getting-started"}},c=[{value:'Inbox<span id="Inbox picture"></span>',id:"inbox",children:[],level:2},{value:"Inbox Settings",id:"inbox-settings",children:[],level:2},{value:"Grid",id:"grid",children:[],level:2},{value:"Streamsheets Settings",id:"streamsheets-settings",children:[],level:2},{value:"Messages",id:"messages",children:[],level:2}],h={toc:c};function u(e){var t=e.components,o=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Eclipse Streamsheets are the main components to create the logic for your use\ncases. Here you model how an App works and, thus, how data streams are\nprocessed, analysed, visualized, combined and controlled or even\nsimulated."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Streamsheet1",src:n(22394).Z,width:"992",height:"616"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To connect a data stream to a Streamsheet you can:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Select a onsumer (This is the most common case; however, a\nConsumer must be created in the administration first)"),(0,r.kt)("li",{parentName:"ul"},"Use specific functions, e.g. ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/opcuaread"},"OPCUA.READ")," or\n",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/httprequest"},"HTTP.REQUEST")," with GET-Method")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To create an outgoing data stream or make data available you have\nseveral options:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Choose a Producer function, e.g. ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/mqttpublish"},"MQTT.PUBLISH")," or ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/kafkapublish"},"KAFKA.PUBLISH")),(0,r.kt)("li",{parentName:"ul"},"Choose a posting function, e.g. ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/opcuawrite"},"OPCUA.WRITE")," or ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/httprequest"},"HTTP.REQUEST")," with POST-Method"),(0,r.kt)("li",{parentName:"ul"},"Expose the App as OPC UA or REST Server so that other services can access its data"),(0,r.kt)("li",{parentName:"ul"},"Store the data in a database, e.g. by using ",(0,r.kt)("a",{parentName:"li",href:"../functions/streams/timescaleselect"},"TIMESCALE.INSERT"))),(0,r.kt)("p",null,"Often, a Streamsheet consumes and produces streams. Nonetheless, neither\nan incoming nor an outgoing data stream are mandatory. For instance,\nStreamsheets which are calculated repeatedly and only produce streams\nare great for simulating sensors, machines, APIs and other data sources.\nOn the other hand, sheets with pure dashboard and visualization\nfunctionality typically only consume streams without generating one on\ntheir own."),(0,r.kt)("p",null,"Each Streamsheet consists of an Inbox and a Grid."),(0,r.kt)("h2",{id:"inbox"},"Inbox",(0,r.kt)("span",{id:"Inbox picture"})),(0,r.kt)("p",null,"As in a mail service, the Inbox marks the point where new messages\narrive and queue in order of their arrival time before they are\nprocessed. Although the Inbox only displays up to a maximum of 100\nmessages on your client (your browser), an unlimited amount can be\nqueued on the server. The structure and content of a message is given in\nfull detail and presented as a JSON Object in the Payload section.\nShould the original data format not be JSON, the format is automatically\nconverted. Via drag and drop some or all payload elements of incoming\nmessages can be linked to the grid and create a ",(0,r.kt)("a",{parentName:"p",href:"../functions/streamsheet/read"},"READ() function"),". Now, every time a new message\narrives and the Streamsheet is calculated, the respective cells are\nupdated with new message data or set to #NA, if a message did not deliver the linked parameter. Message streams are connected to a Streamsheet by selecting a\nConsumer in the Inbox Settings. The name of the selected Consumer is\nthen also shown above the Inbox. Consumers define incoming data streams\n(More on them under Consumers)."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Inbox",src:n(32547).Z,width:"192",height:"384"})),(0,r.kt)("p",null,"The inbox above holds two messages. The first has the Message-IDs\nHJFG5rEDV and holds one data element as content, a temperature\nmeasurement."),(0,r.kt)("h2",{id:"inbox-settings"},"Inbox Settings"),(0,r.kt)("p",null,"In this settings menu you decide which data streams a Streamsheet\nconsumes and also its recalculation mode. The settings explained point\nby point:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u201cConsumer\u201d lists all available Consumers. Choose the one which\ndelivers the desired data streams. To define new or adjust existing\nConsumers, please go to the Administration Menu.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u201cCalculate Streamsheet\u201d defines the recalculation mode of a\nStreamsheet:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"Continuously"),"\u201d: The Streamsheet is recalculated\ncontinuously and cyclically until the App is stopped - also if\nNO messages are received. The sheet\xb4s cycle time is the cycle\ntime of the App. (This is the default setting)"),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On Message Arrival"),"\u201d: Every time a message is received,\nthe sheet is calculated immediately. In this mode message\nqueues are not formed because the sheet is recalculated\nirrespective of the cycle time of the App."),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On EXECUTE Formula"),"\u201d: The calculation of a Streamsheet is\ntriggered by another Streamsheet which contains an ",(0,r.kt)("a",{parentName:"li",href:"../functions/streamsheet/execute"},"EXECUTE"),"\nformula. This triggering sheet must be in the same App. Note:\nThe sheet triggering the execution will pause its calculation\nin the cell containing EXECUTE, wait until the triggered sheet\nhas completed its calculation and, then, resume its\ncalculation."),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On App Start"),"\u201d: The Streamsheet calculates once when the\nApp is started."),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On App Stop"),"\u201d: The Streamsheet calculates when the App is\nbeing stopped."),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On Time"),"\u201d: A date and time for the calculation can be\ndefined. Additionally, a sheet-specific interval can be set to\nrecalculate the sheet cyclically. This interval only applies\nto this sheet and overwrites the cycle time of its App."),(0,r.kt)("li",{parentName:"ul"},"\u201c",(0,r.kt)("strong",{parentName:"li"},"On Random"),"\u201d: A date and time for the calculation and\nadditionally an interval for the recalculation can be defined.\nIn this respect it is similar to \u201cOn Time\u201d, however, the\ncalculation will not be triggered at the beginning of each\ninterval but randomly during the interval. This mode provides\na way for introducing randomness, which can be interesting\nwhen simulating data sources, for instance.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Loop through array (one calculation per array element): This comes\nin handy if your messages contain information through which you want\nto loop, e.g. a list of ordered products. If this option is checked,\nan array element within incoming messages can be selected. Then, the\nStreamsheet loops through all elements which are subsumed under this\narray element. As a result, not one message per calculation is\nprocessed but only one element under the array element. The easiest\nway to set a loop element is to right-click on it in the\ninbox-payload and choose this option. Alternatively, you can define\nit and its superelement by listing the respective keys.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u201eHide unprocessed Messages\u201d: If this option is checked, a\nqueue of messages is not displayed in the inbox. Only the next\nmessage to be processed is displayed."))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"A Consumer delivers messages to a Streamsheet.\nVia drag & drop the content of messages can be linked to the Streamsheet\ngrid. A Producer can be used to send messages from a Streamsheet to a\ndestination. Check out ",(0,r.kt)("a",{parentName:"p",href:"../getting-started"},'"Getting Started"')," to learn more."))),(0,r.kt)("h2",{id:"grid"},"Grid"),(0,r.kt)("p",null,"The grid of a Streamsheet is the place where the logic for analysing,\nprocessing and visualizing data is modelled. This is done by using\nspreadsheet functions and the tools you find in the tool bar.\nStreamsheets offer familiar spreadsheet formulas, as e.g. known from MS\nExcel or Google Sheets, as well as formulas especially designed for\nworking with data streams and dynamic data structures. All formulas are\nexplained in detail in the functions section. The recalculation of a\nStreamsheet can be triggered in various ways, e.g. always when a new\nmessage arrives, at specific points in time or cyclically. (Jump to\nInbox Settings to see all calculation modes) However when a\nStreamsheet is calculated, this always happens cell by cell from left to\nright and from top to bottom thus maximizing transparency over what is\nhappening in which order. Special columns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IF-Column:")," This is the first column right before \u201cA\u201d. Cells in\nthis column take conditions and based on the state of these\nconditions, the respective rows are being calculated or not. As a\nresult, IF-cells switch the calculation of entire rows and their\ncells on and off. The default value of IF-cells is TRUE. Thus, if\nIF-cells are empty, the rows are calculated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"COMMENT-Column:")," Even further to the left of the IF-column is the\nCOMMENT column which is hidden by default. This column is intended\nfor documenting what your model does.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"GRID",src:n(90456).Z,width:"1338",height:"1003"})),(0,r.kt)("p",null,"In the left corner above the grid, the name of the Streamsheet is given\nand how many times it has been calculated since the last App stop (Note:\nPausing an App will not reset the Step Counter). On the right, you can\nmaximize, minimize and delete a sheet or open its settings."),(0,r.kt)("h2",{id:"streamsheets-settings"},"Streamsheets Settings"),(0,r.kt)("p",null,"In this menu you find the settings for the basic structure and\nappearance of a Streamsheet."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Settings:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name"),": A Streamsheet can be renamed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Columns"),": Set the number of columns (Max: 50)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Rows"),": Set the number of rows (Max: 200)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Protect sheet"),": No interaction with grid or the Inbox is possible"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Show Grid"),": Display the grid or do not"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Show Headers"),": Display column and row titles or do not"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Show Formulas"),": Decide whether you want to see the formulas or\nthe current values of cells in the sheet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Show Inbox"),": Display the Inbox or do not"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Paint IF Rows with transparency"),": If this box is checked, the\ncontent of rows which contain a statement in the IF-column are\ntransparent. This improves transparency and helps you to immediately\nidentify the rows which are being switch on and off when the App is\nrunning.")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Streamsheets are always calculated from left to right and from\ntop to bottom."),(0,r.kt)("li",{parentName:"ul"},"Depending on a condition in the IF column, the calculation of\nwhole rows can be switched on and off.")))),(0,r.kt)("h2",{id:"messages"},"Messages"),(0,r.kt)("p",null,"In the Streamsheet environment, all messages are JSON objects. In case\nthe original data format is not JSON, but e.g. csv, xml or a text file,\nthe format is automatically converted to JSON."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JSON")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Json objects are a hierarchy of key-value pairs. This means that any\nvalue, e.g. a number or a string, is identified by its key. You\ncould think of the key as the name or the title of its value. In\norder not to just have a flat list of key-value pairs, these can be\nordered and subsumed, e.g. in the Inbox picture the key-value pair\n\u201cTemperature: 34\u201d is subsumed under the top-element \u201cData\u201d.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Connect message content to the Grid")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To link data elements of an incoming stream to the grid, simply\ndrag-and-drop the respective elements. You can also link all\nelements under a top-element at once by drag-and-dropping their\ntop-element. If you hit Strg or Cmd while you are doing this, the\ndrag-and-drop range turns by 90\xb0."),(0,r.kt)("li",{parentName:"ul"},"Of course, Streamsheets offer the possibility to use a function to\nread incoming data. This function is called READ and it is also\nautomatically created when you drag-and-drop elements into the\nsheet.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Generate message content aka a JSON object in the sheet")),(0,r.kt)("p",null,"In order to send data, you need to create a JSON object and then use a\nproducer or posting function."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can convert any coherent cell range consisting of two columns\nand an arbitrary number of rows into a JSON object. Simply select\nthe range, then, right-click it and choose \u201cDefine JSON Range\u201d. This\ngenerates a flat JSON object, that is to say that all keys are in\nthe first column, the respective values are in the second column and\nthe object is not hierarchically structured. To build a hierarchy,\nselect the elements you want to subsume and hit \u201ctab\u201d on your\nkeyboard. If you want to undo this operation, just hit \u201ctab\u201d and\n\u201cshift\u201d at the same time."),(0,r.kt)("li",{parentName:"ul"},"If you turn more than 2 columns into a single JSON range, the first\ncolumn will contain the keys whereas the remaining columns\naccommodate the values. Example: A range of 4 columns is turned into\na JSON range. The first column contains the keys which all\nvalue-columns will share. Each value-column will automatically\nassume the keys in the first column to build key-value pairs."),(0,r.kt)("li",{parentName:"ul"},"To send messages or make JSON ranges available choose one of the\nways mentioned under Streamsheets")))}u.isMDXComponent=!0},90456:function(e,t,n){t.Z=n.p+"assets/images/GRID-c1b1d990ebcd74d113caae8fbc366503.PNG"},32547:function(e,t,n){t.Z=n.p+"assets/images/Inbox-10f9f4888442cf1d7a4000f71c32173c.JPG"},22394:function(e,t,n){t.Z=n.p+"assets/images/Streamsheet1-1b75feb3f48c555e76e34f3334f39f94.PNG"}}]);