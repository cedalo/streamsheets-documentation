"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[51311],{83166:(e,n,t)=>{var o=t(64836);n.Z=void 0;var i=o(t(64938)),a=t(85893),l=(0,i.default)((0,a.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");n.Z=l},13328:(e,n,t)=>{var o=t(64836);n.Z=void 0;var i=o(t(64938)),a=t(85893),l=(0,i.default)((0,a.jsx)("path",{d:"m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}),"NewReleases");n.Z=l},59623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>f,default:()=>N,frontMatter:()=>m,metadata:()=>h,toc:()=>y});var o=t(3905),i=t(78901),a=t(49044),l=Object.defineProperty,r=Object.defineProperties,s=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,c=(e,n)=>{for(var t in n||(n={}))u.call(n,t)&&d(e,t,n[t]);if(p)for(var t of p(n))g.call(n,t)&&d(e,t,n[t]);return e};const m={id:"mc-audit-trail",title:"Audit Trail",sidebar_label:"Audit Trail"},f=void 0,h={unversionedId:"management-center/overview/mc-audit-trail",id:"version-2.9/management-center/overview/mc-audit-trail",title:"Audit Trail",description:"This page describes how to use the Audit Trail Feature which is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC).",source:"@site/mosquitto_versioned_docs/version-2.9/management-center/overview/audit-trail.md",sourceDirName:"management-center/overview",slug:"/management-center/overview/mc-audit-trail",permalink:"/mosquitto/management-center/overview/mc-audit-trail",draft:!1,tags:[],version:"2.9",frontMatter:{id:"mc-audit-trail",title:"Audit Trail",sidebar_label:"Audit Trail"},sidebar:"someSidebar",previous:{title:"User Profile",permalink:"/mosquitto/management-center/overview/mc-user-profile"},next:{title:"Management Center Guides",permalink:"/mosquitto/management-center/guides/"}},k={},y=[{value:"Enable Audit Trail Plugin",id:"enable-audit-trail-plugin",level:2},{value:"Audit Trail Functionality",id:"audit-trail-functionality",level:2},{value:"Log entries",id:"log-entries",level:2},{value:"Log entry wrapper",id:"log-entry-wrapper",level:3},{value:"Configuration file",id:"configuration-file",level:2},{value:"Config file structure",id:"config-file-structure",level:3},{value:"Config file properties:",id:"config-file-properties",level:2},{value:"Logger types",id:"logger-types",level:3},{value:"Logger options",id:"logger-options",level:3},{value:"Using filters",id:"using-filters",level:3},{value:"Config file location",id:"config-file-location",level:3},{value:"Configuring syslog on your system",id:"configuring-syslog-on-your-system",level:2},{value:"On Redhat-based Linux",id:"on-redhat-based-linux",level:4},{value:"On Debian-based Linux",id:"on-debian-based-linux",level:4},{value:"Rsyslog Configuration:",id:"rsyslog-configuration",level:4},{value:"Open UDP port for rsyslog:",id:"open-udp-port-for-rsyslog",level:4},{value:"Syslog-ng Configuration:",id:"syslog-ng-configuration",level:4},{value:"Limitations",id:"limitations",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"List of sources (plugin names)",id:"list-of-sources-plugin-names",level:2},{value:"Default config file",id:"default-config-file",level:2},{value:"Config file with syslog",id:"config-file-with-syslog",level:2}],v={toc:y};function N(e){var n,t=e,{components:l}=t,d=((e,n)=>{var t={};for(var o in e)u.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&p)for(var o of p(e))n.indexOf(o)<0&&g.call(e,o)&&(t[o]=e[o]);return t})(t,["components"]);return(0,o.kt)("wrapper",(n=c(c({},v),d),r(n,s({components:l,mdxType:"MDXLayout"}))),(0,o.kt)(i.Z,{version:"2.7",mdxType:"SinceVersion"}),(0,o.kt)(a.Z,{mdxType:"PremiumFeature"}),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"This page describes how to use the ",(0,o.kt)("strong",{parentName:"p"},"Audit Trail Feature")," which is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC)."),(0,o.kt)("p",null,"An audit trail (also called audit log) is a security-relevant chronological record, set of records, and/or destination and source of records that provide documentary evidence of the sequence of activities that have affected at any time a specific operation, procedure, event, or device."),(0,o.kt)("p",null,"This feature logs information about user performed operations in the Mosquitto Management Center. The information can be logged to different locations as syslog, file, or console."),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Audit Trail can only be set up on the backend side by modifying configuration files. The MMC does not provide an API for querying the log information. It is up to the user to read the Audit Trail logs from syslog or any other supported medium, parse them, and integrate this information into other systems.")),(0,o.kt)("h2",c({},{id:"enable-audit-trail-plugin"}),"Enable Audit Trail Plugin"),(0,o.kt)("p",null,"To enable Audit Trail Feature you should make sure you are using Pro Edition of Mosquitto and that you have the feature enabled in your license. Also, ensure that your config file (specified with ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG")," environmental variable or by default saved in ",(0,o.kt)("inlineCode",{parentName:"p"},"management-center/config/config.json"),") contains the following entry inside of the ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," array:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'    {\n      "name": "audit-trail"\n    }\n')),(0,o.kt)("p",null,"On start-up, Management Center will print a message that ",(0,o.kt)("inlineCode",{parentName:"p"},"audit-trail")," plugin is enabled and loaded into the console:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{}),'Loaded plugin: "audit-trail" (Cedalo Audit Trail)\n')),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Apart from enabling Audit Trail, you might want to create/modify it's configuration file. ",(0,o.kt)("a",c({parentName:"p"},{href:"#configuration-file"}),"More details"))),(0,o.kt)("h2",c({},{id:"audit-trail-functionality"}),"Audit Trail Functionality"),(0,o.kt)("p",null,"Audit trail is a forensic analysis tool which logs operations performed by users in MMC, which allows for user behavior analysis, security audits, post-mortem incident analytics, and troubleshooting. The logs can be directed to a syslog service (recommended way), to a file, or simply to the console. The log entries are of json format (see ",(0,o.kt)("a",c({parentName:"p"},{href:"#log-entries"}),"Log entries")," section below) which are logged according to the log levels used in ",(0,o.kt)("a",c({parentName:"p"},{href:"https://datatracker.ietf.org/doc/html/rfc5424#page-36:~:text=March%202009%0A%0A%0A%20%20%20%20%20%20%20%20%20%20%20Numerical-,Severity,-Code%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%200%20%20%20%20%20%20%20Emergency"}),"Syslog protocol")," from least severe to most severe:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"debug")," (least severe)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"info")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"notice")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"warning")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"err")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"crit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"alert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"emerg")," (most severe)")),(0,o.kt)("p",null,"Note that log levels are mostly relevant for Syslog (check the ",(0,o.kt)("a",c({parentName:"p"},{href:"https://datatracker.ietf.org/doc/html/rfc5424"}),"details of this standard"),") but they are also included into the contents of ",(0,o.kt)("a",c({parentName:"p"},{href:"#log-entry-wrapper"}),"log entry wrapper object")," for the ease of information filtering."),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"The main focus of this feature is on Syslog. Other ",(0,o.kt)("a",c({parentName:"p"},{href:"#logger-types"}),"mediums")," like ",(0,o.kt)("inlineCode",{parentName:"p"},"file")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," are offered but not recommended for gathering logs as they lack the advanced features of Syslog.")),(0,o.kt)("p",null,"Audit trail allows for fine-grained control over which specific operations from which plugins are logged and with which log levels. All the configuration for Audit Trail is performed in the config file usually called ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," which is either stored in its default location (",(0,o.kt)("inlineCode",{parentName:"p"},"plugins/audit-trail/audit.json"),") or in location specified in ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," variable (note that using this variable you specify not only the path to the config file but also the name of the file)."),(0,o.kt)("p",null,'By default, Audit Trail logs all the operations with the "defaultLoglevel" specified in the config file. However, you can override the loglevel for every operation by specifying it in the respective section of the file. This overridden loglevel will be used for log entries generated by the specified operation unless an error occurs, in which case the level will be ',(0,o.kt)("inlineCode",{parentName:"p"},"err"),"."),(0,o.kt)("p",null,"Moreover, you can also set up filters to only allow logins of the specific plugins and operations."),(0,o.kt)("p",null,"More on how to configure ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," can be found under ",(0,o.kt)("a",c({parentName:"p"},{href:"#configuration-file"}),"Configuration file section"),"."),(0,o.kt)("p",null,"The configuration file will be created with default options on the first app startup if it does not already exist. This file generation happens if you specify a different-from-default file location via ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," variable, as ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," already exists in it's base location (at ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins/audit-trail/audit.json"),"). ",(0,o.kt)("em",{parentName:"p"},"However, note that MMC installations usually come with reasonable defaults, and your config files including ",(0,o.kt)("inlineCode",{parentName:"em"},"audit.json")," will be stored in the config directory set up for your installation.")),(0,o.kt)("p",null,"You can find how the default config file looks in the ",(0,o.kt)("a",c({parentName:"p"},{href:"#default-config-file"}),"Default config file section")," of this doc page.\nIf you need to make some changes to the config file, restart the MMC to apply them."),(0,o.kt)("h2",c({},{id:"log-entries"}),"Log entries"),(0,o.kt)("p",null,"Each log entry contains the following information:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Timestamp"),": information on when the operation was performed (timestamp in millisecond resolution)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"IP Address"),": information on from which IP address the operation was initiated (Client IP). Note: whether this information is part of the log entry or not can be configured via a configuration file."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Hostname"),": the hostname of the broker to which the operation was sent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Port"),": the port of the broker to which the operation was sent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Username / Application Token"),": information on which user or which application (identified by the application token) performed the operation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Source (Module name / plugin name)"),": source of the operation, i.e. name of the module or plugin, where the operation was performed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Operation Type"),": the CRUD (Create Retreive Update Delete) operation type which characterizes the application. Currently, supported values are ",(0,o.kt)("inlineCode",{parentName:"li"},"create"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"read"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"update"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"delete")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"other"),". The ",(0,o.kt)("inlineCode",{parentName:"li"},"other")," type includes operation types that are not well covered by the first four types, such as broker connection/disconnection or startup/shutdown."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Operation name"),": the name of the operation that was performed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Operation parameters"),": the parameters passed to the operation that was performed.")),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Every log entry is logged with a certain log level configured through the config file (",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json"),"). However, these levels are not included into the log entry itself and are handled by your syslog service when ",(0,o.kt)("a",c({parentName:"p"},{href:"#logger-types"}),"syslog logger")," is used.")),(0,o.kt)("p",null,"Log entry example:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "timestamp": 1675676434000,\n  "ipAddress": "127.0.0.1",\n  "hostname": "localhost",\n  "operationType": "update", // "create", "read", "update", "delete", or "other"\n  "port": "8883",\n  "source": "dynamic-security",\n  "identifier": {\n    "username": "max",\n   // and/or "tokenName": "..."\n   // and/or "tokenHash": "..."\n  },\n  "operation": "createClient",\n  "params": {\n    "username": "max",\n    "clientid": "example-client",\n    "rolename": "admin",\n    "textname": "ExampleClient",\n    "textdescription": "Example client for testing"\n  }\n}\n')),(0,o.kt)("h3",c({},{id:"log-entry-wrapper"}),"Log entry wrapper"),(0,o.kt)("p",null,"Note that when logging, MMC wraps another object called log entry wrapper around the original log entery.\nEvery logenry is stored within a ",(0,o.kt)("inlineCode",{parentName:"p"},"message")," property of that wrapper object.\nWrapper object contains some metadata about the log entry which is relevant to the logging configuration."),(0,o.kt)("p",null,"The properties of the logentery wrapper object are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Level"),": Loglevel that the operation in log entry has (For example ",(0,o.kt)("inlineCode",{parentName:"li"},"startup")," operation might have ",(0,o.kt)("inlineCode",{parentName:"li"},"info")," loglevel, whereas ",(0,o.kt)("inlineCode",{parentName:"li"},"getConnection")," - ",(0,o.kt)("inlineCode",{parentName:"li"},"debug"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Message"),": original log entry object (with all the properties described above)")),(0,o.kt)("p",null,"Here is an example of a log entry wrapper object:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "level": "info",\n    "message": {\n        "timestamp": 1675676434000,\n        "ipAddress": "127.0.0.1",\n        "hostname": "localhost",\n        "operationType": "update", // "create", "read", "update", "delete", or "other"\n        "port": "8883",\n        "source": "dynamic-security",\n        "identifier": {\n            "username": "max",\n        // and/or "tokenName": "..."\n        // and/or "tokenHash": "..."\n        },\n        "operation": "createClient",\n        "params": {\n            "username": "max",\n            "clientid": "example-client",\n            "rolename": "admin",\n            "textname": "ExampleClient",\n            "textdescription": "Example client for testing"\n        }\n    }\n}\n')),(0,o.kt)("h2",c({},{id:"configuration-file"}),"Configuration file"),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"When config file is mentioned in this page and no further context given, then the configuration file for Audit Trail specifically (commonly called ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json"),") is meant, not the main configuration file of MMC (",(0,o.kt)("inlineCode",{parentName:"p"},"config.json"),").")),(0,o.kt)("h3",c({},{id:"config-file-structure"}),"Config file structure"),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Note that default configuration file will log all the operations to the console. If you want to change this, you will have to create your own file and specify the path in ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"path/to/dir/audit.json"),") or ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_DATA_DIRECTORY_PATH")," (e.g.  ",(0,o.kt)("inlineCode",{parentName:"p"},"path/to/dir"),").")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," is stored in json format and consists of an array of one or many logger objects."),(0,o.kt)("p",null,"Here is an example of ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," file with a single logger object:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "logger": "syslog",\n        "options": {\n            "protocol": "unix",\n            "path": "/dev/log"\n        },\n        "logThreshold": "debug",\n        "defaultLoglevel": "info",\n        "disable": true,\n        "filters": [\n            {"filterType": "include"}\n        ],\n        "operations": [\n            {\n                "source": "application-tokens",\n                "operation": "createAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "deleteAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppToken",\n                "loglevel": "debug"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppTokens",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "checkClusterHealthStatus",\n                "loglevel": "notice"\n            }\n        ]\n    }\n]\n')),(0,o.kt)("h2",c({},{id:"config-file-properties"}),"Config file properties:"),(0,o.kt)("p",null,"Every logger object contains the following properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"logger")," - type of the logger (Answers the question: where will the logs be sent to?). Option accepts ",(0,o.kt)("inlineCode",{parentName:"p"},"syslog"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"file"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," values.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"options")," - this property is specific to the logger type set in the ",(0,o.kt)("inlineCode",{parentName:"p"},"logger")," property. It holds settings of the chosen logger. See ",(0,o.kt)("a",c({parentName:"p"},{href:"#logger-options"}),"Logger options"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," - minimal level of severity which is to be logged. In other words, MMC will only log operations of this loglevel and higher (the ones which are more severe). Operation which have loglevels below ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," severity-wise will not be logged. Possible values for this property are all the valid syslog levels (in the order of increasing severity: ",(0,o.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"notice"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"err"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"crit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"alert"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"emerg"),"). You can also use longer names for severity levels (i. e. ",(0,o.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"informational"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"notice"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"critical"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"alert"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"emergency"),").\nNote that ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," has a higher priority than ",(0,o.kt)("inlineCode",{parentName:"p"},"filters"),". If you specified a certain threshold, the loglevels below it will not be reported at all regardless of your filters. Also note that even with ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," property being set, the empty filter array will still exclude all operations by default. So at least one ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," filter in ",(0,o.kt)("inlineCode",{parentName:"p"},"filters")," property must be specified. Read more about the filters in the ",(0,o.kt)("a",c({parentName:"p"},{href:"#using-filters"}),"respective part")," of this documentation."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")),(0,o.kt)("p",null,"If you set ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),", any operations with ",(0,o.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"info"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"notice")," levels will not be logged since they are less severe than ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),". On the other hand, ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"critical"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"alert"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"emergency")," messages will be logged."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"defaultLoglevel")," - the default loglevel assigned to all operations unless overridden for some in ",(0,o.kt)("inlineCode",{parentName:"p"},"operations")," property of this config file.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"disable")," - property which disables the logger, so that nothing is logged")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"filters")," - custom filters for filtering out operations and/or entire plugins. Contains filter entries. See ",(0,o.kt)("a",c({parentName:"p"},{href:"#using-filters"}),"Using filters section"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"operations")," - section where specific loglevel for chosen operation can be specified (for instance, you might not want all the operations to be logged with ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultLoglevel"),". You might want some to have ",(0,o.kt)("inlineCode",{parentName:"p"},"notice")," level, some others - ",(0,o.kt)("inlineCode",{parentName:"p"},"info"),", and the rest as ",(0,o.kt)("inlineCode",{parentName:"p"},"debug"),"). This property is an array of elements of the form:"))),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "source": "...",\n    "operation": "...",\n    "loglevel": "..."\n}\n')),(0,o.kt)("p",null,"where:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{}),"    * `source` - is the name of the plugin which contains the `operation` we want to log. See [List of plugin names](#list-of-plugin-names)\n    * `operation` - name of the operation to be logged\n    * `loglevel` - log level that the specified operations will have\n")),(0,o.kt)("p",null,"So basically, Audit Trail feature logs all the operations by default unless some ",(0,o.kt)("a",c({parentName:"p"},{href:"#using-filters"}),"filters")," are specified. All these operations have a loglevel specified in ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultLoglevel")," unless this level is explicitly overriden for some operations in ",(0,o.kt)("inlineCode",{parentName:"p"},"operations")," property."),(0,o.kt)("p",null,"For example, the following log file will log all the operations with ",(0,o.kt)("inlineCode",{parentName:"p"},"info")," loglevel. However, operations ",(0,o.kt)("inlineCode",{parentName:"p"},"createAppToken")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteAppToken")," from the ",(0,o.kt)("inlineCode",{parentName:"p"},"application-tokens")," plugin will have a ",(0,o.kt)("inlineCode",{parentName:"p"},"notice")," loglevel, whereas ",(0,o.kt)("inlineCode",{parentName:"p"},"getAppToken")," will be logged with ",(0,o.kt)("inlineCode",{parentName:"p"},"debug")," level:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "logger": "syslog",\n        "options": {\n            "protocol": "unix",\n            "path": "/dev/log"\n        },\n        "logThreshold": "debug",\n        "defaultLoglevel": "info",\n        "disable": true,\n        "filters": [\n            {"filterType": "include"}\n        ],\n        "operations": [\n            {\n                "source": "application-tokens",\n                "operation": "createAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "deleteAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppToken",\n                "loglevel": "debug"\n            }\n        ]\n    }\n]\n')),(0,o.kt)("p",null,"In the following example, we increase the ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," property from ",(0,o.kt)("inlineCode",{parentName:"p"},"debug")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"info"),", which means that now ",(0,o.kt)("inlineCode",{parentName:"p"},"createAppToken")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteAppTokens")," will be logged but ",(0,o.kt)("inlineCode",{parentName:"p"},"getAppToken")," will not. This is because ",(0,o.kt)("inlineCode",{parentName:"p"},"debug")," level which ",(0,o.kt)("inlineCode",{parentName:"p"},"getAppToken")," operation has is less severe than ",(0,o.kt)("inlineCode",{parentName:"p"},"info")," level set in ",(0,o.kt)("inlineCode",{parentName:"p"},"logThreshold")," property. In other words, this logger will only log operations with ",(0,o.kt)("inlineCode",{parentName:"p"},"info")," loglevel and above:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "logger": "syslog",\n        "options": {\n            "protocol": "unix",\n            "path": "/dev/log"\n        },\n        "logThreshold": "info",\n        "defaultLoglevel": "info",\n        "disable": true,\n        "filters": [\n            {"filterType": "include"}\n        ],\n        "operations": [\n            {\n                "source": "application-tokens",\n                "operation": "createAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "deleteAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppToken",\n                "loglevel": "debug"\n            }\n        ]\n    }\n]\n')),(0,o.kt)("p",null,"Also see ",(0,o.kt)("a",c({parentName:"p"},{href:"#default-config-file"}),"Default config file")," and ",(0,o.kt)("a",c({parentName:"p"},{href:"#config-file-with-syslog"}),"Config file with syslog"),". The former provides a restricted config file generated/used by MMC by default and the latter - a recommended config file which uses syslog for logging. The reason why the default file is restricted is because syslog might not be configured or might be configured differently on your system. We want to be explicit that if you want to enable something you have to specifically set it. This is also done to avoid silently flooding your system with logs."),(0,o.kt)("h3",c({},{id:"logger-types"}),"Logger types"),(0,o.kt)("p",null,"There are 3 types of loggers that can be specified through the ",(0,o.kt)("inlineCode",{parentName:"p"},"logger")," property in ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"syslog"')," - passes logs to a syslog service specified in the ",(0,o.kt)("inlineCode",{parentName:"li"},"options")," property of the ",(0,o.kt)("inlineCode",{parentName:"li"},"audit.json"),". See ",(0,o.kt)("a",c({parentName:"li"},{href:"#logger-options"}),"Logger options")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"file"')," - saves all the logs into a file as defined in ",(0,o.kt)("inlineCode",{parentName:"li"},"options")," property in ",(0,o.kt)("inlineCode",{parentName:"li"},"audit.json")," which should hold a ",(0,o.kt)("inlineCode",{parentName:"li"},"filename")," property with the path to a file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"console"')," (default) - prints all the logs into stdout. When specifying this logger type you should leave ",(0,o.kt)("inlineCode",{parentName:"li"},"options")," property empty")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'// audit.json\n[\n    {\n        "logger": "typename", // "syslog" or "file" or "console"\n        "options": {\n            ...\n        },\n        ...\n    }\n]\n')),(0,o.kt)("h3",c({},{id:"logger-options"}),"Logger options"),(0,o.kt)("p",null,"Config file contains ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," property which configures the logger defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"logger")," property."),(0,o.kt)("p",null,"There are a couple different scenarios for setting up options based on which ",(0,o.kt)("inlineCode",{parentName:"p"},"logger")," you are using. Those are described below. Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," property is passed as is as transport options to ",(0,o.kt)("a",c({parentName:"p"},{href:"https://github.com/winstonjs/winston"}),(0,o.kt)("inlineCode",{parentName:"a"},"winston")," library"),". In case of ",(0,o.kt)("inlineCode",{parentName:"p"},"syslog")," logger, the options are passed to ",(0,o.kt)("a",c({parentName:"p"},{href:"https://github.com/winstonjs/winston-syslog"}),(0,o.kt)("inlineCode",{parentName:"a"},"winston-syslog")),", so you can check the respective documentations for more information."),(0,o.kt)("p",null,"Examples of different logger configurations:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Local syslog (accessed through unix socket)"))),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "logger": "syslog",\n    "options": {\n        "protocol": "unix",\n        "path": "/dev/log"\n    },\n    ...\n}\n')),(0,o.kt)("p",null,"You can read more about syslog options on ",(0,o.kt)("a",c({parentName:"p"},{href:"https://github.com/winstonjs/winston-syslog#:~:text=File%20is%20overkill.-,Usage,-To%20use%20the"}),(0,o.kt)("inlineCode",{parentName:"a"},"winston-syslog")," github page")),(0,o.kt)("ol",c({},{start:2}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Remote syslog (accessed through udp or tcp)"))),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "logger": "syslog",\n    "options": {\n        "host": "localhost",\n        "port": 514,\n        "protocol": "udp4" // or "tcp4"\n    },\n    ...\n}\n')),(0,o.kt)("ol",c({},{start:3}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Logging to a file"))),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "logger": "file",\n    "options": {\n        "filename": "/data/test.log"\n    },\n    ...\n}\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note:")," In our docker-container setups ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," is usually a volume mapped to ",(0,o.kt)("inlineCode",{parentName:"p"},"/mosquitto/management-center/data"),". In rpm and other setups you are free to chose any path on your system."),(0,o.kt)("ol",c({},{start:4}),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Logging to console:"))),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "logger": "console",\n    "options": {},\n    ...\n}\n')),(0,o.kt)("p",null,"There is no need to set any options in case of a console logger."),(0,o.kt)("h3",c({},{id:"using-filters"}),"Using filters"),(0,o.kt)("p",null,"Filters are defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"filters")," property of ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json"),". They are used to exclude or include log entries which match certain criterias (defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"filterType"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"source"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"operationType"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"loglevel"),") and patterns (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"user-*"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"*up")," etc). In other words, filters decide which operations are logged and which are skipped."),(0,o.kt)("p",null,"Filter is an entry under ",(0,o.kt)("inlineCode",{parentName:"p"},"filters")," array property (it can sometimes be called a filter object). It has the following format:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "filterType": "exclude|include",\n    "source": "glob pattern",\n    "operation": "glob pattern",\n    "operationType": "create|read|update|delete|other",\n    "loglevel": "emerg|alert|crit|err|warning|notice|info|debug"\n}\n')),(0,o.kt)("p",null,"Filter object is applied to each event to determine whether it is to be logged. For that, all the filter criterias (properties like ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," etc) must match the respective event's parameters."),(0,o.kt)("p",null,"The filters are evaluated in order and the final result applies. This allows to arrange very specific filters to pick out or exclude certain events. It is recommended to order the filters from most general to most specific."),(0,o.kt)("p",null,"All the filters properties are optional except the ",(0,o.kt)("inlineCode",{parentName:"p"},"filterType")," which must be set to either ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"exclude"),". If only ",(0,o.kt)("inlineCode",{parentName:"p"},"filterType")," is specified the filter becomes a global filter and is then applied to every event."),(0,o.kt)("p",null,"If the evaluation result of a set of filter is ",(0,o.kt)("inlineCode",{parentName:"p"},"exlude")," then the event will not be logged. On the other hand, if the result is ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," - the event will be reported."),(0,o.kt)("p",null,"The default behaviour is exclude reporting of events, so at least one ",(0,o.kt)("inlineCode",{parentName:"p"},"include")," filter must be provided. In some cases you might find yourself defining a global include filter first, after which you specify more fine-grained exclude filter to filter out what you don't need."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," property is used to match against the events origin (the module or plugin where the event is being reported from). This property will equal ",(0,o.kt)("inlineCode",{parentName:"p"},"core")," for events coming from the core MMC functionality (like ",(0,o.kt)("inlineCode",{parentName:"p"},"startup")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"shutdown")," events), or it will equal the name of a plugin, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"user-management")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"app-tokens"),". This property supports glob patterns, so if you, for example, want to match all sources that end with a ",(0,o.kt)("inlineCode",{parentName:"p"},"-management")," suffix, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"*-management")," value for this property. "),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," property is matched against the name of the operation (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"startup"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToBroker"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"getLeaderOfCluster")," etc). This property also supports glob patterns."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"operationType")," property will be matched against the CRUD type of the operation. This must be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"create"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"read"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"update"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"delete"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"other"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"loglevel")," property is matching the loglevels of the operations. If you have an include filter with a certain ",(0,o.kt)("inlineCode",{parentName:"p"},"loglevel")," property defined it means that the operations that match your filter and have the specified loglevel or higher will be included and reported. If you have an exclude filter with a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"loglevel")," then the operations that have the specified loglevel or lower will be excluded and operations with a higher loglevel - reported."),(0,o.kt)("p",null,"Below you can find some filter object examples."),(0,o.kt)("p",null,"The following filter:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include" }\n{ "filterType": "exclude", "source": "plugin*", "operationType": "read", "loglevel": "warning" }\n')),(0,o.kt)("p",null,"Excludes (doesn't log) all read operation whose ",(0,o.kt)("inlineCode",{parentName:"p"},"featureId")," starts with ",(0,o.kt)("inlineCode",{parentName:"p"},'"plugin"')," and whose loglevel is lower or equal to ",(0,o.kt)("inlineCode",{parentName:"p"},"warning"),'.\nNote that we had to specify a global "empty" include filter to change the default behaviour of excluding everything, and only after that we have specified an exclude filter. '),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"source")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," fields are using glob patterns for matching")),(0,o.kt)("p",null,"Filter to include all operations with loglevel ",(0,o.kt)("inlineCode",{parentName:"p"},"info")," and higher:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include", "loglevel": "info" }\n')),(0,o.kt)("p",null,"The filter below includes all the operations from ",(0,o.kt)("inlineCode",{parentName:"p"},"pluginA")," into the logs. Note that if you don't specify any other filters, then all the other operations will be excluded, since excluding all is the default behaviour."),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include", "source": "pluginA" }\n')),(0,o.kt)("p",null,"An example of excluding only a ",(0,o.kt)("inlineCode",{parentName:"p"},"startup")," operation:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include" },\n{ "filterType": "exclude", "operation": "startup" }\n')),(0,o.kt)("p",null,"Exlude all the operations ",(0,o.kt)("inlineCode",{parentName:"p"},"core")," operations except ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToBroker")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"disconnectFromBroker"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include" },\n{ "filterType": "exclude", "source": "core" },\n{ "filterType": "include", "operation": "connectToBroker" },\n{ "filterType": "include", "operation": "disconnectFromBroker" },\n')),(0,o.kt)("p",null,"Include all operations except the ones originating from ",(0,o.kt)("inlineCode",{parentName:"p"},"pluginA")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"pluginB")),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{ "filterType": "include" },\n{ "filterType": "exclude", "source": "pluginA" },\n{ "filterType": "exclude", "source": "pluginB" },\n')),(0,o.kt)("h3",c({},{id:"config-file-location"}),"Config file location"),(0,o.kt)("admonition",c({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"You don't usually have to decide where to store ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," config file. In most of the MMC installations it's stored in the default config directory with a default name (",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json"),"), so you can just create/edit it there. However, for completeness we also explore different options that define the location of the file in this section.")),(0,o.kt)("p",null,"The config file of ",(0,o.kt)("inlineCode",{parentName:"p"},"audit-trail")," plugin called ",(0,o.kt)("inlineCode",{parentName:"p"},"audit.json")," is by default stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins/audit-trail")," directory, but you can change the path and the file name by specifying the path in ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," environment variable."),(0,o.kt)("p",null,"Another option is to specify a parent directory for this file with ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_DATA_DIRECTORY_PATH"),". However, this environmental variable has a lower priority than ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL"),".\nIn case you specify ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_DATA_DIRECTORY_PATH")," but don't create a config file yourself, it will be created for you with ",(0,o.kt)("a",c({parentName:"p"},{href:"#default-config-file"}),"default options"),", which might not be what you desire. You can either create this file first, or let it be created by MMC on first startup, change it, and restart the app."),(0,o.kt)("h2",c({},{id:"configuring-syslog-on-your-system"}),"Configuring syslog on your system"),(0,o.kt)("p",null,"Audit Trail was mainly designed to save the logs to the syslog service of your local or remote machine. This behavior can be setup by setting ",(0,o.kt)("inlineCode",{parentName:"p"},'"logger": "syslog"')," property in the ",(0,o.kt)("a",c({parentName:"p"},{href:"#logger-types"}),"config file"),"."),(0,o.kt)("p",null,"Syslog service (sometimes called syslog for short) is a daemon program which stores and manages logs sent to it by different applications which follows ",(0,o.kt)("a",c({parentName:"p"},{href:"https://datatracker.ietf.org/doc/html/rfc5424"}),"Syslog standard"),"."),(0,o.kt)("p",null,"Syslog works under Unix systems, so this section is only relevant to Unix OS and in particular: Linux (MacOS is not covered here but it's configuration is similar)."),(0,o.kt)("p",null,"For Red Hat based Linux systems (such as RHEL, CentOS, Fedora), ",(0,o.kt)("inlineCode",{parentName:"p"},"rsyslog")," syslog daemon is commonly used. For Debian based systems (such as Debian, Ubuntu), ",(0,o.kt)("inlineCode",{parentName:"p"},"rsyslog")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"syslog-ng")," are widely in use."),(0,o.kt)("p",null,"In order to inspect syslogs in the most simple case on your local machine, you need to do the following:"),(0,o.kt)("h4",c({},{id:"on-redhat-based-linux"}),"On Redhat-based Linux"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-sh"}),"tail -f /var/log/messages\n")),(0,o.kt)("h4",c({},{id:"on-debian-based-linux"}),"On Debian-based Linux"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-sh"}),"tail -f /var/log/syslog\n")),(0,o.kt)("p",null,"Configuration of syslog service usually has reasonable defaults, but in case you experience some issues, you might want to take a look at the respective configuration files."),(0,o.kt)("h4",c({},{id:"rsyslog-configuration"}),"Rsyslog Configuration:"),(0,o.kt)("p",null,"For both Redhat and Debian-based systems, the main configuration file for rsyslog is located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/rsyslog.conf"),". This file is used to specify the rules for logging. After modifying this file run ",(0,o.kt)("inlineCode",{parentName:"p"},"systemctl restart rsyslog")," in order to restart the syslog daemon to apply the changes for Redhat-based systems, and ",(0,o.kt)("inlineCode",{parentName:"p"},"service rsyslog restart")," for Debian-based ones."),(0,o.kt)("h4",c({},{id:"open-udp-port-for-rsyslog"}),"Open UDP port for rsyslog:"),(0,o.kt)("p",null,"In case you want to transmit the logs via UDP you will also need to ensure that your syslog service on the receiving device is configured to listen on the network interface and not just on the local system. You can do so by editing the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/rsyslog.conf")," file and uncommenting or adding these lines:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{}),'module(load="imudp")\ninput(type="imudp" port="514")\n')),(0,o.kt)("p",null,"After making these changes, you will need to restart the ",(0,o.kt)("inlineCode",{parentName:"p"},"rsyslog")," service:"),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{}),"systemctl restart rsyslog\n")),(0,o.kt)("h4",c({},{id:"syslog-ng-configuration"}),"Syslog-ng Configuration:"),(0,o.kt)("p",null,"For Debian based systems using ",(0,o.kt)("inlineCode",{parentName:"p"},"syslog-ng"),", the main configuration file is ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/syslog-ng/syslog-ng.conf"),". After modifying this file run ",(0,o.kt)("inlineCode",{parentName:"p"},"service syslog-ng restart")," in order to restart the syslog daemon and apply the changes."),(0,o.kt)("h2",c({},{id:"limitations"}),"Limitations"),(0,o.kt)("p",null,"In case of using syslog with ",(0,o.kt)("inlineCode",{parentName:"p"},"udp4"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"udp6"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"unix"),' protocols, note that these are datagram-based and adhere to "fire and forget" principle. This means that you will not get any connection errors being output in case you haven\'t properly configured ',(0,o.kt)("inlineCode",{parentName:"p"},"audit-trail")," plugin or your syslog. The logging will simply be failing silently because UDP protocol has no concept of setting up a proper connection and checking if it works/is alive."),(0,o.kt)("p",null,"Syslog works under Unix systems. Therefore, this feature is mainly targeted at those operating systems, not Windows. However, logging under Windows is also possible using ",(0,o.kt)("inlineCode",{parentName:"p"},"file")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," ",(0,o.kt)("a",c({parentName:"p"},{href:"#logger-types"}),"loggers"),"."),(0,o.kt)("h2",c({},{id:"troubleshooting"}),"Troubleshooting"),(0,o.kt)("p",null,"If you are using remote syslog with UDP protocol and it doesn't work, try switching to TCP for debugging purposes because the latter shows connection errors. After the problem has been identified and solved, you can switch back."),(0,o.kt)("h2",c({},{id:"list-of-sources-plugin-names"}),"List of sources (plugin names)"),(0,o.kt)("p",null,"Available plugin names are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"audit-trail")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"user-management")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"saml-sso")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"https")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"application-tokens")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"monitoring-rest-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cluster-management")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tls")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"user-profile-edit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connections-rest-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"custom-themes")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"multiple-connections")," (Contains no operations)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system-status-rest-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"topictree-rest-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dynamic-security-rest-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cert-management"))),(0,o.kt)("p",null,"Additionally there is a ",(0,o.kt)("inlineCode",{parentName:"p"},"core")," source which defines the operations of the core MMC like connecting-disconnecting the broker and so on."),(0,o.kt)("p",null,"Not all the plugins contain operations which can be logged."),(0,o.kt)("h2",c({},{id:"default-config-file"}),"Default config file"),(0,o.kt)("p",null,"The default config file defines a global include filter and logs everything into the console."),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "logger": "console",\n        "options": {},\n        "logThreshold": "info",\n        "defaultLoglevel": "info",\n        "disable": false,\n        "filters": [\n            {\n                "filterType": "include"\n            }\n        ],\n        "operations": [\n            {\n                "source": "application-tokens",\n                "operation": "createAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "deleteAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppToken",\n                "loglevel": "debug"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppTokens",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "addCert",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cert-management",\n                "operation": "deleteCert",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cert-management",\n                "operation": "deployCert",\n                "loglevel": "info"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getCerts",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getCertInfo",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getListeners",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "updateCert",\n                "loglevel": "info"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "checkClusterHealthStatus",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "createCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "deleteAllClusters",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "deleteCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getCluster",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getClusters",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getClusterStatuses",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "joinCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "leaveCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "modifyCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connect-disconnect",\n                "operation": "connectServerToBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "connect-disconnect",\n                "operation": "disconnectServerFromBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "createConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "deleteConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "getConnection",\n                "loglevel": "debug"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "getConnections",\n                "loglevel": "debug"\n            },\n            {\n                "source": "dynamic-security-rest-api",\n                "operation": "executeCommand",\n                "loglevel": "debug"\n            },\n            {\n                "source": "dynamic-security-rest-api",\n                "operation": "getBrokerInformation",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "connectToBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "createConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "deleteConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "disconnectFromBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "getBrokerConnections",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "getConfiguration",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "getPlugins",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "loadPlugin",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "modifyConnection",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "shutdown",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "startup",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "unloadPlugin",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "updateSettings",\n                "loglevel": "info"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getBroker",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getBrokers",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getCluster",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getClusters",\n                "loglevel": "debug"\n            },\n            {\n                "source": "system-status-rest-api",\n                "operation": "getSystemStatus",\n                "loglevel": "debug"\n            },\n            {\n                "source": "topictree-rest-api",\n                "operation": "deleteTopicTree",\n                "loglevel": "notice"\n            },\n            {\n                "source": "topictree-rest-api",\n                "operation": "getTopicTree",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "login",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "logout",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "createGroup",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "createUser",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "deleteGroup",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "deleteUser",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "getGroup",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getGroups",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getRoles",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUser",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUserGroups",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUsers",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateGroup",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateProfile",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateUser",\n                "loglevel": "info"\n            }\n        ]\n    }\n]\n')),(0,o.kt)("h2",c({},{id:"config-file-with-syslog"}),"Config file with syslog"),(0,o.kt)("p",null,"The below config file is logging everything into syslog. Note that you might want to tweak ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",c({parentName:"pre"},{className:"language-json"}),'[\n    {\n        "logger": "syslog",\n        "options": {\n            "protocol": "unix",\n            "path": "/dev/log"\n        },\n        "disable": false,\n        "logThreshold": "debug",\n        "defaultLoglevel": "info",\n        "filters": [\n            {\n                "filterType": "include"\n            }\n        ],\n        "operations": [\n            {\n                "source": "application-tokens",\n                "operation": "createAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "deleteAppToken",\n                "loglevel": "notice"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppToken",\n                "loglevel": "debug"\n            },\n            {\n                "source": "application-tokens",\n                "operation": "getAppTokens",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "addCert",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cert-management",\n                "operation": "deleteCert",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cert-management",\n                "operation": "deployCert",\n                "loglevel": "info"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getCerts",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getCertInfo",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "getListeners",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cert-management",\n                "operation": "updateCert",\n                "loglevel": "info"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "checkClusterHealthStatus",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "createCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "deleteAllClusters",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "deleteCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getCluster",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getClusters",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "getClusterStatuses",\n                "loglevel": "debug"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "joinCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "leaveCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "cluster-management",\n                "operation": "modifyCluster",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connect-disconnect",\n                "operation": "connectServerToBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "connect-disconnect",\n                "operation": "disconnectServerFromBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "createConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "deleteConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "getConnection",\n                "loglevel": "debug"\n            },\n            {\n                "source": "connections-rest-api",\n                "operation": "getConnections",\n                "loglevel": "debug"\n            },\n            {\n                "source": "dynamic-security-rest-api",\n                "operation": "executeCommand",\n                "loglevel": "debug"\n            },\n            {\n                "source": "dynamic-security-rest-api",\n                "operation": "getBrokerInformation",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "connectToBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "createConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "deleteConnection",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "disconnectFromBroker",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "getBrokerConnections",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "getConfiguration",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "getPlugins",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "loadPlugin",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "modifyConnection",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "shutdown",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "startup",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "unloadPlugin",\n                "loglevel": "notice"\n            },\n            {\n                "source": "core",\n                "operation": "updateSettings",\n                "loglevel": "info"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getBroker",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getBrokers",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getCluster",\n                "loglevel": "debug"\n            },\n            {\n                "source": "monitoring-rest-api",\n                "operation": "getClusters",\n                "loglevel": "debug"\n            },\n            {\n                "source": "system-status-rest-api",\n                "operation": "getSystemStatus",\n                "loglevel": "debug"\n            },\n            {\n                "source": "topictree-rest-api",\n                "operation": "deleteTopicTree",\n                "loglevel": "notice"\n            },\n            {\n                "source": "topictree-rest-api",\n                "operation": "getTopicTree",\n                "loglevel": "debug"\n            },\n            {\n                "source": "core",\n                "operation": "login",\n                "loglevel": "info"\n            },\n            {\n                "source": "core",\n                "operation": "logout",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "createGroup",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "createUser",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "deleteGroup",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "deleteUser",\n                "loglevel": "notice"\n            },\n            {\n                "source": "user-management",\n                "operation": "getGroup",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getGroups",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getRoles",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUser",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUserGroups",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "getUsers",\n                "loglevel": "debug"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateGroup",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateProfile",\n                "loglevel": "info"\n            },\n            {\n                "source": "user-management",\n                "operation": "updateUser",\n                "loglevel": "info"\n            }\n        ]\n    }\n]\n')))}N.isMDXComponent=!0},49044:(e,n,t)=>{t.d(n,{Z:()=>r});var o=t(67294),i=t(39082),a=t(62659),l=t(83166);function r({inline:e}){return o.createElement(i.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:a.Z[500]},size:"small",icon:o.createElement(l.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},78901:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(67294),i=t(39082),a=t(13328);function l({version:e}){return e?o.createElement(i.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:o.createElement(a.Z,{size:"small"}),label:`${e}`}):o.createElement(o.Fragment,null)}}}]);