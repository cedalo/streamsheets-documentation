"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[82553],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),u=a,f=d["".concat(c,".").concat(u)]||d[u]||h[u]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23796:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>y,frontMatter:()=>d,metadata:()=>f,toc:()=>T});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,h=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(i)for(var n of i(t))l.call(t,n)&&p(e,n,t[n]);return e};const d={id:"httpreq",title:"HTTP Requests",sidebar_label:"HTTP Requests"},u=void 0,f={unversionedId:"guides/sheets/httpreq",id:"version-3.0/guides/sheets/httpreq",title:"HTTP Requests",description:'HTTP Requests start an exchange of information to an HTTP server. There are different requests called "methods," and every HTTP server requires other headers, payload, or authorization types to allow a valid request. This is usually documented in the documentation of the HTTP server you try to reach.',source:"@site/streamsheets_versioned_docs/version-3.0/guides/sheets/httpreq.md",sourceDirName:"guides/sheets",slug:"/guides/sheets/httpreq",permalink:"/streamsheets/guides/sheets/httpreq",draft:!1,tags:[],version:"3.0",frontMatter:{id:"httpreq",title:"HTTP Requests",sidebar_label:"HTTP Requests"},sidebar:"someSidebar",previous:{title:"Historical data",permalink:"/streamsheets/guides/sheets/history"},next:{title:"IF Dependencies",permalink:"/streamsheets/guides/sheets/if"}},m={},T=[{value:"HTTP Request",id:"http-request",level:2}],g={toc:T};function y(e){var t,a=e,{components:p}=a,d=((e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&l.call(e,r)&&(n[r]=e[r]);return n})(a,["components"]);return(0,r.kt)("wrapper",(t=h(h({},g),d),o(t,s({components:p,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,'HTTP Requests start an exchange of information to an HTTP server. There are different requests called "methods," and every HTTP server requires other headers, payload, or authorization types to allow a valid request. This is usually documented in the documentation of the HTTP server you try to reach.\nThe most generic approach to connect to any HTTP server is using the function ',(0,r.kt)("a",h({parentName:"p"},{href:"/streamsheets/functions/http/httprequest"}),"HTTP.REQUEST()"),".\nThere are other functions like ",(0,r.kt)("a",h({parentName:"p"},{href:"/streamsheets/functions/http/httpget"}),"HTTP.GET()")," or integration functions serve direct access to APIs (Openweather, Binance, etc.)."),(0,r.kt)("h2",h({},{id:"http-request"}),"HTTP Request"),(0,r.kt)("p",null,"This tutorial covers two different kind of HTTP/REST Calls, one is\n",(0,r.kt)("strong",{parentName:"p"},"POST")," and the other is ",(0,r.kt)("strong",{parentName:"p"},"GET"),'.  The differences are that with a "POST" information is transmitted from the\nHTTP Client to a server and a "GET" transmits information to the HTTP\nClient from the server. '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},'1. Method "Post":'),' As an example, for an HTTP Request with the method.\n"POST," we will create an alert service for Slack. Slack is a messenger\nwhich offers the possibility to add self-made applications. We will use this option to add an Alert Application to a Slack channel, posting\nstatus updates.'),(0,r.kt)("p",null,"To begin, create such an ",(0,r.kt)("a",h({parentName:"p"},{href:"https://api.slack.com/apps/"}),"App in Slack")," and\nadd an Incoming ",(0,r.kt)("a",h({parentName:"p"},{href:"https://api.slack.com/incoming-webhooks/"}),"Webhook"),'.\nThis generates the HTTP. Request the URL we will be posting information.\nChoose a Channel on Slack to add your Application to. This is where we\nwill post the information to. Now we can start building an App in\nStreamsheets. Create a new App and create a JSON Range with the key\nValue is "text," and the Value is any message you would like to\nsend. Create an HTTP Request function and select "POST" as the method. Add the created URL and select the JSON Range as\nthe body. Choose a Target (e.g., a cell range) for the server\'s response message. Now with every new Step, the App will send your message\nto Slack \ud83d\ude0a'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"slackwebhook",src:n(82106).Z,width:"1384",height:"966"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"slackwebhook",src:n(45570).Z,width:"891",height:"288"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},'2. Method "GET":'),' The "GET" method is very similar to the "POST."\nmethod, but in this case, we do not need to define any message because\nwe will be consuming messages. A good example is the "API of Ice and\nFire" ',(0,r.kt)("a",h({parentName:"p"},{href:"https://anapioficeandfire.com/"}),"https://anapioficeandfire.com/"),". It is an HTTP Request based\nonline wiki for Game of Thrones-related Information. Depending on the\nURL, different Information can be accessed and displayed. Let's choose\nthe following URL: ",(0,r.kt)("a",h({parentName:"p"},{href:"https://anapioficeandfire.com/api/characters/583"}),"https://anapioficeandfire.com/api/characters/583"),'. It\nshows all Information regarding Jon Snow in a JSON-Object. So lets\nagain create a new App. Add an HTTP.Request Function to a cell. Enter the URL, select "GET" as the method and choose the\nTarget, where it should display the Information (e.g.\n',(0,r.kt)("a",h({parentName:"p"},{href:"../../functions/streamsheet/inbox"}),"INBOX"),'). Confirm your input by clicking "OK." After starting\nthe App, the requested Information will now appear in the Target Range.'),(0,r.kt)("p",null,"Your function will look like this: ",(0,r.kt)("inlineCode",{parentName:"p"},'=HTTP.REQUEST("https://anapioficeandfire.com/api/characters/583","GET",,,,INBOX())')," or ",(0,r.kt)("inlineCode",{parentName:"p"},'=HTTP.GET("https://anapioficeandfire.com/api/characters/583")')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"httpreq",src:n(46552).Z,width:"1390",height:"606"})))}y.isMDXComponent=!0},46552:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/HTTPReq-b718125a1e746c175e788741989248fd.png"},45570:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/SlackApp-0fa4d1b535c25881c26811dac3becde4.png"},82106:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/SlackWebhook-2cc95d9e902f4c066a542bc4ce8e2c9f.png"}}]);