"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[22821],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=s(r),m=a,d=f["".concat(p,".").concat(m)]||f[m]||c[m]||l;return r?n.createElement(d,o(o({ref:t},u),{},{components:r})):n.createElement(d,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},55384:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>y,frontMatter:()=>f,metadata:()=>d,toc:()=>k});var n=r(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&u(e,r,t[r]);if(i)for(var r of i(t))s.call(t,r)&&u(e,r,t[r]);return e};const f={id:"filewrite",title:"FILE.WRITE",sidebar_label:"FILE.WRITE"},m=void 0,d={unversionedId:"functionss/streams/filewrite",id:"version-2.5/functionss/streams/filewrite",title:"FILE.WRITE",description:'Write a given range as comma separated values to a file. You can use the Function Wizard for this function. The mounted root path is set in the .YML file. E.g.rootfolder:/filefeeder. Add /filefeeder to the "Root Directory" field in the Connector to connect it to the root folder.',source:"@site/streamsheets_versioned_docs/version-2.5/functionss/streams/filewrite.md",sourceDirName:"functionss/streams",slug:"/functionss/streams/filewrite",permalink:"/streamsheets/2.5/functionss/streams/filewrite",draft:!1,tags:[],version:"2.5",frontMatter:{id:"filewrite",title:"FILE.WRITE",sidebar_label:"FILE.WRITE"}},g={},k=[],h={toc:k};function y(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&s.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=c(c({},h),u),l(t,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Write a given range as comma separated values to a file. You can use the Function Wizard for this function. The mounted root path is set in the .YML file. E.g.: ",(0,n.kt)("inlineCode",{parentName:"p"},"C:rootfolder:/filefeeder"),'. Add /filefeeder to the "Root Directory" field in the Connector to connect it to the root folder.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=FILE.WRITE(Producer, Range, Filename, ","[","Directory","]",", ","[","Mode","]",", ","[","Separator","]",")"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Producer"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"File Producer to use for writing the file.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Range"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The range to write to a file. Can also be a single value.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Filename"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Name of the file that is written.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Directory (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The directory of the file that is written. Defaults to the root directory of the File Producer.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Mode (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),'Has to be "create" or "append". Defaults to "append". "create" replaces an existing file with the same name, "append" appends instead.')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Separator (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),'Separator to use when writing range to file. Defaults to ",".')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return")),(0,n.kt)("p",null,"TRUE, if no ",(0,n.kt)("a",c({parentName:"p"},{href:"../../other#error-codes"}),"error"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Formula"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"${formula}"))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"TRUE"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Write the text \u201cMessage\u201d to the file located at \u201c{rootDirectory}/directory/file.csv\u201d using the \u201cFile Producer\u201d")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"${formula}"))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"TRUE"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Writes the content of the range A2:C3 to the field located at \u201c{rootDirectory}/file.csv\u201d using \u201c;\u201d as separator and replacing an already existing file with the same name. The resulting content of the file is:  ",(0,n.kt)("br",null),(0,n.kt)("inlineCode",{parentName:"td"},"Example1;Example2;Example3")," ",(0,n.kt)("br",null)," ",(0,n.kt)("inlineCode",{parentName:"td"},"Example4;Example5;Example6 "))))))}y.isMDXComponent=!0}}]);