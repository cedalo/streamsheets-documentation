"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[59203],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),f=a,d=c["".concat(i,".").concat(f)]||c[f]||m[f]||l;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},44360:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>O});var n=r(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&p(e,r,t[r]);if(s)for(var r of s(t))u.call(t,r)&&p(e,r,t[r]);return e};const c={id:"outboxdata",title:"OUTBOXDATA",sidebar_label:"OUTBOXDATA"},f=void 0,d={unversionedId:"functions/streamsheet/outboxdata",id:"version-2.5/functions/streamsheet/outboxdata",title:"OUTBOXDATA",description:"Creates a JSON key from the given values or range to reference data from within a message. This function is normally used in the WRITE function. OUTBOXDATA references values from the Data section of a message.",source:"@site/streamsheets_versioned_docs/version-2.5/functions/streamsheet/outboxdata.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/outboxdata",permalink:"/streamsheets/2.5/functions/streamsheet/outboxdata",draft:!1,tags:[],version:"2.5",frontMatter:{id:"outboxdata",title:"OUTBOXDATA",sidebar_label:"OUTBOXDATA"},sidebar:"version-2.5/someSidebar",previous:{title:"OUTBOX",permalink:"/streamsheets/2.5/functions/streamsheet/outbox"},next:{title:"OUTBOX.GETIDS",permalink:"/streamsheets/2.5/functions/streamsheet/outboxgetids"}},g={},O=[],b={toc:O};function h(e){var t,a=e,{components:p}=a,c=((e,t)=>{var r={};for(var n in e)i.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&s)for(var n of s(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(a,["components"]);return(0,n.kt)("wrapper",(t=m(m({},b),c),l(t,o({components:p,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Creates a JSON key from the given values or range to reference data from within a message. This function is normally used in the WRITE function. OUTBOXDATA references values from the Data section of a message."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=OUTBOXDATA(Message, ValuesOrRange)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Message"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Message to reference data from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"ValuesOrRange"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"A list of values or a range of cells describing the path to the element path within a JSON structure.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return")),(0,n.kt)("p",null,"A string key to provide a path within a message."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Formula"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"=OUTBOXDATA(\u201cMessage, \u201cNewItem\u201d)"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"[Message][Newitem]"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Returns an identifier that can be used in other Streamsheet functions like WRITE.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"=OUTBOXDATA(\u201cMessage\u201d, B1:B2)"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"[Message][Customer]","[Name]"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"The WRITE function returns the last part of the JSON Path. The value in C7 will be written into the Message at the given JSON Path.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"=WRITE(OUTBOXDATA(\u201cMessage\u201d,",(0,n.kt)("br",null),"\u201dOutput\u201d,-1),JSON(J22:K24),)"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Pro tip: If you want to create an array in the Outbox, use -1 as the last OUTBOXDATA() parameter. This way the array will automatically increment starting from 0."),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("br",null)," ",(0,n.kt)("img",{src:r(45173).Z,width:"80%"}))))))}h.isMDXComponent=!0},45173:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/increment-5fea2d4e3172ebb2da8f9f9f27ed548e.png"}}]);