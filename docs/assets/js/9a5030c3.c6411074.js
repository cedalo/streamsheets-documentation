"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[57421],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>d});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),u=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=u(a),d=r,g=s["".concat(p,".").concat(d)]||s[d]||c[d]||l;return a?n.createElement(g,i(i({ref:e},m),{},{components:a})):n.createElement(g,i({ref:e},m))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},74192:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>k,contentTitle:()=>d,default:()=>b,frontMatter:()=>s,metadata:()=>g,toc:()=>f});var n=a(3905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(t,e,a)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,c=(t,e)=>{for(var a in e||(e={}))p.call(e,a)&&m(t,a,e[a]);if(o)for(var a of o(e))u.call(e,a)&&m(t,a,e[a]);return t};const s={id:"averageif",title:"AVERAGEIF",hide_title:!0},d=void 0,g={unversionedId:"functions/statistical/averageif",id:"version-3.0/functions/statistical/averageif",title:"AVERAGEIF",description:"AVERAGEIF",source:"@site/streamsheets_versioned_docs/version-3.0/functions/statistical/averageif.md",sourceDirName:"functions/statistical",slug:"/functions/statistical/averageif",permalink:"/streamsheets/3.0/functions/statistical/averageif",draft:!1,tags:[],version:"3.0",frontMatter:{id:"averageif",title:"AVERAGEIF",hide_title:!0},sidebar:"someSidebar",previous:{title:"AVERAGE",permalink:"/streamsheets/3.0/functions/statistical/average"},next:{title:"AVERAGEIFS",permalink:"/streamsheets/3.0/functions/statistical/averageifs"}},k={},f=[],N={toc:f};function b(t){var e,a=t,{components:r}=a,m=((t,e)=>{var a={};for(var n in t)p.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&u.call(t,n)&&(a[n]=t[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(e=c(c({},N),m),l(e,i({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("h1",null,"AVERAGEIF"),(0,n.kt)("p",null,"Returns the average of all cell values in a cell-range which meet a given criterion. To specify multiple criteria please use AVERAGEIFS."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=AVERAGEIF(DataRange, Criterion, ","[","AverageRange","]",")"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"DataRange"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Range"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Cell-range to calculate average for.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Criterion"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"String"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The criterion each cell has to fulfill.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"AverageRange (optional)"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Range"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"If given, these cells are used to calculate average. If ommitted DataRange is used.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Number"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"The average over all cell values which meet criterion.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null})),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"A"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"B"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"1"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"100000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"200")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"200000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"400")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"300000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"400")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"4"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"North"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"600")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"5"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"East"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"800")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"6"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"South"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"1000")))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Formula"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,'=AVERAGEIF(A1:A3, "',"<",'250000")'))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"150000"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Only cells A1 and A2 match given criterion")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,'=AVERAGEIF(A1:A6, "=*th", B1:B6)'))),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"800"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),'Take cells from column A which end with "th" and average corresponding values from column B')))))}b.isMDXComponent=!0}}]);