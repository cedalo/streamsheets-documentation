"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[20897],{83166:(e,t,n)=>{var a=n(64836);t.Z=void 0;var i=a(n(64938)),l=n(85893),s=(0,i.default)((0,l.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=s},8659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>h,default:()=>N,frontMatter:()=>c,metadata:()=>k,toc:()=>b});var a=n(3905),i=n(49044),l=Object.defineProperty,s=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&d(e,n,t[n]);if(o)for(var n of o(t))p.call(t,n)&&d(e,n,t[n]);return e};const c={id:"mosquitto-streams",title:"Streams",sidebar_label:"Streams"},h=void 0,k={unversionedId:"broker/Mosquitto Manual/mosquitto-streams",id:"version-2.7/broker/Mosquitto Manual/mosquitto-streams",title:"Streams",description:"The Cedalo Stream Processing (CSP) plugin allows the creation of topic streams in the",source:"@site/mosquitto_versioned_docs/version-2.7/broker/Mosquitto Manual/streams.md",sourceDirName:"broker/Mosquitto Manual",slug:"/broker/Mosquitto Manual/mosquitto-streams",permalink:"/mosquitto/broker/Mosquitto Manual/mosquitto-streams",draft:!1,tags:[],version:"2.7",frontMatter:{id:"mosquitto-streams",title:"Streams",sidebar_label:"Streams"},sidebar:"someSidebar",previous:{title:"Sparkplug Awareness",permalink:"/mosquitto/broker/Mosquitto Manual/mosquitto-sparkplug-aware"},next:{title:"High Availability",permalink:"/mosquitto/broker/mosquitto-high-availability"}},g={},b=[{value:"Quick start",id:"quick-start",level:2},{value:"Stream processing",id:"stream-processing",level:2},{value:"API description",id:"api-description",level:2},{value:"Modifying the payload with select statements",id:"modifying-the-payload-with-select-statements",level:3},{value:"Basic payload manipulation",id:"basic-payload-manipulation",level:4},{value:"Select Aliases",id:"select-aliases",level:4},{value:"Aggregate functions",id:"aggregate-functions",level:4},{value:"Choosing messages are used with where statements",id:"choosing-messages-are-used-with-where-statements",level:3},{value:"Stream persistence and replay",id:"stream-persistence-and-replay",level:2},{value:"Replaying",id:"replaying",level:3},{value:"Message count",id:"message-count",level:3},{value:"Clearing messages",id:"clearing-messages",level:3},{value:"Time to Live (TTL)",id:"time-to-live-ttl",level:3},{value:"clearStreamMessages",id:"clearstreammessages",level:3},{value:"createStream and modifyStream",id:"createstream-and-modifystream",level:3},{value:"deleteStream",id:"deletestream",level:3},{value:"disableStream",id:"disablestream",level:3},{value:"enableStream",id:"enablestream",level:3},{value:"getLicense",id:"getlicense",level:3},{value:"getStream",id:"getstream",level:3},{value:"getStreamMessageCount",id:"getstreammessagecount",level:3},{value:"listStreams",id:"liststreams",level:3},{value:"replayStream",id:"replaystream",level:3},{value:"stopStreamReplay",id:"stopstreamreplay",level:3}],f={toc:b};function N(e){var t,n=e,{components:l}=n,d=((e,t)=>{var n={};for(var a in e)m.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=u(u({},f),d),s(t,r({components:l,mdxType:"MDXLayout"}))),(0,a.kt)(i.Z,{mdxType:"PremiumFeature"}),(0,a.kt)("h1",u({},{id:"cedalo-stream-processing-plugin-for-eclipse-mosquitto"}),"Cedalo Stream Processing plugin for Eclipse Mosquitto"),(0,a.kt)("p",null,"The Cedalo Stream Processing (CSP) plugin allows the creation of topic streams in the\nMosquitto broker. A topic stream receives all messages on a specified topic\nand can then perform the following tasks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Republish messages on a different topic, with optional QoS and retain control"),(0,a.kt)("li",{parentName:"ul"},"Persist messages to disk, with the ability to replay messages in the future"),(0,a.kt)("li",{parentName:"ul"},"Process JSON payload to extract particular data values prior to republishing"),(0,a.kt)("li",{parentName:"ul"},"Apply aggregation functions to data prior to republishing/persisting"),(0,a.kt)("li",{parentName:"ul"},"Select which messages are processed/persisted based on data values in the payload")),(0,a.kt)("p",null,"Controlling the plugin is carried out with an MQTT topic based API. The\nManagement Center for Mosquitto web tool provides a convenient front end to\naccess the API, the mosquitto_ctrl tool provides command line access to the\nAPI, or custom tools can be written to control it."),(0,a.kt)("p",null,"The streams plugin can be controlled via the ",(0,a.kt)("a",u({parentName:"p"},{href:"/mosquitto/management-center/overview/configuration/mc-streams"}),"Mosquitto Management Center")),(0,a.kt)("h2",u({},{id:"quick-start"}),"Quick start"),(0,a.kt)("p",null,"To activate the plugin, make sure your configuration file at ",(0,a.kt)("inlineCode",{parentName:"p"},"/mosquitto/config/mosquitto.conf")," is using the following lines:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),"plugin /usr/lib/cedalo_stream_processing.so\nplugin_opt_data_dir /mosquitto/data/csp\n")),(0,a.kt)("p",null,"After the start of Mosquitto the logs should show your license information:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"CSP: Cedalo Streaming Plugin initializing.\nCSP: License serial: decc1940-a806-11eb-ac1e-9d31c1d948ef\nCSP: License issued by: Cedalo AG\nCSP: License issued to: ",(0,a.kt)("a",u({parentName:"p"},{href:"mailto:info@cedalo.com"}),"info@cedalo.com"),"\nCSP: License comment: This is a demo license.\nCSP: Licensed stream count: 5 AVAILABLE until 2022-04-28T10:48:22\nCSP: Processing AVAILABLE until 2022-04-28T10:48:22\nCSP: Persistence AVAILABLE until 2022-04-28T10:48:22")),(0,a.kt)("admonition",u({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"Changing the configuration is only necessary, if you manually add the Streams Plugin in a later stage.")),(0,a.kt)("h2",u({},{id:"stream-processing"}),"Stream processing"),(0,a.kt)("p",null,"The stream processing feature allows messages with JSON payloads to be modified\nbefore they are republished and/or persisted to disk. This is managed with a\nuser defined query that has similar concepts to a SQL statement."),(0,a.kt)("h2",u({},{id:"api-description"}),"API description"),(0,a.kt)("p",null,"The CSP plugin is controlled over the ",(0,a.kt)("inlineCode",{parentName:"p"},"$CONTROL/stream-processing/v1")," topic, with\nreplies published to ",(0,a.kt)("inlineCode",{parentName:"p"},"$CONTROL/stream-processing/v1/response"),". You should ensure that\nyour access control solution denies access to these topics for unauthorized\nusers."),(0,a.kt)("p",null,"Commands are sent as JSON payloads, as described in the command sections below.\nThe examples in each section show only a single command in the command array,\nbut multiple commands can be sent at once and will be processed in order."),(0,a.kt)("p",null,"Commands will generate a response on the response topic. Unless otherwise\nspecified, this will consist of the ",(0,a.kt)("inlineCode",{parentName:"p"},"command")," string, the optional\n",(0,a.kt)("inlineCode",{parentName:"p"},"correlationData")," string, and an ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," string. If the command completed\nsuccessfully, the ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," string will not be present. Where a command returns\ndata in the response there will be a ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," object with contents as described\nin the individual command sections."),(0,a.kt)("p",null,"Response payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "responses":[\n        {\n            "command": "getStreamMessageCount",\n            "correlationData": "3c079967-5bee-4409-aa9f-a963180cde94",\n            "error": "Persistence not configured for this stream"\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"modifying-the-payload-with-select-statements"}),"Modifying the payload with select statements"),(0,a.kt)("p",null,"When processing is enabled the JSON payload can be manipulated using ",(0,a.kt)("inlineCode",{parentName:"p"},"select"),"\nstatements. If no select statements are defined, then the payload will be left\nunmodified. If select statements are defined, then only the parts of the\nmessage that are defined in the select will be added to the outgoing payload,\nand only messages that match the select specification will be republished or\npersisted."),(0,a.kt)("p",null,"The following examples demonstrate how to use define the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," queries.\nOnly the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," part of the command payload is shown, see the ",(0,a.kt)("inlineCode",{parentName:"p"},"createStream"),"\ncommand for the full command payload requirement."),(0,a.kt)("p",null,"The example incoming payload is:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),' {\n    "Machine Data": {\n        "Speed": 7.5,\n        "Angle Deg": 55.3,\n        "Angle Rad": 0.97,\n        "Power": 601.6\n    },\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("p",null,"A basic select picks a JSON object from the source payload and optionally\nplaces it in the target payload. To access items in the JSON object each\nelement of the object hierarchy is described by the object name in square\nbrackets. For example, to select the Speed element the ",(0,a.kt)("inlineCode",{parentName:"p"},"source")," item would be\nset to ",(0,a.kt)("inlineCode",{parentName:"p"},"[Machine Data][Speed]"),". The same technique is used when choosing the\ntarget location. It is perfectly valid to have the source and target paths be\nthe same."),(0,a.kt)("h4",u({},{id:"basic-payload-manipulation"}),"Basic payload manipulation"),(0,a.kt)("p",null,"This example extracts the Speed and makes it a top level object, keeps the\nLocation and discards all other payload entries."),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location]\n    }\n]\n')),(0,a.kt)("p",null,"With the example payload this would result in the following output payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "Speed": 7.5,\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("admonition",u({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"$ - topics can not be used with the streams plugin")),(0,a.kt)("h4",u({},{id:"select-aliases"}),"Select Aliases"),(0,a.kt)("p",null,"When defining a ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," statement an ",(0,a.kt)("inlineCode",{parentName:"p"},"alias")," can be created. This is a text\nstring, that must not begin or end with a square bracket, that can be used is a\n",(0,a.kt)("inlineCode",{parentName:"p"},"where")," statement instead of the full JSON path."),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location],\n        "alias": "location"\n    }\n]\n')),(0,a.kt)("h4",u({},{id:"aggregate-functions"}),"Aggregate functions"),(0,a.kt)("p",null,"Simple time aggregations can be defined for select statements for calculations\nover a time bucket. This includes the ",(0,a.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"max"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sum"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"count"),", and\n",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," functions. When a function is defined, the current values for\neach select statement is stored, and when a message is received, the payload is\nused to calculate the new value depending on the function in use. A new message\nwill be republished/persisted for every message that is received, and will\ncontain the current values. The current time bucket can be added to the target\npayload for identifying which bucket a message is in."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," function defines the parameters of the time bucket to be\nused. It has the parameters ",(0,a.kt)("inlineCode",{parentName:"p"},"intervalsize")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"intervaloffset"),", which are both\nin seconds. ",(0,a.kt)("inlineCode",{parentName:"p"},"intervalsize")," defines the length of the time bucket and must be\ngreater than 0. ",(0,a.kt)("inlineCode",{parentName:"p"},"intervaloffset")," defines the start offset of the time bucket.\nSo to create a 60 second time interval that starts at 15 seconds into the\nminute you would use:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "", # source is ignored for the time_bucket function\n        "target": "", # set to a JSON path to output to the payload, or blank to ignore\n        "function": {\n            "name": "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 15\n        }\n    }\n]\n')),(0,a.kt)("p",null,"Only one ",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," is allowed per query. The other functions are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max")," : the maximum value in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"min")," : the minimum value in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sum")," : the sum of all values in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"count")," : the count of messages received in the time bucket. This function\ndoes not require a source.")),(0,a.kt)("p",null,"A more complete example:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Data][SpeedMax]",\n        "alias" : "speedmax",\n        "function": {\n            "name" : "max"\n        }\n    },\n    {\n        "source": "[Machine Data][Power]",\n        "target": "[Data][PowerSum]",\n        "alias" : "powersum",\n        "function": {\n            "name" : "sum"\n        }\n\n    },\n    {\n        "target": "[Data][Count]",\n        "alias" : "IntervalCount",\n        "function": {\n            "name" : "count"\n        }\n\n    },\n    {\n        "source": "*",\n        "target": "",\n        "alias" : "timeInterval",\n        "function": {\n            "name" : "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 30\n        }\n    },\n    {\n        "source": "[Location]",\n        "target": "[Location]",\n        "alias" : "Location"\n    }\n]\n')),(0,a.kt)("p",null,"This would produce the output:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "Data" {\n        "SpeedMax": 10,\n        "PowerSum": 123,\n        "Count": 3\n    },\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("p",null,"The processing feature has some internal sources that can be used:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timestamp")," : the current Unix timestamp in seconds"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windowstart")," : the start of the current time bucket, if enabled"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windowend")," : the end of the current time bucket, if enabled")),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "timestamp",\n        "target": "[Data][Now]",\n    }\n]\n')),(0,a.kt)("h3",u({},{id:"choosing-messages-are-used-with-where-statements"}),"Choosing messages are used with where statements"),(0,a.kt)("p",null,"It is possible to restrict which messages are processed and persisted by using\na ",(0,a.kt)("inlineCode",{parentName:"p"},"where")," statement. The "),(0,a.kt)("h2",u({},{id:"stream-persistence-and-replay"}),"Stream persistence and replay"),(0,a.kt)("p",null,"The stream persistence feature allows all messages received on a stream to be\nsaved to disk and then replayed to a new topic at a later point in time.\nPersistence can be turned on or off at any point for any stream, if the feature\nis available."),(0,a.kt)("p",null,"When used on a stream that has processing configured, the processed payload\nwill be stored not the original payload."),(0,a.kt)("p",null,"Stream persistence is not available for 32-bit platforms."),(0,a.kt)("h3",u({},{id:"replaying"}),"Replaying"),(0,a.kt)("p",null,"Replaying a stream means republishing its messages on a different topic. A\nsingle replay may be running for each stream at once."),(0,a.kt)("p",null,"To replay a stream, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"replayStream")," command. The only requirement for is\nto specify the destination topic. Further control is possible using the ",(0,a.kt)("inlineCode",{parentName:"p"},"gte"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"limit"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"speed"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"reverse")," parameters."),(0,a.kt)("p",null,"If only the ",(0,a.kt)("inlineCode",{parentName:"p"},"replaytopic")," parameter is provided, all of the messages stored for\nthe stream will be republished in order, with the first message published\nimmediately and subsequent messages published at approximately the same\ninterval as the original messages."),(0,a.kt)("p",null,"The range and number of messages to be replayed can be limited using ",(0,a.kt)("inlineCode",{parentName:"p"},"gte"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"limit"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"gte")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),' are the lower and upper bounds of the time\nrange that should be replayed, respectively. They are both Unix timestamps in\nseconds. Both are optional, so specifying a range "all messages up to this\npoint" or "all messages since this point" are both possible, as well as "only\nmessages within this range". The ',(0,a.kt)("inlineCode",{parentName:"p"},"limit")," parameter limits the total number of\nmessages that will be replayed, and can be used in conjunction with ",(0,a.kt)("inlineCode",{parentName:"p"},"gte"),"\nand/or ",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),", or on its own. The default value of -1 means there is no\nnumerical limit."),(0,a.kt)("p",null,"The speed of the replay can be controlled using the ",(0,a.kt)("inlineCode",{parentName:"p"},"speed"),' parameter. Set to\nthe string "original" to keep the original speed, or to "fastest" to be\nrepublished at the fastest rate possible. Alternatively, set to a number to\nspecify an exact speed multiple, e.g. setting to ',(0,a.kt)("inlineCode",{parentName:"p"},"2.5")," would replay the stream\n2.5x faster than the original."),(0,a.kt)("p",null,"Stopping an in-progress replay for a stream can be done using the\n",(0,a.kt)("inlineCode",{parentName:"p"},"stopStreamReplay")," command."),(0,a.kt)("h3",u({},{id:"message-count"}),"Message count"),(0,a.kt)("p",null,"It is possible to obtain the estimated number of message currently persisted\nusing the ",(0,a.kt)("inlineCode",{parentName:"p"},"getStreamMessageCount")," command."),(0,a.kt)("h3",u({},{id:"clearing-messages"}),"Clearing messages"),(0,a.kt)("p",null,"Persisted messages can be manually cleared using the ",(0,a.kt)("inlineCode",{parentName:"p"},"clearStreamMessages")," API\ncommand. This completely removes the messages from disk and can not be undone."),(0,a.kt)("p",null,"All messages can be cleared, or a range of messages can be cleared based on\nthe message timestamp in unix timestamp seconds format. Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"gte")," parameter\nto specify the lower bound of the timestamp that will be cleared, and the ",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),"\nparameter to specify the upper bound of the range to be cleared."),(0,a.kt)("p",null,"See the API description for details of ",(0,a.kt)("inlineCode",{parentName:"p"},"gte")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"lte"),"."),(0,a.kt)("h3",u({},{id:"time-to-live-ttl"}),"Time to Live (TTL)"),(0,a.kt)("p",null,"When creating a new stream and enabling persistence, the Time to Live (TTL)\nproperty will be used, which allows the disk usage of streams to be limited.\nSetting TTL to 0 means that all messages received will be kept on disk forever,\nunless they are manually cleared. Setting TTL to a positive integer means that\nmessages will be removed from the persistence store in the future. TTL is\nmeasured in seconds, and guarantees that messages that are younger than that\nnumber of seconds will be kept in the database. Messages older than the TTL\ninterval are not immediately removed from the database: they can remain in the\ndatabase until at most twice the TTL interval before they are removed,\ndepending on when they were received."),(0,a.kt)("h3",u({},{id:"clearstreammessages"}),"clearStreamMessages"),(0,a.kt)("p",null,"Clear persisted messages within a defined range."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be cleared."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gte"),' : optional lower bound of the range to be cleared, i.e. all messages\nmore recent than this will be cleared. If not present or set to "", then no\nlower bound will be used. Unix timestamp in seconds.'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lte"),' : optional upper bound of the range to be cleared, i.e. all messages\nolder than this will be cleared. If not present or set to "", then no upper\nbound will be used. Unix timestamp in seconds.'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Non-code examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),"# Clear all messages that are more recent than 1620131088.\nclearStreamMessages gte=1620131088\n\n# Clear all messages that are older than 1620131088.\nclearStreamMessages lte=1620131088\n\n# Clear all messages that are more recent than 1620044688 and are also older\n# than 1620131088.\nclearStreamMessages gte=1620044688 lte=1620131088\n")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "clearStreamMessages",\n            "streamname": "<name of stream>",\n            "gte": <optional lower bound as unix timestamp number>,\n            "lte": <optional upper bound as unix timestamp number>,\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"createstream-and-modifystream"}),"createStream and modifyStream"),(0,a.kt)("p",null,"Create a new stream, or modify an existing stream."),(0,a.kt)("p",null,"When modifying a stream, only parameters that are present in the JSON payload\nare updated."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be created/modified."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sourcetopic")," : the MQTT topic that will be used as the source of messages."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"targettopic")," : optional MQTT topic where stream messages will be\nrepublished."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"targetqos")," : optional QoS that will be used when republishing messages. If\nset to -1 then the original QoS will be used."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ttl")," : optional Time to Live in seconds that will be used when persisting\nmessages."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"active")," : boolean, if set to true the stream will be enabled and\noperational. If set to false, none of the stream features will be used."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"process")," : boolean, if set to true the stream processing feature will be\nenabled. If set to false, stream processing will be disabled and payloads\nwill be republished without modification."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"persist")," : boolean, if set to true the stream persistence feature will be\nenabled. If set to false, stream persistence will be disabled and messages\nwill not be persisted to disk."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"textname")," : optional user string to name the stream."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"textdescription")," : optional user string to describe the stream."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"query")," : optional object used with the processing feature, can contain a\n",(0,a.kt)("inlineCode",{parentName:"li"},"select")," and/or a ",(0,a.kt)("inlineCode",{parentName:"li"},"where")," array."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"select")," : optional query array "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"where")," : optional query array. At the moment this array can only contain a\nsingle object with an ",(0,a.kt)("inlineCode",{parentName:"li"},"operator"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"left"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"right")," members. The ",(0,a.kt)("inlineCode",{parentName:"li"},"left"),"\nstring is a JSON path field or alias. The ",(0,a.kt)("inlineCode",{parentName:"li"},"right")," item can only be a value\nand can be a string, number, or boolean. The ",(0,a.kt)("inlineCode",{parentName:"li"},"operator")," is a string which can\nbe one of ",(0,a.kt)("inlineCode",{parentName:"li"},"=="),", ",(0,a.kt)("inlineCode",{parentName:"li"},"!="),", ",(0,a.kt)("inlineCode",{parentName:"li"},">"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"<"),", ",(0,a.kt)("inlineCode",{parentName:"li"},">="),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"<="),".")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "createStream",\n            "streamname": "<name>",\n            "correlationData": "",\n            "sourcetopic": "",\n            "targettopic": "",\n            "targetqos": -1|0|1|2,\n            "ttl": 86400,\n            "active": true|false,\n            "process": true|false,\n            "persist": true|false,\n            "textname": "",\n            "textdescription": "",\n            "query": {\n                "select": [\n                    {\n                        "source": "",\n                        "target": "",\n                        "alias": "",\n                        "function": {\n                            "name": ""\n                        }\n                    }\n                ],\n                "where": [\n                    {\n                        "operator": "==",\n                        "left": "",\n                        "right: ""\n                    }\n                ]\n\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"deletestream"}),"deleteStream"),(0,a.kt)("p",null,"Delete a stream. This cannot be undone. If the stream is currently carrying out\na replay, the replay will be stopped."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be deleted."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "deleteStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"disablestream"}),"disableStream"),(0,a.kt)("p",null,"Disable an existing stream. Enabling / setting active here means that the stream\nwill accept messages and process, persist, and republish them as it is\nconfigured. If a stream is disabled / set inactive then it will not process,\npersist, or republish messages."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be disabled."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "disableStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"enablestream"}),"enableStream"),(0,a.kt)("p",null,"Enable an existing stream. Enabling / setting active here means that the stream\nwill accept messages and process, persist, and republish them as it is\nconfigured. If a stream is disabled / set inactive then it will not process,\npersist, or republish messages."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be enabled."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "enableStream",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"getlicense"}),"getLicense"),(0,a.kt)("p",null,"Retrieve the current licensed features."),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "getLicense",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"Response payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "responses":[\n        {\n            "command": "getLicense",\n            "correlationData": "",\n            "data": {\n                "issuedBy": "Cedalo AG",\n                "issuedTo": "name@customer.com",\n                "comment": "Comment",\n                "serial": "00000000-0000-0000-0000-000000000000",\n                "features": [\n                    {\n                        "name": "stream-count",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000,\n                        "count": -1\n                    },\n                    {\n                        "name": "stream-processing",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000\n                    },\n                    {\n                        "name": "stream-persistence",\n                        "version": "1.0",\n                        "validSince": 1610219382000,\n                        "validUntil": 1610305782000\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"getstream"}),"getStream"),(0,a.kt)("p",null,"Get information on a stream. "),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be queried."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "getStream",\n            "streamname": "<name>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"Response payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "responses":[\n        {\n            "command": "getStream",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name>",\n                "sourcetopic": "",\n                "targettopic": "",\n                "textname": "",\n                "textdescription": "",\n                "targetqos": -1,\n                "ttl": 86400,\n                "active": true|false,\n                "process": true|false,\n                "persist": true|false,\n                "replaying": true|false,\n                "query": {\n                    # Query spec\n                }\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"getstreammessagecount"}),"getStreamMessageCount"),(0,a.kt)("p",null,"Retrieve the approximate count of messages that are currently persisted."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be queried."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "getStreamMessageCount",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"Response payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "responses":[\n        {\n            "command": "getStreamMessageCount",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name of stream>",\n                "count": <count>\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"liststreams"}),"listStreams"),(0,a.kt)("p",null,"List all configured streams."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"verbose")," : boolean, if set to false a simple list of stream names will be\nreturned. If set to true, the list of streams will be returned as objects in\nthe same format as when using the ",(0,a.kt)("inlineCode",{parentName:"li"},"getStream")," command."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"count")," : optional maximum number of streams to return."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"offset")," : optional offset to start the stream list."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "listStreams",\n            "streamname": "<name>",\n            "verbose": true|false,\n            "count": <number>,\n            "offset": <number>\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"Response payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "responses":[\n        {\n            "command": "listStreams",\n            "correlationData": "",\n            "data": {\n                "streamname": "<name>",\n                "sourcetopic": "",\n                "targettopic": "",\n                "textname": "",\n                "textdescription": "",\n                "targetqos": -1|0|1|2,\n                "ttl": 86400,\n                "active": true|false,\n                "process": true|false,\n                "persist": true|false,\n                "replaying": true|false,\n                "query": {\n                    # Query spec\n                }\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"replaystream"}),"replayStream"),(0,a.kt)("p",null,"Replay a persisted stream to a different topic."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be replayed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"replaytopic")," : The topic where the messages will be published."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gte"),' : optional lower bound of the range to be cleared, i.e. all messages\nmore recent than this will be replayed. If not present or set to "", then no\nlower bound will be used. Unix timestamp in seconds.'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lte"),' : optional upper bound of the range to be cleared, i.e. all messages\nolder than this will be replayed. If not present or set to "", then no upper\nbound will be used. Unix timestamp in seconds.'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"limit")," : optionally limit the number of messages replayed. This number\nrepresents a maximum value and may not be reached if there are not enough\nmessages persisted. A value of ",(0,a.kt)("inlineCode",{parentName:"li"},"-1"),", the default, means that no numerical\nlimit will be applied."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"speed")," : optionally change the speed at which the messages are replayed.\nThis can be one of the strings ",(0,a.kt)("inlineCode",{parentName:"li"},'"original"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"fastest"'),", or a number\nindicating the factor. For example, a speed of ",(0,a.kt)("inlineCode",{parentName:"li"},"2.5")," means replay at 2.5x the\noriginal speed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"reverse")," : optionally set to ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," to play the messages in reverse order."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "replayStream",\n            "streamname": "<name of stream>",\n            "replaytopic": "<replay destination topic>",\n            "gte": <optional lower bound as unix timestamp number>,\n            "lte": <optional upper bound as unix timestamp number>,\n            "limit": <optional message limit, number>,\n            "speed": <optional replay speed, number>,\n            "reverse": <optional reverse playback mode, boolean>,\n            "correlationData": ""\n        }\n    ]\n}\n')),(0,a.kt)("h3",u({},{id:"stopstreamreplay"}),"stopStreamReplay"),(0,a.kt)("p",null,"Stop a stream replay, if it is running."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"streamname")," : the name of the stream to be stopped."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"correlationData")," : optional string that can be used to correlate commands\nwith responses. Use a random/unique value.")),(0,a.kt)("p",null,"Command payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "commands": [\n        {\n            "command": "stopStreamReplay",\n            "streamname": "<name of stream>",\n            "correlationData": ""\n        }\n    ]\n}\n')))}N.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),i=n(74889),l=n(62659),s=n(83166);function r({inline:e}){return a.createElement(i.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:l.Z[500]},size:"small",icon:a.createElement(s.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);