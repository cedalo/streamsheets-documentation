"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[36575],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26473:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>d,default:()=>O,frontMatter:()=>m,metadata:()=>f,toc:()=>y});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(i)for(var n of i(t))s.call(t,n)&&p(e,n,t[n]);return e};const m={id:"mongoreplace",title:"MONGO.REPLACE",sidebar_label:"MONGO.REPLACE"},d=void 0,f={unversionedId:"functions/databases/mongoreplace",id:"version-2.5/functions/databases/mongoreplace",title:"MONGO.REPLACE",description:"Replaces elements in a Mongo database. You can use the Function Wizard for this function. Only replaces one entry at a time.",source:"@site/streamsheets_versioned_docs/version-2.5/functions/databases/mongoreplace.md",sourceDirName:"functions/databases",slug:"/functions/databases/mongoreplace",permalink:"/streamsheets/2.5/functions/databases/mongoreplace",draft:!1,tags:[],version:"2.5",frontMatter:{id:"mongoreplace",title:"MONGO.REPLACE",sidebar_label:"MONGO.REPLACE"},sidebar:"version-2.5/someSidebar",previous:{title:"MONGO.QUERY",permalink:"/streamsheets/2.5/functions/databases/mongoquery"},next:{title:"MONGO.STORE",permalink:"/streamsheets/2.5/functions/databases/mongostore"}},b={},y=[],g={toc:y};function O(e){var t,n=e,{components:a}=n,p=((e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=u(u({},g),p),o(t,l({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Replaces elements in a Mongo database. You can use the Function Wizard for this function. Only replaces one entry at a time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=MONGO.REPLACE(Producer, Collection, Query, Document, Upsert)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Producer"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Producer to use for counting. The database name is configured in the affiliated Connector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Collection"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Choose an existing collection, where the item is stored.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Query"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Define a query using a JSON cell range, which defines the document to be replaced.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Document"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Defines the key-value pair(s) to be replacing the old entry.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Upsert"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Optional Parameter to define, if a new document will be created when the query can not find a document to be replaced. Default = FALSE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("p",null,"TRUE, if no ",(0,r.kt)("a",u({parentName:"p"},{href:"../../other#error-codes"}),"error"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",u({parentName:"tr"},{align:null}),"Formula"),(0,r.kt)("th",u({parentName:"tr"},{align:null}),"Result"),(0,r.kt)("th",u({parentName:"tr"},{align:null}),"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"=MONGO.REPLACE(","|",'Producer, "TestCollection", JSON(A1:B4), JSON(C1:D4))'))),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"TRUE"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"The Query looks for a document in the collection which matches the A1:B4 key-value pairs. The found document will be deleted and the new document takes its place. If nothing is found to be replaced, no action will occur.")))))}O.isMDXComponent=!0}}]);