"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[71252],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>y,frontMatter:()=>d,metadata:()=>h,toc:()=>f});var a=n(3905),r=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(i)for(var n of i(t))c.call(t,n)&&u(e,n,t[n]);return e};const d={id:"inbox",title:"Inbox",sidebar_label:"Inbox"},m=void 0,h={unversionedId:"guides/sheets/inbox",id:"version-3.0/guides/sheets/inbox",title:"Inbox",description:"As in a mail service, the Inbox marks the point where new messages arrive and queue in order of their arrival time",source:"@site/streamsheets_versioned_docs/version-3.0/guides/sheets/inbox.md",sourceDirName:"guides/sheets",slug:"/guides/sheets/inbox",permalink:"/streamsheets/guides/sheets/inbox",draft:!1,tags:[],version:"3.0",frontMatter:{id:"inbox",title:"Inbox",sidebar_label:"Inbox"},sidebar:"someSidebar",previous:{title:"IF Dependencies",permalink:"/streamsheets/guides/sheets/if"},next:{title:"JSON Range",permalink:"/streamsheets/guides/sheets/jsonrange"}},g={},f=[{value:"Inbox Settings",id:"inbox-settings",level:3}],b={toc:f};function y(e){var t,r=e,{components:u}=r,d=((e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&i)for(var a of i(e))t.indexOf(a)<0&&c.call(e,a)&&(n[a]=e[a]);return n})(r,["components"]);return(0,a.kt)("wrapper",(t=p(p({},b),d),o(t,s({components:u,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"As in a mail service, the Inbox marks the point where new messages arrive and queue in order of their arrival time\nbefore\nthey are processed. Although the inbox only displays up to a maximum of 100 messages on your client (your browser), an\nunlimited amount can be queued on the server. The structure and content of a message are given in full detail and\npresented as a JSON object in the Payload section. Should the original data format not be JSON, the format is\nautomatically converted."),(0,a.kt)("p",null,"Use drag and drop, to link some or all payload elements of incoming messages to the grid and create a READ() function.\nNow, every time a new message arrives, and the stream sheet is calculated, the respective cells are updated with new\nmessage data or set to #NA if a message did not deliver the given parameter."),(0,a.kt)("p",null,"Messages and message streams can be linked to an inbox, either via the \u201cInbox\u201d settings or\nthe ",(0,a.kt)("a",p({parentName:"p"},{href:"/streamsheets/guides/connections/"}),"\u201cConnections\u201d")," menu.\nAnother way to insert messages into an inbox is by using it as a dedicated target in certain functions (e.g. =HTTP.GET(\nA1, INBOX(\u201cSheet1\u201d)))."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"#a1",src:n(72457).Z,width:"1270",height:"624"})),(0,a.kt)("p",null,'Inbox messages can consist of different objects. There are the regular parameters like boolean, number, or string\nelements, which are holding the actual information, and there are structural elements like "dictionaries" and "arrays".\nThe structural elements are ordering the pieces of information in different hierarchies. While "dictionaries" only serve\nas folder elements to organize message data on different levels, "arrays" usually follow a certain style and represent\nan order list of values. They repeat the same form a certain amount of times. For example, if a message should hold\ndifferent information for the same parameters an array would be a perfect choice.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Simple example:")," You could structure multiple sensor information from the same parameter in one message. Let's say\nyou have three sensors, who all measured temperature: Sensor 1 measured 10\xb0C, Sensor 2 measured 20\xb0C and Sensor 3\nmeasured 12\xb0C."),(0,a.kt)("p",null,"A JSON object capturing this information would look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",p({parentName:"pre"},{}),'[{\n    "sensor_id":"S1",\n    "temp":10\n}, {\n    "sensor_id":"S2",\n    "temp":20\n}, {\n    "sensor_id":"S3",\n    "temp":12\n}]\n')),(0,a.kt)("p",null,"In a Streamsheets Inbox the same payload would look like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"#10",src:n(4411).Z,width:"203",height:"329"})),(0,a.kt)("h3",p({},{id:"inbox-settings"}),"Inbox Settings"),(0,a.kt)("p",null,"In this menu, you decide the connections a stream sheet consumes. Also, it sets its recalculation trigger."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"InboxSettings",src:n(69928).Z,width:"313",height:"709"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Settings:")),(0,a.kt)("p",null,"There are multiple possible triggers for a calculation step to choose from. In the dropdown menu \u201cCalculate Streamsheet\u201d\nyou can find the following options."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cNever\u201d:")," The Streamsheet is never recalculated."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cOn Interval\u201d:")," A sheet-specific interval can be set to recalculate the sheet cyclically. You can either decide to\nuse the globally set interval or choose an individual interval."),(0,a.kt)("li",{parentName:"ul"},"In the advanced settings, it is further possible to select a specific calculation starting point for the intervals."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cOn Message Arrival\u201d:")," Every time a message is received, the sheet is calculated immediately."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cOn EXECUTE Formula\u201d:")," The calculation of a stream sheet is triggered by another stream sheet containing an EXECUTE\nformula. The triggering sheet must be in the same App. Note: The sheet triggering the execution will pause its\ncalculation in the cell containing EXECUTE, wait until the triggered sheet has completed its calculation, and then\nresume its calculation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cOn App Start\u201d:")," The streamsheet calculates once when the App is started."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cOn App Stop\u201d:")," The streamsheet calculates when the App is being stopped.")),(0,a.kt)("admonition",p({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"It is possible, that messages queue in your inbox. Make sure, that you adjust your trigger to not overcrowd your queue\nif you are not using \u201con message arrival\u201d as a trigger.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Connections:")),(0,a.kt)("p",null,"An inbox can have one or multiple connections. A connection is always based on an underlining protocol and the\nconnection's details. This could be for example an MQTT broker with a topic to listen to. Incoming messages will now be\nredirected to the selected inbox and will be evaluated in the next calculation step."),(0,a.kt)("p",null,"By clicking \u201cCreate new connection\u201d you will be redirected to the ",(0,a.kt)("a",p({parentName:"p"},{href:"/streamsheets/guides/connections/"}),"\u201cConnections\u201d")," menu."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"InboxSettings",src:n(19297).Z,width:"317",height:"364"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Advanced Settings:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Loop"),' through an array (one calculation per array element):Sometimes it makes sense to calculate the contents of a\npayload one at a time, because it consists out of arrays with different amounts of objects. This can be done by adding\na loop element to your inbox. Either right-click on a parameter of your payload or open the inbox settings and set it\nvia using the DOT notation. When looping an array, every array object gets treated as if it would be part of a single\nmessage. Usually, one message takes one step to be processed. Adding a loop to our example message would now result in\nthree steps. In every step, only one of the three information blocks would be read. There are two main reasons, why\nthis seems practical. The array is filled with messages you want to process one after another. The array varies in\nsize, and you never know how big an array could get. So adding simple READ() functions does not cut it. Adding a loop\nelement is quite simple. Wait for one message to arrive in the inbox, right-click on the top array element and\nselect "Set Loop Element". It is also possible to set the loop element in the Inbox settings. There you can also add\nthe option "recursively" if you do not just want to loop through an array, but want to loop through more than just one\nlevel of an "array" or even "dictionary" object.')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"#10",src:n(74430).Z,width:"1269",height:"785"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201eHide unprocessed Messages\u201d:")," If this option is checked, a queue of messages is not displayed in the inbox. Only\nthe next message to be processed is displayed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201cRepeat calculation endlessly until RETURN() is executed\u201d:")," Expects a RETURN() function to be processed.")))}y.isMDXComponent=!0},72457:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Inbox-1bc8128ce68032ead9b6aff85a27ba95.png"},19297:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/InboxConnections-9143ec0b9be951afbdb820c7de0da9b1.png"},69928:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/InboxSettings-fa989c60ae4911bea10e3edfa39c38d2.png"},4411:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Payload-446097a420c6ed4e2b5711c85826c60b.png"},74430:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/loop-a13175c35dcb46d0e5bc8f99f2c75cde.png"}}]);