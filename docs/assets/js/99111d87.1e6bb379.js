"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[27905],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89126:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>g,frontMatter:()=>m,metadata:()=>h,toc:()=>k});var a=n(3905),r=Object.defineProperty,i=Object.defineProperties,s=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&p(e,n,t[n]);if(o)for(var n of o(t))c.call(t,n)&&p(e,n,t[n]);return e};const m={id:"streams-select-syntax",title:"Streams Select Query",sidebar_label:"Select Query Syntax"},d=void 0,h={unversionedId:"advanced-features/streams/streams-select-syntax",id:"version-3.1/advanced-features/streams/streams-select-syntax",title:"Streams Select Query",description:"When processing is enabled the JSON payload can be manipulated using select",source:"@site/mosquitto_versioned_docs/version-3.1/advanced-features/streams/strean-select-syntax.md",sourceDirName:"advanced-features/streams",slug:"/advanced-features/streams/streams-select-syntax",permalink:"/mosquitto/advanced-features/streams/streams-select-syntax",draft:!1,tags:[],version:"3.1",frontMatter:{id:"streams-select-syntax",title:"Streams Select Query",sidebar_label:"Select Query Syntax"},sidebar:"someSidebar",previous:{title:"Setting Up Streams",permalink:"/mosquitto/advanced-features/streams/streams-config"},next:{title:"Streams Web Client",permalink:"/mosquitto/advanced-features/streams/streams-web-ui"}},f={},k=[{value:"Basic payload manipulation",id:"basic-payload-manipulation",level:4},{value:"Select Aliases",id:"select-aliases",level:4},{value:"Aggregate functions",id:"aggregate-functions",level:4},{value:"Choosing messages are used with where statements",id:"choosing-messages-are-used-with-where-statements",level:3}],b={toc:k};function g(e){var t,n=e,{components:r}=n,p=((e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&c.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=u(u({},b),p),i(t,s({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"When processing is enabled the JSON payload can be manipulated using ",(0,a.kt)("inlineCode",{parentName:"p"},"select"),"\nstatements. If no select statements are defined, then the payload will be left\nunmodified. If select statements are defined, then only the parts of the\nmessage that are defined in the select will be added to the outgoing payload,\nand only messages that match the select specification will be republished or\npersisted."),(0,a.kt)("p",null,"The following examples demonstrate how to use define the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," queries.\nOnly the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," part of the command payload is shown, see the ",(0,a.kt)("inlineCode",{parentName:"p"},"createStream"),"\ncommand for the full command payload requirement."),(0,a.kt)("p",null,"The example incoming payload is:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),' {\n    "Machine Data": {\n        "Speed": 7.5,\n        "Angle Deg": 55.3,\n        "Angle Rad": 0.97,\n        "Power": 601.6\n    },\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("p",null,"A basic select picks a JSON object from the source payload and optionally\nplaces it in the target payload. To access items in the JSON object each\nelement of the object hierarchy is described by the object name in square\nbrackets. For example, to select the Speed element the ",(0,a.kt)("inlineCode",{parentName:"p"},"source")," item would be\nset to ",(0,a.kt)("inlineCode",{parentName:"p"},"[Machine Data][Speed]"),". The same technique is used when choosing the\ntarget location. It is perfectly valid to have the source and target paths be\nthe same."),(0,a.kt)("h4",u({},{id:"basic-payload-manipulation"}),"Basic payload manipulation"),(0,a.kt)("p",null,"This example extracts the Speed and makes it a top level object, keeps the\nLocation and discards all other payload entries."),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location]"\n    }\n]\n')),(0,a.kt)("p",null,"With the example payload this would result in the following output payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "Speed": 7.5,\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("admonition",u({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"$ - topics can not be used with the streams plugin")),(0,a.kt)("h4",u({},{id:"select-aliases"}),"Select Aliases"),(0,a.kt)("p",null,"When defining a ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," statement an ",(0,a.kt)("inlineCode",{parentName:"p"},"alias")," can be created. This is a text\nstring, that must not begin or end with a square bracket, that can be used is a\n",(0,a.kt)("inlineCode",{parentName:"p"},"where")," statement instead of the full JSON path."),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Speed]"\n    },{\n        "source": "[Location]",\n        "target": "[Location],\n        "alias": "location"\n    }\n]\n')),(0,a.kt)("h4",u({},{id:"aggregate-functions"}),"Aggregate functions"),(0,a.kt)("p",null,"Simple time aggregations can be defined for select statements for calculations\nover a time bucket. This includes the ",(0,a.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"max"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sum"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"count"),", and\n",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," functions. When a function is defined, the current values for\neach select statement is stored, and when a message is received, the payload is\nused to calculate the new value depending on the function in use. A new message\nwill be republished/persisted for every message that is received, and will\ncontain the current values. The current time bucket can be added to the target\npayload for identifying which bucket a message is in."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," function defines the parameters of the time bucket to be\nused. It has the parameters ",(0,a.kt)("inlineCode",{parentName:"p"},"intervalsize")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"intervaloffset"),", which are both\nin seconds. ",(0,a.kt)("inlineCode",{parentName:"p"},"intervalsize")," defines the length of the time bucket and must be\ngreater than 0. ",(0,a.kt)("inlineCode",{parentName:"p"},"intervaloffset")," defines the start offset of the time bucket.\nSo to create a 60 second time interval that starts at 15 seconds into the\nminute you would use:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "", # source is ignored for the time_bucket function\n        "target": "", # set to a JSON path to output to the payload, or blank to ignore\n        "function": {\n            "name": "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 15\n        }\n    }\n]\n')),(0,a.kt)("p",null,"Only one ",(0,a.kt)("inlineCode",{parentName:"p"},"time_bucket")," is allowed per query. The other functions are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max")," : the maximum value in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"min")," : the minimum value in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sum")," : the sum of all values in the time bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"count")," : the count of messages received in the time bucket. This function\ndoes not require a source.")),(0,a.kt)("p",null,"A more complete example:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "[Machine Data][Speed]",\n        "target": "[Data][SpeedMax]",\n        "alias" : "speedmax",\n        "function": {\n            "name" : "max"\n        }\n    },\n    {\n        "source": "[Machine Data][Power]",\n        "target": "[Data][PowerSum]",\n        "alias" : "powersum",\n        "function": {\n            "name" : "sum"\n        }\n\n    },\n    {\n        "target": "[Data][Count]",\n        "alias" : "IntervalCount",\n        "function": {\n            "name" : "count"\n        }\n\n    },\n    {\n        "source": "*",\n        "target": "",\n        "alias" : "timeInterval",\n        "function": {\n            "name" : "time_bucket",\n            "intervalsize": 60,\n            "intervaloffset": 30\n        }\n    },\n    {\n        "source": "[Location]",\n        "target": "[Location]",\n        "alias" : "Location"\n    }\n]\n')),(0,a.kt)("p",null,"This would produce the output:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'{\n    "Data" {\n        "SpeedMax": 10,\n        "PowerSum": 123,\n        "Count": 3\n    },\n    "Location": "Freiburg"\n}\n')),(0,a.kt)("p",null,"The processing feature has some internal sources that can be used:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timestamp")," : the current Unix timestamp in seconds"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windowstart")," : the start of the current time bucket, if enabled"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windowend")," : the end of the current time bucket, if enabled")),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{}),'"select": [\n    {\n        "source": "timestamp",\n        "target": "[Data][Now]",\n    }\n]\n')),(0,a.kt)("h3",u({},{id:"choosing-messages-are-used-with-where-statements"}),"Choosing messages are used with where statements"),(0,a.kt)("p",null,"It is possible to restrict which messages are processed and persisted by using\na ",(0,a.kt)("inlineCode",{parentName:"p"},"where")," statement. The"))}g.isMDXComponent=!0}}]);