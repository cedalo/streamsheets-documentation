"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[96105],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(r),d=n,f=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var m=2;m<l;m++)o[m]=r[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},43716:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>y,frontMatter:()=>c,metadata:()=>f,toc:()=>b});var a=r(3905),n=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&p(e,r,t[r]);if(i)for(var r of i(t))m.call(t,r)&&p(e,r,t[r]);return e};const c={id:"inboxmetadata",title:"INBOXMETADATA",sidebar_label:"INBOXMETADATA"},d=void 0,f={unversionedId:"functions/streamsheet/inboxmetadata",id:"version-2.3/functions/streamsheet/inboxmetadata",title:"INBOXMETADATA",description:"Creates a JSON key from the given values or range to retrieve metadata",source:"@site/streamsheets_versioned_docs/version-2.3/functions/streamsheet/inboxmetadata.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/inboxmetadata",permalink:"/streamsheets/2.3/functions/streamsheet/inboxmetadata",draft:!1,tags:[],version:"2.3",frontMatter:{id:"inboxmetadata",title:"INBOXMETADATA",sidebar_label:"INBOXMETADATA"},sidebar:"version-2.3/someSidebar",previous:{title:"INBOXDATA",permalink:"/streamsheets/2.3/functions/streamsheet/inboxdata"},next:{title:"JSON",permalink:"/streamsheets/2.3/functions/streamsheet/json"}},h={},b=[],g={toc:b};function y(e){var t,r=e,{components:n}=r,p=((e,t)=>{var r={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&i)for(var a of i(e))t.indexOf(a)<0&&m.call(e,a)&&(r[a]=e[a]);return r})(r,["components"]);return(0,a.kt)("wrapper",(t=u(u({},g),p),l(t,o({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"Creates a JSON key from the given values or range to retrieve metadata\nfrom within a message. This function is normally used in the READ\nfunction. INBOXMETADATA retrieves values from the Metadata section of a\nmessage."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax")),(0,a.kt)("p",null,"=INBOXMETADATA(","[","Streamsheet, Message, ValuesOrRange","]",")"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Streamsheet"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Optional. Streamsheet, where to look for inbox.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Message"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Optional. Message to retrieve data from. If left empty, the current message in the inbox is used.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),"ValuesOrRange"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Optional. A list of values or a range of cells describing the path to the element path within a JSON structure.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value")),(0,a.kt)("p",null,"A string key to retrieve data from a message."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Function"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Result"),(0,a.kt)("th",u({parentName:"tr"},{align:null}),"Comment"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),'=INBOXMETADATA(,,"arrivalTime")'),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"[","S1","]","[","]","[","arrivalTime","]"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"Returns an identifier that can be used in other Streamsheet functions like READ. As Streamsheet and Message are left empty, the current Streamsheet and inbox Message is used.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:null}),'=READ(INBOXMETADATA(,,"arrivalTime"),C11,"Number")'),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"arrivalTime"),(0,a.kt)("td",u({parentName:"tr"},{align:null}),"The READ function return the last part of the JSON Path. The value of the Message at the given Path will be pushed into cell C11. Here we retrieve the arrival time of a message, which is a default Metadata field added to each message.")))))}y.isMDXComponent=!0}}]);