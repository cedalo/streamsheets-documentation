"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[17136],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>d});var n=o(67294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var r=n.createContext({}),g=function(e){var t=n.useContext(r),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},u=function(e){var t=g(e.components);return n.createElement(r.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=g(o),d=i,m=c["".concat(r,".").concat(d)]||c[d]||p[d]||l;return o?n.createElement(m,s(s({ref:t},u),{},{components:o})):n.createElement(m,s({ref:t},u))}));function d(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=o.length,s=new Array(l);s[0]=c;var a={};for(var r in t)hasOwnProperty.call(t,r)&&(a[r]=t[r]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var g=2;g<l;g++)s[g]=o[g];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},81156:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>v,frontMatter:()=>c,metadata:()=>m,toc:()=>k});var n=o(3905),i=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,u=(e,t,o)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,p=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&u(e,o,t[o]);if(a)for(var o of a(t))g.call(t,o)&&u(e,o,t[o]);return e};const c={id:"logs",title:"Logs on Pro Mosquitto",sidebar_label:"Logs"},d="Mosquitto Broker Logging Documentation",m={unversionedId:"deployment/on-premises/deployment/administrating/logs",id:"version-3.0/deployment/on-premises/deployment/administrating/logs",title:"Logs on Pro Mosquitto",description:"Logs are an essential part of debugging and monitoring the state of a Mosquitto broker. This guide provides information on how to configure log levels, log destinations, and details on enabling log rotation for the Mosquitto MQTT broker.",source:"@site/mosquitto_versioned_docs/version-3.0/deployment/on-premises/deployment/administrating/logs.md",sourceDirName:"deployment/on-premises/deployment/administrating",slug:"/deployment/on-premises/deployment/administrating/logs",permalink:"/mosquitto/3.0/deployment/on-premises/deployment/administrating/logs",draft:!1,tags:[],version:"3.0",frontMatter:{id:"logs",title:"Logs on Pro Mosquitto",sidebar_label:"Logs"},sidebar:"someSidebar",previous:{title:"Manage Licenses",permalink:"/mosquitto/3.0/deployment/on-premises/deployment/administrating/license"},next:{title:"Update Pro Mosquitto",permalink:"/mosquitto/3.0/deployment/on-premises/deployment/administrating/versions"}},f={},k=[{value:"Log Levels",id:"log-levels",level:2},{value:"Configuring Log Levels",id:"configuring-log-levels",level:3},{value:"Default Log Levels",id:"default-log-levels",level:3},{value:"Log Destinations",id:"log-destinations",level:2},{value:"Default Log Destination",id:"default-log-destination",level:3},{value:"Configuring Log Destinations",id:"configuring-log-destinations",level:3},{value:"Log Rotation",id:"log-rotation",level:4},{value:"Example Configuring Log Rotation with Logrotate on Linux",id:"example-configuring-log-rotation-with-logrotate-on-linux",level:5},{value:"Log Access",id:"log-access",level:2},{value:"Accessing Logs on Docker Compose",id:"accessing-logs-on-docker-compose",level:3},{value:"Accessing Logs on Native Linux",id:"accessing-logs-on-native-linux",level:3},{value:"Syslog",id:"syslog",level:4},{value:"Direct File Logging",id:"direct-file-logging",level:4},{value:"Using Journalctl (systemd-based systems)",id:"using-journalctl-systemd-based-systems",level:4},{value:"Accessing Logs on Windows",id:"accessing-logs-on-windows",level:3}],h={toc:k};function v(e){var t,o=e,{components:i}=o,u=((e,t)=>{var o={};for(var n in e)r.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&a)for(var n of a(e))t.indexOf(n)<0&&g.call(e,n)&&(o[n]=e[n]);return o})(o,["components"]);return(0,n.kt)("wrapper",(t=p(p({},h),u),l(t,s({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("h1",p({},{id:"mosquitto-broker-logging-documentation"}),"Mosquitto Broker Logging Documentation"),(0,n.kt)("p",null,"Logs are an essential part of debugging and monitoring the state of a Mosquitto broker. This guide provides information on how to configure log levels, log destinations, and details on enabling log rotation for the Mosquitto MQTT broker.\nIf you need a tutorial on logs there is also a ",(0,n.kt)("a",p({parentName:"p"},{href:"https://cedalo.com/blog/mosquitto-mqtt-broker-logging/"}),"blog article")," on the matter."),(0,n.kt)("h2",p({},{id:"log-levels"}),"Log Levels"),(0,n.kt)("p",null,"Mosquitto supports multiple log levels to provide different levels of detail in the logs. To change the log level, update the ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file with the appropriate ",(0,n.kt)("inlineCode",{parentName:"p"},"log_type")," directive."),(0,n.kt)("h3",p({},{id:"configuring-log-levels"}),"Configuring Log Levels"),(0,n.kt)("p",null,"To get access to the full log, set the ",(0,n.kt)("inlineCode",{parentName:"p"},"log_type")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"all"),". This will include all log types: ",(0,n.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"notice"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"warning"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"error"),"."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-conf"}),"log_type all\n")),(0,n.kt)("p",null,"or"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-conf"}),"log_type info\nlog_type notice\n")),(0,n.kt)("p",null,"Restart the Mosquitto broker to apply the changes after modifying the configuration file."),(0,n.kt)("h3",p({},{id:"default-log-levels"}),"Default Log Levels"),(0,n.kt)("p",null,"By default, Mosquitto logs the following levels:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"info: General information about the broker's operation (e.g., client connections)."),(0,n.kt)("li",{parentName:"ul"},"notice: Significant events that are noteworthy but not errors."),(0,n.kt)("li",{parentName:"ul"},"warning: Potential issues that might need attention."),(0,n.kt)("li",{parentName:"ul"},"error: Critical issues that indicate a problem with the broker.")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"debug")," log level is not included by default. This log level includes MQTT packet level logging so is very verbose."),(0,n.kt)("h2",p({},{id:"log-destinations"}),"Log Destinations"),(0,n.kt)("p",null,"Mosquitto supports multiple log destinations to capture logs in different formats and locations. The log destination determines where the log messages are sent. You can configure these destinations in the mosquitto.conf file using the ",(0,n.kt)("inlineCode",{parentName:"p"},"log_dest")," directive."),(0,n.kt)("h3",p({},{id:"default-log-destination"}),"Default Log Destination"),(0,n.kt)("p",null,"The default log destination for Mosquitto is ",(0,n.kt)("inlineCode",{parentName:"p"},"stderr"),". This means that, by default, all log messages are sent to the terminal or console where the broker was started."),(0,n.kt)("h3",p({},{id:"configuring-log-destinations"}),"Configuring Log Destinations"),(0,n.kt)("p",null,"Below are examples of how to set log destinations in the mosquitto.conf file:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-conf"}),"log_dest file /var/log/mosquitto/mosquitto.log\nlog_dest syslog\nlog_dest stdout\n")),(0,n.kt)("p",null,"The available log destinations include:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"file ",(0,n.kt)("inlineCode",{parentName:"li"},"file-path"),": Write logs to a specified file."),(0,n.kt)("li",{parentName:"ul"},"stdout: Send logs to standard output."),(0,n.kt)("li",{parentName:"ul"},"stderr: Send logs to standard error (default)."),(0,n.kt)("li",{parentName:"ul"},"syslog: Use the system's syslog service."),(0,n.kt)("li",{parentName:"ul"},"topic: Publish log messages to MQTT topics. It is generally not recommended to use this destination.")),(0,n.kt)("h4",p({},{id:"log-rotation"}),"Log Rotation"),(0,n.kt)("p",null,"When using a log file as the log destination, it's important to implement log rotation to manage the size of the log files and prevent them from consuming too much disk space. Log rotation can be set up using tools available on most systems, such as logrotate."),(0,n.kt)("h5",p({},{id:"example-configuring-log-rotation-with-logrotate-on-linux"}),"Example Configuring Log Rotation with Logrotate on Linux"),(0,n.kt)("p",null,"To enable log rotation for Mosquitto logs on a typical Linux system using logrotate, follow these steps:\nCreate a Logrotate Configuration File Create a file named ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/logrotate.d/mosquitto")," with the following content:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"/var/log/mosquitto/mosquitto.log {\n    daily\n    rotate 7\n    compress\n    missingok\n    notifempty\n    create 640 mosquitto mosquitto\n    postrotate\n        /bin/kill -HUP `cat /var/run/mosquitto.pid`\n    endscript\n}\n")),(0,n.kt)("p",null,"Configuration Options Explained:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"daily: Rotates the log file daily."),(0,n.kt)("li",{parentName:"ul"},"rotate 7: Keeps 7 days of rotated log files."),(0,n.kt)("li",{parentName:"ul"},"compress: Compresses the rotated log files to save space."),(0,n.kt)("li",{parentName:"ul"},"missingok: Prevents errors if the log file is missing."),(0,n.kt)("li",{parentName:"ul"},"notifempty: Skips rotation if the log file is empty."),(0,n.kt)("li",{parentName:"ul"},"create 640 mosquitto mosquitto: Creates a new log file with specified permissions."),(0,n.kt)("li",{parentName:"ul"},"postrotate: Signals Mosquitto to reopen its log file after rotation.")),(0,n.kt)("p",null,"This setup ensures that Mosquitto's log files are rotated properly, preventing them from growing too large."),(0,n.kt)("h2",p({},{id:"log-access"}),"Log Access"),(0,n.kt)("h3",p({},{id:"accessing-logs-on-docker-compose"}),"Accessing Logs on Docker Compose"),(0,n.kt)("p",null,"Docker Compose logs provide valuable information about the status and behavior of containers running in a Docker Compose environment. To access Docker Compose logs for a Mosquitto MQTT Broker service, follow these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Open a terminal or command prompt."),(0,n.kt)("li",{parentName:"ol"},"Navigate to the directory containing your docker-compose.yml file."),(0,n.kt)("li",{parentName:"ol"},"Run the following command for all logs:")),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"docker compose logs\n")),(0,n.kt)("p",null,"Or to access logs for a specific service:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"docker compose logs <service_name>\n")),(0,n.kt)("p",null,"Replace <service_name> with the actual name of your service as defined in your docker-compose.yml file."),(0,n.kt)("h3",p({},{id:"accessing-logs-on-native-linux"}),"Accessing Logs on Native Linux"),(0,n.kt)("p",null,"On native Linux systems, Mosquitto logs can be accessed through various methods, depending on how the broker is set up."),(0,n.kt)("h4",p({},{id:"syslog"}),"Syslog"),(0,n.kt)("p",null,"If Mosquitto is configured to log to syslog, you can access the logs using the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"sudo tail -f /var/log/syslog\n")),(0,n.kt)("h4",p({},{id:"direct-file-logging"}),"Direct File Logging"),(0,n.kt)("p",null,"If Mosquitto is configured to log directly to a file (e.g., /var/log/mosquitto/mosquitto.log), you can view the logs with:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"sudo tail -f /var/log/mosquitto/mosquitto.log\n")),(0,n.kt)("h4",p({},{id:"using-journalctl-systemd-based-systems"}),"Using Journalctl (systemd-based systems)"),(0,n.kt)("p",null,"On systems that use systemd (such as Ubuntu), Mosquitto logs may be captured by the journald service. You can access these logs using:"),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"sudo journalctl -u mosquitto\n")),(0,n.kt)("p",null,"This command provides a real-time view of the Mosquitto broker's log entries."),(0,n.kt)("h3",p({},{id:"accessing-logs-on-windows"}),"Accessing Logs on Windows"),(0,n.kt)("p",null,"On Windows, Mosquitto logs can be accessed by following these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Default Logging: By default Mosquitto does no logging on Windows.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"File-Based Logging: If you've configured Mosquitto to log to a file in the mosquitto.conf, open the specified log file with a text editor such as Notepad or Notepad++. For example, if you set:")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Terminal Logging: Logs will be displayed directly in the terminal window if Mosquitto is run with the ",(0,n.kt)("inlineCode",{parentName:"p"},"-v")," option.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Event Logging: Logs will be written to the Windows Event Log if the ",(0,n.kt)("inlineCode",{parentName:"p"},"syslog")," destination is used."))),(0,n.kt)("pre",null,(0,n.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"log_dest file C:\\mosquitto\\logs\\mosquitto.log\n")),(0,n.kt)("p",null,"You can access the log file at C:\\mosquitto\\logs\\mosquitto.log."))}v.isMDXComponent=!0}}]);