"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[85142],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),v=r,d=m["".concat(s,".").concat(v)]||m[v]||p[v]||i;return n?o.createElement(d,a(a({ref:t},c),{},{components:n})):o.createElement(d,a({ref:t},c))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>v,default:()=>k,frontMatter:()=>m,metadata:()=>d,toc:()=>b});var o=n(3905),r=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&c(e,n,t[n]);return e};const m={id:"manual-overview",title:"Overview",sidebar_label:"Overview"},v=void 0,d={unversionedId:"Leftovers/Mosquitto Manual/manual-overview",id:"version-3.0/Leftovers/Mosquitto Manual/manual-overview",title:"Overview",description:"Mosquitto - an MQTT broker",source:"@site/mosquitto_versioned_docs/version-3.0/Leftovers/Mosquitto Manual/manual-overview.md",sourceDirName:"Leftovers/Mosquitto Manual",slug:"/Leftovers/Mosquitto Manual/manual-overview",permalink:"/mosquitto/3.0/Leftovers/Mosquitto Manual/manual-overview",draft:!1,tags:[],version:"3.0",frontMatter:{id:"manual-overview",title:"Overview",sidebar_label:"Overview"}},f={},b=[{value:"Mosquitto - an MQTT broker",id:"mosquitto---an-mqtt-broker",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Basic Monitoring",id:"basic-monitoring",level:2},{value:"Files",id:"files",level:2},{value:"Platform limitations",id:"platform-limitations",level:2},{value:"MQTT Compliance",id:"mqtt-compliance",level:2},{value:"v.3.1",id:"v31",level:3},{value:"v.3.1.1",id:"v311",level:3},{value:"v.5.0",id:"v50",level:3}],h={toc:b};function k(e){var t,n=e,{components:r}=n,c=((e,t)=>{var n={};for(var o in e)s.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&l)for(var o of l(e))t.indexOf(o)<0&&u.call(e,o)&&(n[o]=e[o]);return n})(n,["components"]);return(0,o.kt)("wrapper",(t=p(p({},h),c),i(t,a({components:r,mdxType:"MDXLayout"}))),(0,o.kt)("h2",p({},{id:"mosquitto---an-mqtt-broker"}),"Mosquitto - an MQTT broker"),(0,o.kt)("p",null,"Mosquitto is an open-source lightweight message broker to enable communication between sensors, smartphones, web apps, and other devices within an IoT architecture. Pro Edition for Mosquitto MQTT broker is a more powerful and fully supported version of Mosquitto tailored for commercial use, offering complete compliance with MQTT versions 3 and 5."),(0,o.kt)("p",null,"In this documentation a lot of basic configuration and underlying principles are described.\nMost of this knowledge is not needed while using the Mosquitto UI called Mosquitto Management Center. "),(0,o.kt)("h2",p({},{id:"configuration"}),"Configuration"),(0,o.kt)("p",null,"The broker can be configured using a configuration file."),(0,o.kt)("h2",p({},{id:"basic-monitoring"}),"Basic Monitoring"),(0,o.kt)("p",null,"System topics keep track of system relevant monitoring parameter. See here (TODO) a full list."),(0,o.kt)("h2",p({},{id:"files"}),"Files"),(0,o.kt)("p",null,"Files which are being used by the broker:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mosquitto.conf"))),(0,o.kt)("p",null,"Configuration file. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mosquitto.db"))),(0,o.kt)("p",null,"Persistent message data storage location if persist enabled. ",(0,o.kt)("inlineCode",{parentName:"p"},"autosave_interval seconds"),"sets the number of seconds that mosquitto will wait between each time it saves the in-memory database to disk. If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", the in-memory database will only be saved when mosquitto exits or when receiving the SIGUSR1 signal. Note that this setting only has an effect if persistence is enabled. Defaults to 1800 seconds (30 minutes).\nThis option applies globally.\nReloaded on reload signal."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dynamic-security.json"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"streams.json"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"license.lic"))),(0,o.kt)("p",null,"License file for Pro Mosquitto features from Cedalo Gmbh."),(0,o.kt)("h2",p({},{id:"platform-limitations"}),"Platform limitations"),(0,o.kt)("p",null,"Some versions of Windows have limitations on the number of concurrent connections due to the Windows API being used. In modern versions of Windows, e.g. Windows 10 or Windows Server 2019, this is approximately 8192 connections. In earlier versions of Windows, this limit is 2048 connections."),(0,o.kt)("h2",p({},{id:"mqtt-compliance"}),"MQTT Compliance"),(0,o.kt)("p",null,"The Mosquitto MQTT is MQTT compliant:"),(0,o.kt)("h3",p({},{id:"v31"}),"v.3.1"),(0,o.kt)("p",null,"MQTT Version 3.1:\n",(0,o.kt)("a",p({parentName:"p"},{href:"https://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html"}),"https://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html")),(0,o.kt)("h3",p({},{id:"v311"}),"v.3.1.1"),(0,o.kt)("p",null,"MQTT Version 3.1.1:\n",(0,o.kt)("a",p({parentName:"p"},{href:"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html"}),"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html")),(0,o.kt)("h3",p({},{id:"v50"}),"v.5.0"),(0,o.kt)("p",null,"The MQTT version 5.0 is the next development step in the evolution of MQTT.\nLearn about the ",(0,o.kt)("a",p({parentName:"p"},{href:"https://www.eclipse.org/org/foundation/"}),"Eclipse Foundation"),".\nMajor bugs have been erased. For example in many cases errors led to disconnecting the client from the broker. With v.5.0 negative acknowledgements help to work out ways to solve the problem."))}k.isMDXComponent=!0}}]);