"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[19002],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>m});var r=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,s=function(n,e){if(null==n)return{};var t,r,s={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var a=r.createContext({}),p=function(n){var e=r.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=p(n.components);return r.createElement(a.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,s=n.mdxType,o=n.originalType,a=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),c=p(t),m=s,k=c["".concat(a,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(k,i(i({ref:e},u),{},{components:t})):r.createElement(k,i({ref:e},u))}));function m(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var a in e)hasOwnProperty.call(e,a)&&(l[a]=e[a]);l.originalType=n,l.mdxType="string"==typeof n?n:s,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},26455:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>g,contentTitle:()=>m,default:()=>b,frontMatter:()=>c,metadata:()=>k,toc:()=>h});var r=t(3905),s=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(n,e,t)=>e in n?s(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,d=(n,e)=>{for(var t in e||(e={}))a.call(e,t)&&u(n,t,e[t]);if(l)for(var t of l(e))p.call(e,t)&&u(n,t,e[t]);return n};const c={id:"restapi-monitoring",title:"Monitoring",sidebar_label:"Monitoring"},m=void 0,k={unversionedId:"api/restapis/restapi-monitoring",id:"version-2.9/api/restapis/restapi-monitoring",title:"Monitoring",description:"Monitoring API",source:"@site/mosquitto_versioned_docs/version-2.9/api/restapis/monitoring.md",sourceDirName:"api/restapis",slug:"/api/restapis/restapi-monitoring",permalink:"/mosquitto/api/restapis/restapi-monitoring",draft:!1,tags:[],version:"2.9",frontMatter:{id:"restapi-monitoring",title:"Monitoring",sidebar_label:"Monitoring"},sidebar:"someSidebar",previous:{title:"Dynamic Security",permalink:"/mosquitto/api/restapis/restapi-dynamic-security"},next:{title:"System Status",permalink:"/mosquitto/api/restapis/restapi-system-status"}},g={},h=[{value:"Available API Paths",id:"available-api-paths",level:2},{value:"Path: /api/monitoring/brokers",id:"path-apimonitoringbrokers",level:2},{value:"Methods",id:"methods",level:3},{value:"GET",id:"get",level:4},{value:"Path: /api/monitoring/brokers/{brokerId}",id:"path-apimonitoringbrokersbrokerid",level:2},{value:"Methods",id:"methods-1",level:3},{value:"GET",id:"get-1",level:4},{value:"Path: /api/monitoring/clusters",id:"path-apimonitoringclusters",level:2},{value:"Methods",id:"methods-2",level:3},{value:"GET",id:"get-2",level:4},{value:"Path: /api/monitoring/clusters/{clusterName}",id:"path-apimonitoringclustersclustername",level:2},{value:"Methods",id:"methods-3",level:3},{value:"GET",id:"get-3",level:4}],y={toc:h};function b(n){var e,t=n,{components:s}=t,u=((n,e)=>{var t={};for(var r in n)a.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&l)for(var r of l(n))e.indexOf(r)<0&&p.call(n,r)&&(t[r]=n[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(e=d(d({},y),u),o(e,i({components:s,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Monitoring API"),(0,r.kt)("h2",d({},{id:"available-api-paths"}),"Available API Paths"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#apimonitoringbrokers"}),"/api/monitoring/brokers"),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#apimonitoringbrokersbrokerid"}),"/api/monitoring/brokers/{brokerId}"),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#apimonitoringclusters"}),"/api/monitoring/clusters"),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#apimonitoringclustersclustername"}),"/api/monitoring/clusters/{clusterName}"),(0,r.kt)("br",null))),(0,r.kt)("hr",null),(0,r.kt)("h2",d({},{id:"path-apimonitoringbrokers"}),"Path: /api/monitoring/brokers"),(0,r.kt)("h3",d({},{id:"methods"}),"Methods"),(0,r.kt)("h4",d({},{id:"get"}),"GET"),(0,r.kt)("p",null,"Returns the monitoring overview of all the brokers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null," Contains the overview information of all brokers. Each broker provides additional metrics information like the number of clients connected, the number of subscriptions and the number of messages received and sent "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "total": {\n    "description": "Total number of brokers. Length of the \\"brokers\\" property array",\n    "type": "integer",\n    "format": "int32"\n  },\n  "brokers": {\n    "type": "array",\n    "items": {\n      "$ref": "#/components/schemas/BrokerInfo"\n    }\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'{\n  "total": 2,\n  "brokers": [\n    {\n      "id": "mosquitto1",\n      "name": "Mosquitto 1 Test Instance",\n      "status": {\n        "timestamp": 1234567,\n        "connected": false,\n        "error": {\n          "errno": -61,\n          "code": "ECONNREFUSED",\n          "syscall": "connect",\n          "address": "127.0.0.1",\n          "port": 1891\n        }\n      }\n    },\n    {\n      "id": "mosquitto2",\n      "name": "Mosquitto 2 Test Instance",\n      "status": {\n        "timestamp": 1234567,\n        "connected": true\n      },\n      "metrics": {\n        "version": "mosquitto version 2.1.0",\n        "clients": {\n          "total": "3",\n          "active": "1",\n          "connected": "1"\n        },\n        "load": {\n          "publish": {\n            "sent": {\n              "1min": "89.24",\n              "5min": "37.59",\n              "15min": "26.32"\n            }\n          },\n          "sockets": {\n            "15min": "0.87",\n            "1min": "1.96",\n            "5min": "0.74"\n          },\n          "connections": {\n            "15min": "0.87",\n            "1min": "1.96",\n            "5min": "0.74"\n          },\n          "messages": {\n            "received": {\n              "1min": "13.69",\n              "5min": "5.34",\n              "15min": "3.45"\n            },\n            "sent": {\n              "1min": "106.56",\n              "5min": "45.82",\n              "15min": "33.12"\n            }\n          },\n          "bytes": {\n            "received": {\n              "1min": "406.86",\n              "5min": "154.90",\n              "15min": "124.23"\n            },\n            "sent": {\n              "1min": "3418.76",\n              "5min": "1371.17",\n              "15min": "885.65"\n            }\n          }\n        },\n        "messages": {\n          "stored": "37",\n          "received": "195425",\n          "sent": "1207818"\n        },\n        "store": {\n          "messages": {\n            "count": "37",\n            "bytes": "200"\n          }\n        },\n        "subscriptions": {\n          "count": "7"\n        },\n        "retained messages": {\n          "count": "37"\n        },\n        "publish": {\n          "messages": {\n            "sent": "1012830"\n          },\n          "bytes": {\n            "sent": "5919457"\n          }\n        },\n        "bytes": {\n          "received": "17444986",\n          "sent": "43697617"\n        },\n        "uptime": "5367950 seconds"\n      }\n    }\n  ]\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 403 "),(0,r.kt)("td",null," User does not have enough permissions to access the resource "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_ALLOWED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Not allowed"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 410 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker does not exist",\n      "Cluster doesn\'t exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," An internal server error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Something went wrong. Check that cluster-management plugin is enabled",\n      "An internal server error occurred"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null),(0,r.kt)("h2",d({},{id:"path-apimonitoringbrokersbrokerid"}),"Path: /api/monitoring/brokers/{brokerId}"),(0,r.kt)("h3",d({},{id:"methods-1"}),"Methods"),(0,r.kt)("h4",d({},{id:"get-1"}),"GET"),(0,r.kt)("p",null,"Returns the monitoring overview of a signle broker"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Location"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Required"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"brokerId")),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"path"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"string"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"true"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Id of the broker which the information is requestsed for")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null," Contains detailed monitoring information on one single broker "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "id": {\n    "type": "string",\n    "description": "ID of the broker. Same as brokerId"\n  },\n  "name": {\n    "type": "string",\n    "description": "Text name of the broker"\n  },\n  "status": {\n    "type": "object",\n    "required": [\n      "timestamp",\n      "connected"\n    ],\n    "properties": {\n      "timestamp": {\n        "type": "integer",\n        "format": "int32",\n        "description": "Time when broker was connected to MMC"\n      },\n      "connected": {\n        "type": "boolean",\n        "description": "Indicates if the broker is connected"\n      },\n      "error": {\n        "type": "object",\n        "required": [\n          "code"\n        ],\n        "properties": {\n          "errno": {\n            "type": "integer",\n            "format": "int32"\n          },\n          "code": {\n            "type": "string",\n            "description": "Error name"\n          },\n          "syscall": {\n            "type": "string",\n            "description": "Command that failed"\n          },\n          "address": {\n            "type": "string",\n            "description": "IP address of the broker"\n          },\n          "port": {\n            "type": "integer",\n            "format": "int32",\n            "description": "Port of the broker connection"\n          }\n        },\n        "description": "Specifies connection error if any (present only in case of an error)"\n      }\n    }\n  },\n  "metrics": {\n    "type": "object",\n    "properties": {\n      "version": {\n        "type": "string",\n        "description": "Version of the broker. Static"\n      },\n      "clients": {\n        "type": "object",\n        "properties": {\n          "total": {\n            "type": "string",\n            "description": "Total number of active and inactive clients currently connected and registered on the broker"\n          },\n          "active": {\n            "type": "string",\n            "description": "Number of currently connected clients (deprecated)"\n          },\n          "connected": {\n            "type": "string",\n            "description": "Number of currently connected clients"\n          }\n        }\n      },\n      "load": {\n        "type": "object",\n        "description": "Moving averages. Contains differnt events with 1min, 5min or 15min averages. The values represent the number of events done in 1 minute, averaged over 1, 5 or 15 minutes",\n        "properties": {\n          "publish": {\n            "type": "object",\n            "properties": {\n              "sent": {\n                "type": "object",\n                "properties": {\n                  "1min": {\n                    "type": "string"\n                  },\n                  "5min": {\n                    "type": "string"\n                  },\n                  "15min": {\n                    "type": "string"\n                  }\n                },\n                "description": "The moving average of the number of publish messages sent by the broker over different time intervals"\n              }\n            }\n          },\n          "sockets": {\n            "type": "object",\n            "properties": {\n              "15min": {\n                "type": "string"\n              },\n              "1min": {\n                "type": "string"\n              },\n              "5min": {\n                "type": "string"\n              }\n            },\n            "description": "The moving average of the number of socket connections opened to the broker over different time intervals"\n          },\n          "connections": {\n            "type": "object",\n            "properties": {\n              "15min": {\n                "type": "string"\n              },\n              "1min": {\n                "type": "string"\n              },\n              "5min": {\n                "type": "string"\n              }\n            },\n            "description": "The moving average of the number of CONNECT packets received by the broker over different time intervals"\n          },\n          "messages": {\n            "type": "object",\n            "properties": {\n              "received": {\n                "type": "object",\n                "properties": {\n                  "1min": {\n                    "type": "string"\n                  },\n                  "5min": {\n                    "type": "string"\n                  },\n                  "15min": {\n                    "type": "string"\n                  }\n                },\n                "description": "The moving average of the number of all types of MQTT messages received by the broker over different time intervals"\n              },\n              "sent": {\n                "type": "object",\n                "properties": {\n                  "1min": {\n                    "type": "string"\n                  },\n                  "5min": {\n                    "type": "string"\n                  },\n                  "15min": {\n                    "type": "string"\n                  }\n                },\n                "description": "The moving average of the number of all types of MQTT messages sent by the broker over different time intervals"\n              }\n            }\n          },\n          "bytes": {\n            "type": "object",\n            "properties": {\n              "received": {\n                "type": "object",\n                "properties": {\n                  "1min": {\n                    "type": "string"\n                  },\n                  "5min": {\n                    "type": "string"\n                  },\n                  "15min": {\n                    "type": "string"\n                  }\n                },\n                "description": "The moving average of the number of bytes received by the broker over different time intervals"\n              },\n              "sent": {\n                "type": "object",\n                "properties": {\n                  "1min": {\n                    "type": "string"\n                  },\n                  "5min": {\n                    "type": "string"\n                  },\n                  "15min": {\n                    "type": "string"\n                  }\n                },\n                "description": "The moving average of the number of bytes sent by the broker over different time intervals"\n              }\n            }\n          }\n        }\n      },\n      "messages": {\n        "type": "object",\n        "properties": {\n          "stored": {\n            "type": "string",\n            "description": "The number of messages currently held in the message store. This includes retained messages and messages queued for durable clients"\n          },\n          "received": {\n            "type": "string",\n            "description": "The total number of messages of any type received since the broker started"\n          },\n          "sent": {\n            "type": "string",\n            "description": "The total number of messages of any type sent since the broker started"\n          }\n        }\n      },\n      "store": {\n        "type": "object",\n        "properties": {\n          "messages": {\n            "type": "object",\n            "properties": {\n              "count": {\n                "type": "string",\n                "description": "The number of messages currently held in the message store. This includes retained messages and messages queued for durable clients"\n              },\n              "bytes": {\n                "type": "string",\n                "description": "The number of bytes currently held by message payloads in the message store. This includes retained messages and messages queued for durable clients"\n              }\n            }\n          }\n        }\n      },\n      "subscriptions": {\n        "type": "object",\n        "properties": {\n          "count": {\n            "type": "string",\n            "description": "The total number of subscriptions active on the broker"\n          }\n        }\n      },\n      "retained messages": {\n        "type": "object",\n        "properties": {\n          "count": {\n            "type": "string",\n            "description": "The total number of retained messages active on the broker"\n          }\n        }\n      },\n      "publish": {\n        "type": "object",\n        "properties": {\n          "messages": {\n            "type": "object",\n            "properties": {\n              "sent": {\n                "type": "string",\n                "description": "The total number of PUBLISH messages sent since the broker started"\n              }\n            }\n          },\n          "bytes": {\n            "type": "object",\n            "properties": {\n              "sent": {\n                "type": "string",\n                "description": "The total number of bytes of PUBLISH messages sent since the broker started"\n              }\n            }\n          }\n        }\n      },\n      "bytes": {\n        "type": "object",\n        "properties": {\n          "received": {\n            "type": "string",\n            "description": "The total number of bytes received since the broker started"\n          },\n          "sent": {\n            "type": "string",\n            "description": "The total number of bytes sent since the broker started"\n          }\n        }\n      },\n      "uptime": {\n        "type": "string",\n        "description": "Uptime of the broker in seconds"\n      }\n    }\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'{\n  "id": "mosquitto2",\n  "name": "Mosquitto 2 Test Instance",\n  "status": {\n    "timestamp": 1234567,\n    "connected": true\n  },\n  "metrics": {\n    "version": "mosquitto version 2.1.0",\n    "clients": {\n      "total": "3",\n      "active": "1",\n      "connected": "1"\n    },\n    "load": {\n      "publish": {\n        "sent": {\n          "1min": "89.24",\n          "5min": "37.59",\n          "15min": "26.32"\n        }\n      },\n      "sockets": {\n        "15min": "0.87",\n        "1min": "1.96",\n        "5min": "0.74"\n      },\n      "connections": {\n        "15min": "0.87",\n        "1min": "1.96",\n        "5min": "0.74"\n      },\n      "messages": {\n        "received": {\n          "1min": "13.69",\n          "5min": "5.34",\n          "15min": "3.45"\n        },\n        "sent": {\n          "1min": "106.56",\n          "5min": "45.82",\n          "15min": "33.12"\n        }\n      },\n      "bytes": {\n        "received": {\n          "1min": "406.86",\n          "5min": "154.90",\n          "15min": "124.23"\n        },\n        "sent": {\n          "1min": "3418.76",\n          "5min": "1371.17",\n          "15min": "885.65"\n        }\n      }\n    },\n    "messages": {\n      "stored": "37",\n      "received": "195425",\n      "sent": "1207818"\n    },\n    "store": {\n      "messages": {\n        "count": "37",\n        "bytes": "200"\n      }\n    },\n    "subscriptions": {\n      "count": "7"\n    },\n    "retained messages": {\n      "count": "37"\n    },\n    "publish": {\n      "messages": {\n        "sent": "1012830"\n      },\n      "bytes": {\n        "sent": "5919457"\n      }\n    },\n    "bytes": {\n      "received": "17444986",\n      "sent": "43697617"\n    },\n    "uptime": "5367950 seconds"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 403 "),(0,r.kt)("td",null," User does not have enough permissions to access the resource "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_ALLOWED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Not allowed"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 410 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker does not exist",\n      "Cluster doesn\'t exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," An internal server error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Something went wrong. Check that cluster-management plugin is enabled",\n      "An internal server error occurred"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null),(0,r.kt)("h2",d({},{id:"path-apimonitoringclusters"}),"Path: /api/monitoring/clusters"),(0,r.kt)("h3",d({},{id:"methods-2"}),"Methods"),(0,r.kt)("h4",d({},{id:"get-2"}),"GET"),(0,r.kt)("p",null,"Returns statuses of all the clusters"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null," Contains a list of all available clusters plus an additional counter. Each cluster information contains the name, the description and a status of the cluster "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "total": {\n    "type": "integer",\n    "format": "int32",\n    "description": "Total number of clusters returned. Length of \\"clusters\\" property array"\n  },\n  "clusters": {\n    "type": "array",\n    "items": {\n      "$ref": "#/components/schemas/ClusterInfo"\n    }\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'{\n  "total": 3,\n  "clusters": [\n    {\n      "name": "mosquittotests1",\n      "description": "Mosquitto Test Cluster 1",\n      "status": {\n        "clusterstate": "active"\n      }\n    },\n    {\n      "name": "mosquittotests2",\n      "description": "Mosquitto Test Cluster 2",\n      "status": {\n        "clusterstate": "degraded"\n      }\n    },\n    {\n      "name": "mosquittotests3",\n      "description": "Mosquitto Test Cluster 3",\n      "status": {\n        "clusterstate": "inactive"\n      }\n    }\n  ]\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 403 "),(0,r.kt)("td",null," User does not have enough permissions to access the resource "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_ALLOWED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Not allowed"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 410 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker does not exist",\n      "Cluster doesn\'t exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," An internal server error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Something went wrong. Check that cluster-management plugin is enabled",\n      "An internal server error occurred"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null),(0,r.kt)("h2",d({},{id:"path-apimonitoringclustersclustername"}),"Path: /api/monitoring/clusters/{clusterName}"),(0,r.kt)("h3",d({},{id:"methods-3"}),"Methods"),(0,r.kt)("h4",d({},{id:"get-3"}),"GET"),(0,r.kt)("p",null,"Returns status of a single cluster"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Location"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Required"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"clusterName")),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"path"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"string"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"true"),(0,r.kt)("td",d({parentName:"tr"},{align:null}),"Name of the cluster which the information is requestsed for")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Responses")),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 200 "),(0,r.kt)("td",null,' Contains the detailed information of one single cluster. For every cluster the same information is included as in the "Clusters" endpoint plus additional detail information, i.e., specific information about each node in the cluster '),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "name": {\n    "type": "string",\n    "description": "Name of the cluster"\n  },\n  "description": {\n    "type": "string",\n    "description": "Description of the cluster"\n  },\n  "status": {\n    "type": "object",\n    "properties": {\n      "clusterstate": {\n        "type": "string",\n        "description": "active - cluster is active and working; degraded - cluster is active, but not all nodes are healthy; inactive - cluster is inactive",\n        "enum": [\n          "active",\n          "degraded",\n          "inactive"\n        ]\n      }\n    }\n  },\n  "details": {\n    "type": "object",\n    "properties": {\n      "nodes": {\n        "type": "array",\n        "description": "Represents nodes/brokers which form a cluster",\n        "items": {\n          "type": "object",\n          "properties": {\n            "address": {\n              "type": "string",\n              "description": "Address of the node"\n            },\n            "port": {\n              "type": "integer",\n              "format": "int32",\n              "description": "Port used to connect to the node"\n            },\n            "nodeid": {\n              "type": "integer",\n              "format": "int32",\n              "description": "ID of the node. Node is an abstraction on top of the broker used in cluster"\n            },\n            "broker": {\n              "type": "string",\n              "description": "ID of the broker. The same as brokerId"\n            },\n            "leader": {\n              "type": "boolean",\n              "description": "Indicates if node is a "\n            }\n          }\n        }\n      }\n    }\n  }\n} \n')))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'{\n  "name": "mosquittotests1",\n  "description": "Mosquitto Test Cluster 1",\n  "status": {\n    "clusterstate": "active"\n  },\n  "details": {\n    "nodes": [\n      {\n        "address": "172.20.1.1",\n        "port": 7000,\n        "nodeid": 1,\n        "broker": "mosquitto1",\n        "leader": true\n      },\n      {\n        "address": "172.20.1.2",\n        "port": 7000,\n        "nodeid": 2,\n        "broker": "mosquitto2",\n        "leader": false\n      },\n      {\n        "address": "172.20.1.3",\n        "port": 7000,\n        "nodeid": 2,\n        "broker": "mosquitto3",\n        "leader": false\n      }\n    ]\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",null),(0,r.kt)("col",{style:{minWidth:"250px"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null," Status "),(0,r.kt)("td",null," Description "),(0,r.kt)("td",null," Response Content or Scheme")),(0,r.kt)("tr",null,(0,r.kt)("td",null," 401 "),(0,r.kt)("td",null," Access to resource is denied. User not authenticated (logged in) or session expired "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "UNAUTHORIZED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Unauthorized"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 403 "),(0,r.kt)("td",null," User does not have enough permissions to access the resource "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_ALLOWED"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Not allowed"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 404 "),(0,r.kt)("td",null," Plugin is not enabled or not found "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "NOT_FOUND"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Plugin not found"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 410 "),(0,r.kt)("td",null," Requested entity does not exists or was removed "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "GONE"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Broker does not exist",\n      "Cluster doesn\'t exist"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))),(0,r.kt)("tr",null,(0,r.kt)("td",null," 500 "),(0,r.kt)("td",null," An internal server error has occured "),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n  "code": {\n    "type": "string",\n    "enum": [\n      "SOMETHING_WRONG",\n      "INTERNAL_ERROR"\n    ],\n    "description": "Name of the error"\n  },\n  "message": {\n    "type": "string",\n    "enum": [\n      "Something went wrong. Check that cluster-management plugin is enabled",\n      "An internal server error occurred"\n    ],\n    "description": "Message of the error"\n  }\n} \n')))))),(0,r.kt)("hr",null))}b.isMDXComponent=!0}}]);