"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[98054],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=o,h=c["".concat(i,".").concat(d)]||c[d]||m[d]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},96509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>d,default:()=>b,frontMatter:()=>c,metadata:()=>h,toc:()=>g});var a=n(3905),o=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&p(e,n,t[n]);if(s)for(var n of s(t))u.call(t,n)&&p(e,n,t[n]);return e};const c={id:"high-availability-autoscaling",title:"High Availability Autoscaling",sidebar_label:"High Availability Autoscaling"},d=void 0,h={unversionedId:"kubernetes/high-availability-autoscaling",id:"version-2.7/kubernetes/high-availability-autoscaling",title:"High Availability Autoscaling",description:"To set up a multi-node-HA Mosquitto broker and Management Center with autoscaling using Helm charts, you'll first need a Kubernetes environment. For deploying a full fledged kubernetes cluster on multiple hosts, Kubeadm is an excellent choice. Kubeadm is a command-line tool in the Kubernetes ecosystem designed to facilitate the process of setting up and bootstrapping a Kubernetes cluster.(Discussed in Introduction section).",source:"@site/mosquitto_versioned_docs/version-2.7/kubernetes/high-availability-autoscaling.md",sourceDirName:"kubernetes",slug:"/kubernetes/high-availability-autoscaling",permalink:"/mosquitto/kubernetes/high-availability-autoscaling",draft:!1,tags:[],version:"2.7",frontMatter:{id:"high-availability-autoscaling",title:"High Availability Autoscaling",sidebar_label:"High Availability Autoscaling"},sidebar:"someSidebar",previous:{title:"High Availability",permalink:"/mosquitto/kubernetes/high-availability"},next:{title:"Release Notes",permalink:"/mosquitto/release-notes"}},k={},g=[{value:"Why Auto-scaling ?",id:"why-auto-scaling-",level:3},{value:"How does Auto-scaling works?",id:"how-does-auto-scaling-works",level:3},{value:"Installation",id:"installation",level:2},{value:"Kubernetes Cluster Setup",id:"kubernetes-cluster-setup",level:2},{value:"Further Useful Commands:",id:"further-useful-commands",level:3},{value:"Usage",id:"usage",level:2}],f={toc:g};function b(e){var t,n=e,{components:o}=n,p=((e,t)=>{var n={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=m(m({},f),p),r(t,l({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"To set up a multi-node-HA Mosquitto broker and Management Center with autoscaling using Helm charts, you'll first need a Kubernetes environment. For deploying a full fledged kubernetes cluster on multiple hosts, Kubeadm is an excellent choice. Kubeadm is a command-line tool in the Kubernetes ecosystem designed to facilitate the process of setting up and bootstrapping a Kubernetes cluster.(Discussed in Introduction section).\nThis setup would deploy a 3 Mosquitto broker as a statefulsets. Also, a Management-Center pod and HA-proxy pod as a deployment entity. All the deployment would be deployed on multiple hosts. This deployment by default uses a NFS server to mount volumes. You would need to setup the NFS server before using this deployment."),(0,a.kt)("h3",m({},{id:"why-auto-scaling-"}),"Why Auto-scaling ?"),(0,a.kt)("p",null,"When we deploy the Kubernetes setup using the above procedure, by default we start with 3 Mosquitto Pods, 1 MMC and 1 HA. However, we might run into problems if we have a lot of incoming requests and connections  causing overload at Mosquitto brokers, especially in DynSec mode. We would want the setup to adjust based on the load to avoid crashes and maintain system requirements and at the same time avoid any need of human monitoring and intervention."),(0,a.kt)("h3",m({},{id:"how-does-auto-scaling-works"}),"How does Auto-scaling works?"),(0,a.kt)("p",null,"On deploying the above setup we also deploy certain other helper pods that takes care of Auto-scaling. For eg:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Metrics Server: This server pod monitors metrics of the deployed applications pods. Metrics could be CPU, Memory etc."),(0,a.kt)("li",{parentName:"ul"},"Horizontal Pod Scaler (HPA): HPA automatically scales up or down the pods based on the threshold. For eg: If the CPU threshold is set to 60%, and of overall CPU consumption across all pods reaches 60%, HPA scales up the Mosquitto pods."),(0,a.kt)("li",{parentName:"ul"},"Cluster-operator: This pod keeps tracks of pod scaling and triggers the requests to MQTT APIs so that newly scaled pods gets added to internal cluster of Mosquitto brokers. For eg If the current number of Mosquitto brokers are 3 and it scales to 5, then cluster-operator would send a ",(0,a.kt)("inlineCode",{parentName:"li"},"addNode")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"joinCluster")," MQTT request for 2 added nodes. If pod is to be scaled down, then the cluster-operator would send ",(0,a.kt)("inlineCode",{parentName:"li"},"removeNode")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"leaveCluster")," MQTT API requests.\n",(0,a.kt)("strong",{parentName:"li"},"Recommended Setup"))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1 Control-plane node, 3 worker nodes and a NFS Server ")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HA-PROXY Configurations"),"\nHA-proxy need to be configured accordingly for the kubernetes setup. For server m1, m2 and m3 needs to be configured in this case. You would need to configure more server based on your requirements and based on the number mounts you have created on NFS. Instead of using docker IP we would use DNS names to address the pods. For eg\n",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0.mosquitto.multinode.svc.cluster.local"),". Here ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-1"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-2")," are the name of individual mosquitto pods running as statefulsets. Each new pod would increase its pod-ordinal by 1. Rest can be defined as follows\n",(0,a.kt)("inlineCode",{parentName:"p"},"<pod-name>.<name-of-the-statefulset>.<namespace>.svc.cluster.local")," "),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"global\n    daemon\n    maxconn 10000\n    resolvers kubernetes\n        nameserver dns1 10.96.0.10:53   # Replace with your Kube DNS IP\n        resolve_retries 3\n        timeout retry 1s\n        hold valid 10s\n\nfrontend mqtt_frontend\n    bind *:1883\n    mode tcp\n    default_backend mqtt_backend\n    timeout client 10m\n\nbackend mqtt_backend\n    timeout connect 5000\n    timeout server 10m\n    mode tcp\n    option redispatch\n    server m1 mosquitto-0.mosquitto.multinode.svc.cluster.local:1883 check resolvers kubernetes on-marked-down shutdown-sessions\n    server m2 mosquitto-1.mosquitto.multinode.svc.cluster.local:1883 check resolvers kubernetes on-marked-down shutdown-sessions\n    server m3 mosquitto-2.mosquitto.multinode.svc.cluster.local:1883 check resolvers kubernetes on-marked-down shutdown-sessions\n    server m4 mosquitto-3.mosquitto.multinode.svc.cluster.local:1883 check resolvers kubernetes on-marked-down shutdown-sessions\n    server m5 mosquitto-4.mosquitto.multinode.svc.cluster.local:1883 check resolvers kubernetes on-marked-down shutdown-sessions\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"10.96.0.10")," is the NFS server IP. We add nameserver so that the HA-proxy do not crash when some of the servers are not available as in autoscaling the pods server may scale up and down."),(0,a.kt)("h2",m({},{id:"installation"}),"Installation"),(0,a.kt)("p",null,"Prerequisites: Kubernetes Cluster should be up and running.\nFollow these steps to install the multi-node Mosquitto broker setup:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup NFS Server")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Install necessary dependencies\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get update"),(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get install nfs-kernel-server")),(0,a.kt)("li",{parentName:"ul"},"Configure exports directory(/etc/exports). For eg (mosquitto1 entry):\n",(0,a.kt)("inlineCode",{parentName:"li"},"/home/<user>/setups/pro/mosquitto/mosquitto-2.6-mmc-2.6-cluster/mosquitto1/data *(rw,sync,no_root_squash,no_subtree_check)")),(0,a.kt)("li",{parentName:"ul"},"Similarly add entries for mosquitto2, mosquitto3 and so on. "),(0,a.kt)("li",{parentName:"ul"},"Restart the kernel-server\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo systemctl restart nfs-kernel-server")),(0,a.kt)("li",{parentName:"ul"},"Install neccessary nfs-common on other nodes so that they act as nfs-clients\n",(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt-get install nfs-common")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Clone the Setup Repository:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Clone the repository to your local machine."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Change Directory:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Navigate to the project directory (i.e multi-node-multi-host)."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Deploy your Kubernetes Setup. "))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You are required to have a kubernetes cluster setup proceeding with installation. You can setup your kubernetes setup on your own or you can take reference from our installation scripts (Section Kubernetes Cluster Setup). ")),(0,a.kt)("ol",m({},{start:6}),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Install Helm Chart:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Use the following ",(0,a.kt)("inlineCode",{parentName:"li"},"helm install")," command to deploy the setup to your Kubernetes cluster. Replace ",(0,a.kt)("inlineCode",{parentName:"li"},"<release-name>")," with the desired name for your Helm release and ",(0,a.kt)("inlineCode",{parentName:"li"},"<namespace>")," with your chosen Kubernetes namespace:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"helm install <release-name>  mosquitto-multi-node-multi-host-autoscale-0.1.0.tgz  --set repoPath=$HOME -n <namespace>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"repoPath"),": Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"repoPath")," flag to the path where this repo was cloned. The above command expects it to be at ",(0,a.kt)("inlineCode",{parentName:"li"},"$HOME"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace"),": Set it to the namespace of your deployment."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": Ensure that you have a running Kubernetes cluster set up to run this deployment. We recommend setting up the kubernetes cluster using Kubeadm. You can also use our installation script to set up Kubernetesi cluster. To setup the kubernetes cluster, follow the instructions in Kubernetes Cluster Setup."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Note"),": If you want to deploy the setup in a different namespace, make sure to pass a seperate flag ",(0,a.kt)("inlineCode",{parentName:"li"},"--set namespace=<your-custom-namespace>")," along with the helm installation command")))),(0,a.kt)("h2",m({},{id:"kubernetes-cluster-setup"}),"Kubernetes Cluster Setup"),(0,a.kt)("p",null,"If you need to set up a Kubernetes cluster, you can use our installation script. If you plan on using your own cluster, you can skip to step 4. Follow these steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Choose Architecture Folder:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Depending on your host architecture, navigate to the corresponding folder:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"For Debian AMD64:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cd debian_amd64.sh\n"))))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Common Dependencies:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Run the following command to install the necessary dependencies on all the nodes(including control-plane node):",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"bash common-installation-debian.sh\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Master Dependencies:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Run the following command to install the necessary dependencies on the master node:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"bash  master-installation-debian.sh\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup Kubernetes: IMPORTANT")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Execute the setup script to configure Kubernetes:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"bash setup.sh\n")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Follow the instructions of this file. This would create configmap for mosquitto.conf, create configmaps for your license file. Make sure you have placed your license file in the required folder before running this script."),(0,a.kt)("li",{parentName:"ul"},"The default namespace for installation is ",(0,a.kt)("inlineCode",{parentName:"li"},"multinode"),". You can change the namespace through the setup script."))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Setup Kubernetes Secrets:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This step is required for kubernetes to pull required docker images from the registry. You can set the secrets using the following command:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"kubectl create secret docker-registry  mosquitto-pro-secret  --docker-server=registry.cedalo.com --docker-username=<username> --docker-password=<password>  --docker-email=<email> -n <namespace>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"namespace"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"namespace")," should be the same as the one you selected or enetered while running the ",(0,a.kt)("inlineCode",{parentName:"li"},"setup.sh"),"."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can monitor the running pods using the following command:\n",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods -o wide -n <namespace>"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open Applications"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"http://0.0.0.0:31021"}),"http://0.0.0.0:31021")," (MMC)"),(0,a.kt)("li",{parentName:"ul"},"IP: ip-of-host-running-ha-proxy &  Port: 31028 (HA)")),(0,a.kt)("h3",m({},{id:"further-useful-commands"}),"Further Useful Commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you want to change mosquitto.conf. Make the required changes in mosquitto.conf then delete the configmap and create a new one. Make sure to uninstall the deployment before making the change."),(0,a.kt)("li",{parentName:"ul"},"You can uninstall the setup using the following command:\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm uninstall <release-name> -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"To delete the configmap:\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl delete configmap mosquitto-config -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"To reconfigure the configmap:\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create configmap mosquitto-config  -n $namespace --from-file=<path-to-mosquitto.conf>")),(0,a.kt)("li",{parentName:"ul"},"If you want to customize the deployments, you can unzip the package using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"tar -xzvf mosquitto-multi-node-multi-host-autoscale-0.1.0.tgz")),(0,a.kt)("li",{parentName:"ul"},"Make the changes and repackage the folder mosquitto-multi-node-single-host using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm package mosquitto-multi-node-multi-host-autoscale "))),(0,a.kt)("h2",m({},{id:"usage"}),"Usage"),(0,a.kt)("p",null,"Once the installation is complete, you can start using the multi-node Mosquitto broker. Be sure to check the Mosquitto documentation for further details on configuring and using the broker."))}b.isMDXComponent=!0}}]);