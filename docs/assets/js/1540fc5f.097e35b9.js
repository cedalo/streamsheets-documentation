"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[36141],{58975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>k,default:()=>O,frontMatter:()=>c,metadata:()=>N,toc:()=>g});var a=n(3905),r=n(49044),o=Object.defineProperty,s=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&m(e,n,t[n]);if(i)for(var n of i(t))u.call(t,n)&&m(e,n,t[n]);return e};const c={id:"opcuarespond",title:"OPCUA.RESPOND",hide_title:!0},k=void 0,N={unversionedId:"functions/connection/opcuarespond",id:"version-3.0/functions/connection/opcuarespond",title:"OPCUA.RESPOND",description:"OPCUA.RESPOND",source:"@site/streamsheets_versioned_docs/version-3.0/functions/connection/opcuarespond.md",sourceDirName:"functions/connection",slug:"/functions/connection/opcuarespond",permalink:"/streamsheets/3.0/functions/connection/opcuarespond",draft:!1,tags:[],version:"3.0",frontMatter:{id:"opcuarespond",title:"OPCUA.RESPOND",hide_title:!0},sidebar:"someSidebar",previous:{title:"OPCUA.READ",permalink:"/streamsheets/3.0/functions/connection/opcuaread"},next:{title:"OPCUA.VARIABLES",permalink:"/streamsheets/3.0/functions/connection/opcuavariables"}},h={},g=[],f={toc:g};function O(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&i)for(var a of i(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=d(d({},f),m),s(t,l({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("h1",null,"OPCUA.RESPOND"),(0,a.kt)(r.Z,{mdxType:"PremiumFeature"}),(0,a.kt)("p",null,"Sends a response directly, i.e. without any Consumer, to an OPC UA service. The data to be send can be either arbitrary JSON data or a message from the outbox or inbox. Usually this function is used to respond to a previously received ",(0,a.kt)("em",{parentName:"p"},"request"),"-message. "),(0,a.kt)("admonition",d({},{type:"info"}),(0,a.kt)("p",{parentName:"admonition"}," A ",(0,a.kt)("em",{parentName:"p"},"request"),"-message must provide a requestId property within its ",(0,a.kt)("em",{parentName:"p"},"Metadata")," object. ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax")),(0,a.kt)("p",null,"=OPCUA.RESPOND(requestId, MessageOrJSON)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"requestId"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Number"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"The ",(0,a.kt)("em",{parentName:"td"},"requestId")," as provided by a previously received ",(0,a.kt)("em",{parentName:"td"},"request"),"-message")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"MessageOrJSON"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"String"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Data to send as response.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return")),(0,a.kt)("p",null,"Color switch to blue on success. Otherwise to red with an ",(0,a.kt)("a",d({parentName:"p"},{href:"../../errorcodes"}),"error")," code."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("p",null,"We assume that a ",(0,a.kt)("em",{parentName:"p"},"request"),"-message was received and that it provides a ",(0,a.kt)("em",{parentName:"p"},"requestId")," which we store to cell B1 by using the read function as follows: ",(0,a.kt)("inlineCode",{parentName:"p"},' READ(INBOXMETADATA(,,"requestId"), B1, "String")')," "),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Formula"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Result"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Comment"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("pre",null,(0,a.kt)("code",null,'=OPCUA.RESPOND(B1,OUTBOX("Message"))'))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"TRUE"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Sends the message with id ",(0,a.kt)("em",{parentName:"td"},"Message")," from the outbox to an OPCUA Service using the ",(0,a.kt)("em",{parentName:"td"},"requestId")," in B1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("pre",null,(0,a.kt)("code",null,"=OPCUA.RESPOND(B1,DICTIONARY(A3:C5))"))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"TRUE"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Sends the JSON data provided by the Dictionary function to an OPCUA Service using the ",(0,a.kt)("em",{parentName:"td"},"requestId")," in B1")))))}O.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(74889),o=n(62659),s=n(83166);function l({}){return a.createElement(r.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:a.createElement(s.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);