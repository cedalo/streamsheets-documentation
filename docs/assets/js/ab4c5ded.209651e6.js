(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[28978],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},74863:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return l},default:function(){return c}});var a=n(22122),o=n(19756),r=(n(67294),n(3905)),s={id:"maincomponents",title:"Introduction",sidebar_label:"Introduction"},i={unversionedId:"maincomponents",id:"version-2.5/maincomponents",isDocsHomePage:!1,title:"Introduction",description:"The three main components of the Streamsheet platform are: Streamsheets,",source:"@site/streamsheets_versioned_docs/version-2.5/maincomponents.md",sourceDirName:".",slug:"/maincomponents",permalink:"/streamsheets/2.5/maincomponents",version:"2.5",sidebar_label:"Introduction",frontMatter:{id:"maincomponents",title:"Introduction",sidebar_label:"Introduction"},sidebar:"version-2.5/someSidebar",previous:{title:"Introduction",permalink:"/streamsheets/2.5/introduction"},next:{title:"Administration",permalink:"/streamsheets/2.5/maincomponents/administration"}},l=[{value:"Best Practices",id:"best-practices",children:[{value:"Maintain",id:"maintain",children:[]},{value:"Bug free",id:"bug-free",children:[]},{value:"Resource-efficient",id:"resource-efficient",children:[]}]}],u={toc:l};function c(e){var t=e.components,s=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The three main components of the Streamsheet platform are: Streamsheets,\nApps and Streams. Streamsheets consume, process and produce\ndata streams. In Excel, one or several sheets always form part of a\nWorkbook. In a similar way, Streamsheets run in Apps and one App\naccommodates up to four sheets. Hence strictly speaking, the App\nconsumes, processes, and produces data streams, and the Streamsheets\ncontained in the App define how this happens exactly. Streams define the\nendpoints where messages are coming from and where they are sent to,\nhence data sources and data sinks. These endpoints can be e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"MQTT"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"Kafka")," topics as well as ",(0,r.kt)("inlineCode",{parentName:"p"},"OPC UA")," nodes, ",(0,r.kt)("inlineCode",{parentName:"p"},"REST")," APIs, database\ncollections or local directories."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"StMFlow",src:n(70746).Z})),(0,r.kt)("p",null,"Apps consume and produce streams. In the App","`","s Streamsheets the data\nflow logic is defined via functions."),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("p",null,"With Streamsheets, many ways lead to your desired outcome. This is great, because there is not only one right solution to get an application running and a great way to get started with Streamsheets and its possibilities..\nAs your abilities grow and your applications start to get more complex, there are a couple of best practices you should look into, to ensure your application is easy to maintain, bug free and resource-efficient.\nThis guide provides some general recommendation and best practices for your app development. "),(0,r.kt)("h3",{id:"maintain"},"Maintain"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Divide tasks in multiple applications"))),(0,r.kt)("p",null,"Not filling one application with all your ideas, but managing these in a number of smaller apps has multiple perks.",(0,r.kt)("br",{parentName:"p"}),"\n","One would be a good overview. Big applications have many cross-references, multiple sheets and a lot of times only a few comments and documentation. If there is a problem, it will take you way longer the bigger and more complex your app is to find out what the cause is. Create multiple different apps to keep track of what is going on.\nthis is even possible, if the apps have to talk to each other. Use the integrated Mosquitto Broker to send your calculations form app one to app two. This also serves as a great quality check. If the arriving messages don\xb4t show any sign of problematic content, usually you already know, that the problem occurs somewhere further down your line of tasks. "),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Document what you are doing"))),(0,r.kt)("p",null,"Work with comments and document the steps you are taking. This is usually very annoying while building your app and does not feel necessary, because right now everything seems obvious. But let me assure you, your future self will be very thankful!"),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Visually divide"))),(0,r.kt)("p",null,"Same as the division of tasks into multiple apps, divide parts of your calculations into visually divided components. You can either use multiple sheets or leave empty space between tasks.\nThis helps you navigate visually through your calculations and supports you maintain your logic as it grows later on."),(0,r.kt)("h3",{id:"bug-free"},"Bug free"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Remember the core principle of Streamsheet calculation"))),(0,r.kt)("p",null,"Left to right and Top to bottom. This is the calculation principle of Streamsheets. The biggest difference between a normal spreadsheet and a Streamsheet is that a Streamsheets has an order of calculation. It starts by calculating A1, B1, C1, ..., then it jumps to the next row and calculates again A2, B2, C2, ... . This is an immensely powerful feature, but if forgotten can create false logic dependencies. Example: If you are using a READ() in e.g. B26 function, to get updated values for your sheet, watch out to not accidentally add functions with references to B26 above this cell. All functions referencing to B26 above B26 (e.g. A1) automatically are always one step behind, since the value in B26 is not yet updated when the function is calculated. "),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Check your steps"))),(0,r.kt)("p",null,"Every step calculates the whole sheet one more time. Make sure the triggered steps do not affect functions in ways it does not make sense or allow for false calculations/outcomes. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Wrong calculation mode:"),' If you are using STACKADD() or TIMESCALE.INSERT and your calculation mode is "continuously", these functions are executed every time the sheet calculates. This does not necessarily mean, that you have new information to work with. You would be adding the same info over and over again. Make sure, the functions are only triggered, when actually needed. Change your calculation mode to "on message" or try using IF-Cells or the IF() function.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Wrong message content:"),' Even when your calculation mode is set to "on message", there still can be situations, where the calculation of a function would not make sense.\nFor example, if there are multiple payload types arriving in your Inbox triggering your steps. Every payload triggers the whole sheet, but maybe only for a certain payload your function should be calculated. Get around this issue by using different sheets per payload, or use the If-Cells/IF() function. '),(0,r.kt)("h3",{id:"resource-efficient"},"Resource-efficient"),(0,r.kt)("p",null,"Streamsheets does depend on the hardware of your server/laptop. There are a couple of things you can do to minimize the load your application creates. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Divide tasks in multiple applications"))),(0,r.kt)("p",null,"Every application runs on its own process within the server. Dividing tasks into multiple apps allows the server to prioritize its resources and allows for a better over all experience.\nFor example: Create one application to store your data in a database. Based on that data you can now create multiple dashboards for multiple purposes. All in different apps. "),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Keep Streamsheets clean"))),(0,r.kt)("p",null,"Make your app as lightweight as possible. There are a couple of performance dependencies you should look out for while creating your app. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Update rate: The faster your app is running, the more resources are needed. Do you really need to set the cycle speed to 10ms?"),(0,r.kt)("li",{parentName:"ul"},"Amount of cells: Streamsheet is not a regular spreadsheet application. It is calculating EVERY cell on every new occurring step. Fewer cells and fewer functions lead to an overall better performance. Instead of creating huge tables, think about using databases and this way even persist your data. Creating big tables is usually nothing you need to do within Streamsheets itself. Save your calculated results and query them, if you need to. "),(0,r.kt)("li",{parentName:"ul"},"Use of the third dimension: In Streamsheets you sometime use a third dimension to access data. Functions like TIMEAGGREGATE() or TIMESCALE.SELECT() hold data in their cell. The bigger these data sets get and the more you are using these functions, the bigger the load on your client. Usually you don\xb4t need to query millions of data points. Aggregate your data in smart ways is key to a smoothly running app. ")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Add more resources"))),(0,r.kt)("p",null,"Streamsheets is always limited by the amount of CPU, memory and disc space available. Make sure there is always enough.\nSince your apps are running within a docker environment first check the amount of data docker is allocating. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CPU and Memory: ",(0,r.kt)("inlineCode",{parentName:"li"},"docker stats")),(0,r.kt)("li",{parentName:"ul"},"Disc space: ",(0,r.kt)("inlineCode",{parentName:"li"},"docker system df")," ")),(0,r.kt)("p",null,'Docker allows you to manage the allocated resources of your hardware. When using Docker Desktop, these resources are automatically limited. Go into your settings and adjust these in the Tab "Resources". '),(0,r.kt)("p",null,"If your docker installation already allocates the maximum amount of resources, think about scaling up your setup."))}c.isMDXComponent=!0},70746:function(e,t,n){"use strict";t.Z=n.p+"assets/images/StMFlow-aecffc2ec76e832ff96b179448f8b4d1.png"}}]);