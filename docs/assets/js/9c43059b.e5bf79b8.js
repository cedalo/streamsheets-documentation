"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[20532],{13328:function(t,e,a){var n=a(95318);e.Z=void 0;var l=n(a(64938)),r=a(85893),i=(0,l.default)((0,r.jsx)("path",{d:"m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}),"NewReleases");e.Z=i},75943:function(t,e,a){var n=a(95318);e.Z=void 0;var l=n(a(64938)),r=a(85893),i=(0,l.default)((0,r.jsx)("path",{d:"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z"}),"Science");e.Z=i},67990:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return d},default:function(){return p}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),i=(a(92313),a(93866),a(13977),["components"]),u={id:"tableupdate",title:"TABLE.UPDATE",hide_title:!0},o=void 0,m={unversionedId:"functions/streamsheet/tableupdate",id:"functions/streamsheet/tableupdate",title:"TABLE.UPDATE",description:"TABLE.UPDATE",source:"@site/streamsheets/functions/streamsheet/tableupdate.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/tableupdate",permalink:"/streamsheets/next/functions/streamsheet/tableupdate",tags:[],version:"current",frontMatter:{id:"tableupdate",title:"TABLE.UPDATE",hide_title:!0},sidebar:"someSidebar",previous:{title:"TABLE.ORDERCOLUMN",permalink:"/streamsheets/next/functions/streamsheet/tableordercolumn"},next:{title:"TRIGGERSTEP",permalink:"/streamsheets/next/functions/streamsheet/triggerstep"}},d=[],s={toc:d};function p(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"TABLE.UPDATE"),(0,r.kt)("p",null,"Creates and updates a defined cell range in a table like manner. The first row and first column of specified cell range defines the indices used to reference a table cell. To set or update a cell its corresponding row and column indices must be given. If a row index does not exist in current range, it can be automatically added to top or bottom. The same applies for a column index which can be automatically added to the left or right. To simply read values from a table cell refer to TABLE.GET"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=TABLE.UPDATE(CellRange, Value, ","[","RowIndex","]",", ","[","ColumnIndex","]",", ","[","PushRowAt","]",", ","[","PushColumnAt","]",", ","[","AggregationMethod","]",")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CellRange"),(0,r.kt)("td",{parentName:"tr",align:null},"Range"),(0,r.kt)("td",{parentName:"tr",align:null},"Cell range to treat like a table. Its first row and its first column are used to reference table cells.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Value"),(0,r.kt)("td",{parentName:"tr",align:null},"Value"),(0,r.kt)("td",{parentName:"tr",align:null},"A value to set in referenced table cell.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RowIndex (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},"The row index of a table cell. If not defined no value is set. The PushRowAt parameter can be used to add the row index if the table has no equal index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ColumnIndex (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},"The column index of a table cell. If not defined no value is set. The PushColumnAt parameter can be used to add the column index if the table has no equal index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PushRowAt (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines where to insert a new row index. Should be either 1, -1, or 0. To insert new row at the bottom specify 1, -1 will insert it at the top and 0 will not insert at all. ",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PushColumnAt (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines where to insert a new column index. Should be either 1, -1, or 0. To insert new column to the right specify 1, -1 will insert it to the left and 0 will not insert at all. ",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"AggregationMethod (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"AggregationMethod"),(0,r.kt)("td",{parentName:"tr",align:null},"One of the predefined numbers which specifies the aggregation method to use for specified table cell.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Options:",(0,r.kt)("br",null),"0: NONE - No aggregation is performed and the last valid value of specified DataCell is returned.",(0,r.kt)("br",null),"1: AVERAGE - Calculates the average of all received values.",(0,r.kt)("br",null),"2: COUNT - Counts the number of received values.",(0,r.kt)("br",null),"3: COUNTA - Counts all values which are not zero.",(0,r.kt)("br",null),"4: MAX - Determines the maximum of all received values.",(0,r.kt)("br",null),"5: MIN - Determines the minimum of all received values.",(0,r.kt)("br",null),"6: PRODUCT - Calculates the product of all received values.",(0,r.kt)("br",null),"7: STDEV.S - Calculates the standard deviation of all received values.",(0,r.kt)("br",null),"8: STDEV.P - Currently not available!",(0,r.kt)("br",null),"9: SUM - Calculates the sum of all received values. ",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: 0")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Boolean or Error"),(0,r.kt)("td",{parentName:"tr",align:null},"TRUE or an ",(0,r.kt)("a",{parentName:"td",href:"../../other#error-codes"},"error")," value.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Turbine1"),(0,r.kt)("th",{parentName:"tr",align:null},"Turbine2"),(0,r.kt)("th",{parentName:"tr",align:null},"Turbine3"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"93370"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"2000"),(0,r.kt)("td",{parentName:"tr",align:null},"3000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"93360"),(0,r.kt)("td",{parentName:"tr",align:null},"1500"),(0,r.kt)("td",{parentName:"tr",align:null},"2500"),(0,r.kt)("td",{parentName:"tr",align:null},"3500")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Formula"),(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("pre",null,(0,r.kt)("code",null,'=TABLE.UPDATE(A3:D5, 42, 93360, "Turbine 1")'))),(0,r.kt)("td",{parentName:"tr",align:null},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("pre",null,(0,r.kt)("code",null,'=TABLE.UPDATE(A3:D5, 42, 93300, "Turbine 42", 1, 1)'))),(0,r.kt)("td",{parentName:"tr",align:null},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0},13977:function(t,e,a){a.d(e,{Z:function(){return o}});var n=a(36459),l=a(67294),r=a(21055),i=a(13486),u=a(75943);function o(t){return(0,n.Z)(t),l.createElement(r.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:i.Z[500]},size:"small",icon:l.createElement(u.Z,{style:{color:"white"},size:"small"}),label:"Experimental"})}},93866:function(t,e,a){a.d(e,{Z:function(){return o}});var n=a(36459),l=a(67294),r=a(21055),i=a(55137),u=a(83166);function o(t){return(0,n.Z)(t),l.createElement(r.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:i.Z[500]},size:"small",icon:l.createElement(u.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},92313:function(t,e,a){a.d(e,{Z:function(){return i}});var n=a(67294),l=a(21055),r=a(13328);function i(t){var e=t.version;return e?n.createElement(l.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:n.createElement(r.Z,{size:"small"}),label:""+e}):n.createElement(n.Fragment,null)}}}]);