"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[9259],{83166:(e,t,r)=>{var n=r(64836);t.Z=void 0;var a=n(r(64938)),o=r(85893),s=(0,a.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=s},13328:(e,t,r)=>{var n=r(64836);t.Z=void 0;var a=n(r(64938)),o=r(85893),s=(0,a.default)((0,o.jsx)("path",{d:"m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}),"NewReleases");t.Z=s},92957:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>v,frontMatter:()=>k,metadata:()=>f,toc:()=>N});var n=r(3905),a=r(78901),o=r(49044),s=Object.defineProperty,i=Object.defineProperties,p=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))m.call(t,r)&&c(e,r,t[r]);return e};const k={id:"mc-user-groups-rest-api",title:"User Groups REST API \u2b50"},g=void 0,f={unversionedId:"mc-user-groups-rest-api",id:"version-2.5/mc-user-groups-rest-api",title:"User Groups REST API \u2b50",description:"This page describes how to use the User Groups REST API that is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC).",source:"@site/management-center_versioned_docs/version-2.5/user-groups-rest-api.md",sourceDirName:".",slug:"/mc-user-groups-rest-api",permalink:"/management-center/mc-user-groups-rest-api",draft:!1,tags:[],version:"2.5",frontMatter:{id:"mc-user-groups-rest-api",title:"User Groups REST API \u2b50"},sidebar:"someSidebar",previous:{title:"User Management REST API",permalink:"/management-center/mc-user-management-rest-api"},next:{title:"User Profile",permalink:"/management-center/mc-user-profile"}},h={},N=[{value:"User Profile REST API",id:"user-profile-rest-api",level:2},{value:"Error Responses",id:"error-responses",level:2}],b={toc:N};function v(e){var t,r=e,{components:s}=r,c=((e,t)=>{var r={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&m.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=d(d({},b),c),i(t,p({components:s,mdxType:"MDXLayout"}))),(0,n.kt)(a.Z,{version:"2.5",mdxType:"SinceVersion"}),(0,n.kt)(o.Z,{mdxType:"PremiumFeature"}),(0,n.kt)("br",null),(0,n.kt)("br",null),(0,n.kt)("p",null,"This page describes how to use the ",(0,n.kt)("strong",{parentName:"p"},"User Groups REST API")," that is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC)."),(0,n.kt)("admonition",d({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"Before sending a command request, make sure that you have been authenticated.")),(0,n.kt)("admonition",d({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"Application Tokens REST API can be accessed by a user with an ",(0,n.kt)("em",{parentName:"p"},"admin")," role.")),(0,n.kt)("h2",d({},{id:"user-profile-rest-api"}),"User Profile REST API"),(0,n.kt)("p",null,"User Profile can be accessed via an HTTP request:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"GET /api/user-management/groups")," - get information  about the profile of the current user"),(0,n.kt)("p",{parentName:"li"},"  Response: List of all currently existing user groups (list of user groups objects) "),(0,n.kt)("p",{parentName:"li"},"  Example of the response:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n    "Monitoring": {\n        "name": "Monitoring",\n        "description": "",\n        "role": "monitoringViewer",\n        "users": [\n            "ViewerUser"\n        ],\n        "connections": [\n            "local",\n            "mosquitto"\n        ]\n    },\n    ...\n}\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"GET /api/user-management/groups/:groupId")),(0,n.kt)("p",{parentName:"li"},"  Path parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"groupId")," - the name of the group that you want to get"),(0,n.kt)("p",{parentName:"li"},"Response: User group object")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"POST /api/user-management/groups")))),(0,n.kt)("p",null,"Request body must be a user group object."),(0,n.kt)("p",null,"Example of the request body:"),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-json"}),'{\n    "Monitoring": {\n      "name": "Monitoring",\n      "description": "",\n      "role": "monitoringViewer",\n      "users": [\n        "ViewerUser"\n      ],\n      "connections": [\n        "local",\n        "mosquitto"\n      ]\n    }\n}\n')),(0,n.kt)("p",null,"Response: List of all currently existing user groups (list of user groups objects) "),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"users")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"connections")," fields are optional. They can be added afterward, with ",(0,n.kt)("inlineCode",{parentName:"p"},"PUT")," requests"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"PUT /api/user-management/groups/:groupId")),(0,n.kt)("p",{parentName:"li"},"  The request body must be a user group object. But all of the fields are optional"),(0,n.kt)("p",{parentName:"li"},"  Response: List of all currently existing user groups (list of user groups objects) "))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"DELETE /api/user-management/groups/:groupId")),(0,n.kt)("p",{parentName:"li"},"  Path parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"groupId")," - the name of the group that you want to delete"),(0,n.kt)("p",{parentName:"li"},"Response: List of all remaining user groups"))))),(0,n.kt)("h2",d({},{id:"error-responses"}),"Error Responses"),(0,n.kt)("p",null,"HTTP status codes and a body of type ",(0,n.kt)("inlineCode",{parentName:"p"},"text/plain")," will be returned in case of an error.\nError status codes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"404 - API not enabled"),(0,n.kt)("li",{parentName:"ul"},"400 - input validation error"),(0,n.kt)("li",{parentName:"ul"},"403 - Forbidden, not enough rights to access the endpoint"),(0,n.kt)("li",{parentName:"ul"},"500 - Internal server error")))}v.isMDXComponent=!0},49044:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(67294),a=r(74889),o=r(62659),s=r(83166);function i({}){return n.createElement(a.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:n.createElement(s.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},78901:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(67294),a=r(74889),o=r(13328);function s({version:e}){return e?n.createElement(a.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:n.createElement(o.Z,{size:"small"}),label:`${e}`}):n.createElement(n.Fragment,null)}}}]);