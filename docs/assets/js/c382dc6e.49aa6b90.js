"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[18092],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>g});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=s(a),g=n,d=m["".concat(p,".").concat(g)]||m[g]||c[g]||l;return a?r.createElement(d,i(i({ref:e},u),{},{components:a})):r.createElement(d,i({ref:e},u))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},52781:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>k,contentTitle:()=>g,default:()=>N,frontMatter:()=>m,metadata:()=>d,toc:()=>f});var r=a(3905),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(t,e,a)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,c=(t,e)=>{for(var a in e||(e={}))p.call(e,a)&&u(t,a,e[a]);if(o)for(var a of o(e))s.call(e,a)&&u(t,a,e[a]);return t};const m={id:"averageif",title:"AVERAGEIF",sidebar_label:"AVERAGEIF"},g=void 0,d={unversionedId:"functions/statistical/averageif",id:"version-2.5/functions/statistical/averageif",title:"AVERAGEIF",description:"Returns the average of all cell values in a cell-range which meet a given criterion. To specify multiple criteria please use AVERAGEIFS.",source:"@site/streamsheets_versioned_docs/version-2.5/functions/statistical/averageif.md",sourceDirName:"functions/statistical",slug:"/functions/statistical/averageif",permalink:"/streamsheets/functions/statistical/averageif",draft:!1,tags:[],version:"2.5",frontMatter:{id:"averageif",title:"AVERAGEIF",sidebar_label:"AVERAGEIF"},sidebar:"version-2.5/someSidebar",previous:{title:"AVERAGE",permalink:"/streamsheets/functions/statistical/average"},next:{title:"AVERAGEIFS",permalink:"/streamsheets/functions/statistical/averageifs"}},k={},f=[],b={toc:f};function N(t){var e,a=t,{components:n}=a,u=((t,e)=>{var a={};for(var r in t)p.call(t,r)&&e.indexOf(r)<0&&(a[r]=t[r]);if(null!=t&&o)for(var r of o(t))e.indexOf(r)<0&&s.call(t,r)&&(a[r]=t[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(e=c(c({},b),u),l(e,i({components:n,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Returns the average of all cell values in a cell-range which meet a given criterion. To specify multiple criteria please use AVERAGEIFS."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=AVERAGEIF(DataRange, Criterion, ","[","AverageRange","]",")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"DataRange"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Cell-range to calculate average for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Criterion"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"The criterion each cell has to fulfill.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"AverageRange (optional)"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"If given these cells are used to calculate average. If ommitted DataRange is used.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("p",null,"The average over all cell values which meet criterion."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null})),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"A"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"B"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"1"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"100000"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"200")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"200000"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"400")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"300000"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"400")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"4"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"North"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"600")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"5"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"East"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"800")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"6"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"South"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"1000")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Formula"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Result"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"AVERAGEIF(",(0,r.kt)("span",{class:"blue"},"A1:A3"),", ",(0,r.kt)("span",{class:"orange"},'"',"<",'250000"'),")"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"150000"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Only cells A1 and A2 match given criterion")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"AVERAGEIF(",(0,r.kt)("span",{class:"blue"},"A1:A6"),", ",(0,r.kt)("span",{class:"orange"},'"=*th"'),", ",(0,r.kt)("span",{class:"green"},"B1:B6"),")"))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"800"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),'Take cells from column A which end with "th" and average corresponding values from column B')))))}N.isMDXComponent=!0}}]);