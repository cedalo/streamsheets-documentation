"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[755],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?i.createElement(h,l(l({ref:t},c),{},{components:n})):i.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},35934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>m,default:()=>f,frontMatter:()=>d,metadata:()=>h,toc:()=>y});var i=n(3905),o=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&c(e,n,t[n]);if(r)for(var n of r(t))p.call(t,n)&&c(e,n,t[n]);return e};const d={id:"broker-dynamic-security",title:"Dynamic security",sidebar_label:"Dynamic security"},m=void 0,h={unversionedId:"broker/Mosquitto Manual/broker-dynamic-security",id:"version-2.8/broker/Mosquitto Manual/broker-dynamic-security",title:"Dynamic security",description:"Introduction",source:"@site/mosquitto_versioned_docs/version-2.8/broker/Mosquitto Manual/dynamic-security.md",sourceDirName:"broker/Mosquitto Manual",slug:"/broker/Mosquitto Manual/broker-dynamic-security",permalink:"/mosquitto/broker/Mosquitto Manual/broker-dynamic-security",draft:!1,tags:[],version:"2.8",frontMatter:{id:"broker-dynamic-security",title:"Dynamic security",sidebar_label:"Dynamic security"},sidebar:"someSidebar",previous:{title:"System Topics",permalink:"/mosquitto/broker/Mosquitto Manual/broker-topics"},next:{title:"HTTP Bridge Plugin",permalink:"/mosquitto/broker/Mosquitto Manual/Bridges/mosquitto-http-bridge"}},k={},y=[{value:"Introduction",id:"introduction",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Clients",id:"clients",level:3},{value:"Username",id:"username",level:4},{value:"Password",id:"password",level:4},{value:"Client ID",id:"client-id",level:4},{value:"Groups",id:"groups",level:4},{value:"Roles",id:"roles",level:4},{value:"Text name",id:"text-name",level:4},{value:"Text description",id:"text-description",level:4},{value:"Disabled",id:"disabled",level:4},{value:"Groups",id:"groups-1",level:3},{value:"Group name",id:"group-name",level:4},{value:"Roles",id:"roles-1",level:4},{value:"Text name",id:"text-name-1",level:4},{value:"Text description",id:"text-description-1",level:4},{value:"Roles",id:"roles-2",level:3},{value:"Role name",id:"role-name",level:4},{value:"Access Control Lists",id:"access-control-lists",level:4},{value:"Text name",id:"text-name-2",level:4},{value:"Text description",id:"text-description-2",level:4},{value:"Priorities",id:"priorities",level:3},{value:"Anonymous access",id:"anonymous-access",level:3},{value:"Initial configuration",id:"initial-configuration",level:2},{value:"Usage",id:"usage",level:2},{value:"Management Center",id:"management-center",level:3},{value:"mosquitto_ctrl",id:"mosquitto_ctrl",level:3},{value:"Using an options file",id:"using-an-options-file",level:4},{value:"Configuring default access",id:"configuring-default-access",level:4},{value:"Creating and modifying clients",id:"creating-and-modifying-clients",level:4},{value:"Creating and modifying groups",id:"creating-and-modifying-groups",level:4},{value:"Creating and modifying roles",id:"creating-and-modifying-roles",level:4}],b={toc:y};function f(e){var t,n=e,{components:o}=n,c=((e,t)=>{var n={};for(var i in e)s.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&r)for(var i of r(e))t.indexOf(i)<0&&p.call(e,i)&&(n[i]=e[i]);return n})(n,["components"]);return(0,i.kt)("wrapper",(t=u(u({},b),c),a(t,l({components:o,mdxType:"MDXLayout"}))),(0,i.kt)("h2",u({},{id:"introduction"}),"Introduction"),(0,i.kt)("p",null,"The Dynamic Security plugin is a plugin for Eclipse Mosquitto which provides role based\nauthentication and access control features that can updated whilst the broker\nis running, using a special topic based API."),(0,i.kt)("p",null,"It is supported since Eclipse Mosquitto 2.0, and should be available in all\ninstallations, but will not be activated by default."),(0,i.kt)("admonition",u({},{type:"info"}),(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("a",u({parentName:"p"},{href:"/mosquitto/management-center/overview/configuration/mc-clients"}),"Cedalo Management Center")," provides a web user interface for managing the dynamic security feature.")),(0,i.kt)("h2",u({},{id:"concepts"}),"Concepts"),(0,i.kt)("p",null,"This section describes the concepts of how the plugin operates."),(0,i.kt)("p",null,"The plugin allows you to create three main objects, ",(0,i.kt)("inlineCode",{parentName:"p"},"clients"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"groups"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"roles"),"."),(0,i.kt)("p",null,"This document will use the term ",(0,i.kt)("inlineCode",{parentName:"p"},"clients")," to mean the clients defined in the\nplugin, and ",(0,i.kt)("inlineCode",{parentName:"p"},"devices")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"users")," to mean the MQTT clients that connect to the\nbroker."),(0,i.kt)("hr",null),(0,i.kt)("h3",u({},{id:"clients"}),"Clients"),(0,i.kt)("p",null,"When you want a device or user to be able to connect and authenticate to the\nbroker, you create a client. Each client has the following attributes:"),(0,i.kt)("h4",u({},{id:"username"}),"Username"),(0,i.kt)("p",null,"The client username maps to the username provided in the CONNECT packet when a\ndevice connects. The username is unique across the plugin, so attempting to\ncreate a client with a duplicate username will result in an error. The username\nacts as the primary key if you want to change anything about the client."),(0,i.kt)("h4",u({},{id:"password"}),"Password"),(0,i.kt)("p",null,"The client password maps to the password provided in the CONNECT packet when a\ndevice connects. The password may be unset when a client is created, this will\nmean that devices will be unable to connect as the corresponding client."),(0,i.kt)("p",null,"The password can be updated at any point, but only by a client with the correct\naccess. Devices typically cannot update their own passwords."),(0,i.kt)("h4",u({},{id:"client-id"}),"Client ID"),(0,i.kt)("p",null,"The client id maps to the client id provided in the CONNECT packet when a\ndevice connects. This is an optional attribute."),(0,i.kt)("p",null,"If the client id is empty or not provided, then any device can connect with the\nusername for this client regardless of its client id. This means that multiple\ndevices could connect with the same credentials at the same time, but sharing\ncredentials between devices is not recommended."),(0,i.kt)("p",null,"If the client id is set, then a device can only connect as this client if the\ntriple of username, password, and client id all match those in the client."),(0,i.kt)("h4",u({},{id:"groups"}),"Groups"),(0,i.kt)("p",null,"A client can be a member of any number of groups."),(0,i.kt)("h4",u({},{id:"roles"}),"Roles"),(0,i.kt)("p",null,"A client can be assigned to any number of roles. A role gives the client access\nto different topics."),(0,i.kt)("h4",u({},{id:"text-name"}),"Text name"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly name to this client."),(0,i.kt)("h4",u({},{id:"text-description"}),"Text description"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly description to this\nclient."),(0,i.kt)("h4",u({},{id:"disabled"}),"Disabled"),(0,i.kt)("p",null,"A client can be set to be enabled/disabled at any point. Disabling a client\nmeans that any devices currently connected using the credentials for that\nclient will be disconnected and unable to reconnect."),(0,i.kt)("hr",null),(0,i.kt)("h3",u({},{id:"groups-1"}),"Groups"),(0,i.kt)("p",null,"Multiple clients can be placed in a group. Groups can have roles assigned to\nthem, so using groups is appropriate where you have a number of clients that\nneed to have the same access."),(0,i.kt)("p",null,"Groups have the following attributes:"),(0,i.kt)("h4",u({},{id:"group-name"}),"Group name"),(0,i.kt)("p",null,"The group name is the primary name for the group. It is used when modifying the\ngroup in any way, such as adding a client or a role."),(0,i.kt)("h4",u({},{id:"roles-1"}),"Roles"),(0,i.kt)("p",null,"A group can be assigned to any number of roles. A role gives the group access\nto different topics."),(0,i.kt)("h4",u({},{id:"text-name-1"}),"Text name"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly name to this group."),(0,i.kt)("h4",u({},{id:"text-description-1"}),"Text description"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly description to this\ngroup."),(0,i.kt)("hr",null),(0,i.kt)("h3",u({},{id:"roles-2"}),"Roles"),(0,i.kt)("p",null,"Roles contain multiple access control lists (ACLs), and can be assigned to clients and/or groups."),(0,i.kt)("p",null,"Roles have the following attributes:"),(0,i.kt)("h4",u({},{id:"role-name"}),"Role name"),(0,i.kt)("p",null,"The role name is the primary name for the role. It is used when modifying the\nrole in any way, such as adding an ACL."),(0,i.kt)("h4",u({},{id:"access-control-lists"}),"Access Control Lists"),(0,i.kt)("p",null,"ACLs are the feature which allows access to topics to be controlled. Checks are\nmade on different events as they happen: ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientSend"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientReceive"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribe"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribe"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientSend"),'\nevent occurs when a device sends a PUBLISH message to the broker, i.e. "is the\ndevice allowed to publish to this topic". The ',(0,i.kt)("inlineCode",{parentName:"p"},"publishClientReceive")," event\noccurs when a device is due to receive a PUBLISH message from the broker, i.e.\nit has a valid subscription and a matching message has been published to the\nbroker. The ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribe")," event occurs in response to a device sending a\nSUBSCRIBE message, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribe")," event occurs in response to a device\nsending an UNSUBSCRIBE packet."),(0,i.kt)("p",null,"The default behaviour of the different events can be set to allow or deny\naccess. The default behaviour applies if no matching ACL is found."),(0,i.kt)("p",null,"The default behaviour for the different events when the plugin has first been\nconfigured is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"publishClientSend"),": deny"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"publishClientReceive"),": allow"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"subscribe"),": deny"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unsubscribe"),": allow")),(0,i.kt)("p",null,"There is some overlap between ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientReceive")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribe"),". In most\ncases, using a ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribe")," ACL is sufficient to provide the control you need,\nhowever by combining the two types it is possible to e.g. allow subscriptions\nto a wildcard topic like ",(0,i.kt)("inlineCode",{parentName:"p"},"topic/#"),", but deny access for device to receive\nmessages on a specific topic within that hierarchy like 'topic/secret'."),(0,i.kt)("p",null,"The different events have ACL types associated with them, and it is these ACLs\nthat you will add to your roles. Each ACL has a ",(0,i.kt)("inlineCode",{parentName:"p"},"topic"),", a ",(0,i.kt)("inlineCode",{parentName:"p"},"priority"),", and can\nbe set to ",(0,i.kt)("inlineCode",{parentName:"p"},"allow")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"deny"),". "),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientSend")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientReceive")," ACL types map directly to\nthe events of the same name. The topic can contain wildcards, so allowing to send\naccess to ",(0,i.kt)("inlineCode",{parentName:"p"},"topic/#")," will allow devices to publish to all topics in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"topic/#")," hierarchy, including ",(0,i.kt)("inlineCode",{parentName:"p"},"topic"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribe")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribe")," events have two ACL types each:\n",(0,i.kt)("inlineCode",{parentName:"p"},"subscribeLiteral"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribePattern"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribeLiteral"),", and\n",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribePattern"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"*Literal")," ACL types make a literal comparison between the topic filter\nprovided for the ACL and the topic filter provided in the SUBSCRIBE or\nUNSUBSCRIBE message. This means that setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribeLiteral")," ACL with\ntopic filter ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," to deny would prevent matching devices from subscribing the ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," topic filter only, but still allow them to subscribe to ",(0,i.kt)("inlineCode",{parentName:"p"},"topic/#"),", for\nexample."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"*Pattern")," ACL types allow or deny access based on a wildcard comparison of\nthe ACL topic filter and the topic provided in the SUBSCRIBE or UNSUBSCRIBE\nmessage. This means that setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribePattern")," ACL with topic filter ",(0,i.kt)("inlineCode",{parentName:"p"},"#"),"\nto deny would prevent matching devices from subscribing to any topic at all."),(0,i.kt)("h4",u({},{id:"text-name-2"}),"Text name"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly name to this role."),(0,i.kt)("h4",u({},{id:"text-description-2"}),"Text description"),(0,i.kt)("p",null,"This is an optional text field to give a human friendly description to this\nrole."),(0,i.kt)("hr",null),(0,i.kt)("h3",u({},{id:"priorities"}),"Priorities"),(0,i.kt)("p",null,"If you are working with more than one role per client or group, or more than\none group per client, then it is crucial to understand how roles and ACLs are\napplied."),(0,i.kt)("p",null,"The order in which checks are made is determined in part by the ",(0,i.kt)("inlineCode",{parentName:"p"},"priority")," of\ngroups, roles and ACLs. Each client group has a priority, each client role and\ngroup role has a priority, and each ACL within a role has a priority. If not\nset explicitly, priorities will default to -1."),(0,i.kt)("p",null,"For each of the group, role, and ACL objects, checks are made in priority order\nfrom the highest numerical value to the lowest numerical value. If two objects\nof the same type have the same priority, then they will be checked in\nlexographical order according to the username/groupname/rolename, but it is\nadvised to use unique priorities per object type."),(0,i.kt)("p",null,"When an event occurs that needs an ACL check, the ACLs for that ACL type are\nchecked in order until there is a matching ACL for the topic in question."),(0,i.kt)("p",null,"Within each role that is checked, the ACLs are checked in priority order."),(0,i.kt)("p",null,"The roles assigned to a client are checked first, in priority order.\nEach client group is checked in priority order, with all the roles in a\ngroup being checked in priority order before the next group is checked."),(0,i.kt)("p",null,"As an example, let us assume we have the following client, groups, and roles:"),(0,i.kt)("p",null,"Client: ",(0,i.kt)("inlineCode",{parentName:"p"},"sensor"),"\nGroups: ",(0,i.kt)("inlineCode",{parentName:"p"},"temperature")," (priority 2), ",(0,i.kt)("inlineCode",{parentName:"p"},"humidity")," (priority 1)\nRoles: ",(0,i.kt)("inlineCode",{parentName:"p"},"hallway")),(0,i.kt)("p",null,"Group: ",(0,i.kt)("inlineCode",{parentName:"p"},"temperature"),"\nRoles: ",(0,i.kt)("inlineCode",{parentName:"p"},"input")," (priority 5), ",(0,i.kt)("inlineCode",{parentName:"p"},"output")," (priority 1)"),(0,i.kt)("p",null,"Group: ",(0,i.kt)("inlineCode",{parentName:"p"},"humidity"),"\nRoles: ",(0,i.kt)("inlineCode",{parentName:"p"},"humidity")),(0,i.kt)("p",null,"Role: ",(0,i.kt)("inlineCode",{parentName:"p"},"hallway")),(0,i.kt)("p",null,"Role: ",(0,i.kt)("inlineCode",{parentName:"p"},"input")),(0,i.kt)("p",null,"Role: ",(0,i.kt)("inlineCode",{parentName:"p"},"output")),(0,i.kt)("p",null,"Role: ",(0,i.kt)("inlineCode",{parentName:"p"},"humidity")),(0,i.kt)("h3",u({},{id:"anonymous-access"}),"Anonymous access"),(0,i.kt)("p",null,"All the documentation so far assumes that you do not allow anonymous\nunauthenticated access - meaning devices or users that connect without a\nusername."),(0,i.kt)("p",null,"You may wish to allow anonymous access, but still make use of the dynamic\nsecurity plugin, and this is supported through the automatic anonymous group.\nIf allowed, anything connecting without a username will be assigned to a group\nthat you define. By assigning roles to that group, you can control what\nanonymous devices can access."),(0,i.kt)("h2",u({},{id:"initial-configuration"}),"Initial configuration"),(0,i.kt)("p",null,"To use the Dynamic Security plugin, it must be configured in the broker and an\ninitial plugin configuration must be generated."),(0,i.kt)("p",null,"To configure the broker, add the following to your configuration file."),(0,i.kt)("p",null,"Linux/BSD:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"plugin path/to/mosquitto_dynamic_security.so\nplugin_opt_config_file path/to/dynamic-security.json\n")),(0,i.kt)("p",null,"Windows:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"plugin path\\to\\mosquitto_dynamic_security.dll\nplugin_opt_config_file path\\to\\dynamic-security.json\n")),(0,i.kt)("p",null,"On Linux you would expect the plugin library to be installed to\n",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/lib/x86_64-linux-gnu/mosquitto_dynamic_security.so")," or a similar path,\nbut this will vary depending on the particular distribution and hardware in\nuse."),(0,i.kt)("p",null,"It is recommended to use ",(0,i.kt)("inlineCode",{parentName:"p"},"per_listener_settings false")," with this plugin, so all\nlisteners use the same authentication and access control."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"dynamic-security.json")," file is where the plugin configuration will be\nstored. To generate an initial file, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl")," utility."),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl dynsec init path/to/dynamic-security.json admin-user\n")),(0,i.kt)("p",null,"Choose your own ",(0,i.kt)("inlineCode",{parentName:"p"},"admin-user")," username. You will be asked for a password for the\nclient. This user will be assigned the ",(0,i.kt)("inlineCode",{parentName:"p"},"admin")," role, which has the following\naccess:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"publishClientSend: ",(0,i.kt)("inlineCode",{parentName:"li"},"$CONTROL/dynamic-security/#")," - this allows the client to\ncontrol the Dynamic security plugin."),(0,i.kt)("li",{parentName:"ul"},"publishClientReceive: ",(0,i.kt)("inlineCode",{parentName:"li"},"$CONTROL/dynamic-security/#")," - this allows the client\nto receive information from the plugin. This is not necessary in the default\nconfiguration, but is included in case the default behavior for\n",(0,i.kt)("inlineCode",{parentName:"li"},"publishClientReceive")," is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"deny"),"."),(0,i.kt)("li",{parentName:"ul"},"subscribePattern: ",(0,i.kt)("inlineCode",{parentName:"li"},"$CONTROL/dynamic-security/#")," - this allows the client to\nreceive information from the plugin."),(0,i.kt)("li",{parentName:"ul"},"publishClientReceive: ",(0,i.kt)("inlineCode",{parentName:"li"},"$SYS/#")," - this allows the client to see the broker\nmetrics."),(0,i.kt)("li",{parentName:"ul"},"subscribePattern: ",(0,i.kt)("inlineCode",{parentName:"li"},"$SYS/#")," - this allows the client to see the broker\nmetrics."),(0,i.kt)("li",{parentName:"ul"},"publishClientReceive: ",(0,i.kt)("inlineCode",{parentName:"li"},"#")," - this allows the client to examine the messages\nbeing published by other clients."),(0,i.kt)("li",{parentName:"ul"},"subscribePattern: ",(0,i.kt)("inlineCode",{parentName:"li"},"#")," - this allows the client to examine the messages\nbeing published by other clients."),(0,i.kt)("li",{parentName:"ul"},"unsubscribePattern: ",(0,i.kt)("inlineCode",{parentName:"li"},"#")," - this allows the client to undo previous\nsubscriptions. This is not necessary in the default configuration, but is\nincluded in case the default behavior for ",(0,i.kt)("inlineCode",{parentName:"li"},"unsubscribe")," is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"deny"),".")),(0,i.kt)("p",null,"The admin user does not have access to publish to normal application topics in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," hierarchy by default. You are strongly encouraged to keep the admin\nuser purely for administering the plugin, and create other clients for your\napplication."),(0,i.kt)("h2",u({},{id:"usage"}),"Usage"),(0,i.kt)("p",null,"All control of the plugin after initial installation is through the MQTT topic API at $CONTROL/dynamic-security/v1. This allows integrations to be built, but isn't the best choice for people to use directly."),(0,i.kt)("h3",u({},{id:"management-center"}),"Management Center"),(0,i.kt)("p",null,"Via the ",(0,i.kt)("a",u({parentName:"p"},{href:"/mosquitto/management-center/overview/configuration/mc-clients"}),"Cedalo Management Center"),", which provides a web user interface for managing the dynamic security feature."),(0,i.kt)("h3",u({},{id:"mosquitto_ctrl"}),"mosquitto_ctrl"),(0,i.kt)("p",null,"The mosquitto_ctrl command provided with Mosquitto implements support for the dynamic security plugin API, as described below. "),(0,i.kt)("p",null,"The initial configuration is the only time that ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl")," does not\nconnect to a broker to carry out the configuration. All other commands require\na connection to a broker, and hence a username, password, and whatever else is\nrequired for that particular connection. It is strongly recommended that your\nbroker connection uses encryption so that your configuration, including new\npasswords, is not transmitted in plain text."),(0,i.kt)("p",null,"The connection options must be given before the ",(0,i.kt)("inlineCode",{parentName:"p"},"dynsec")," part of the command\nline:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <connection options> dynsec <command> ...\n")),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl -u admin -h localhost dynsec <command> ...\n")),(0,i.kt)("p",null,"It is possible to provide the admin password on the command line using ",(0,i.kt)("inlineCode",{parentName:"p"},"-P\npassword"),", but this is not recommended. If you do not provide a password,\nmosquitto_ctrl will ask you to enter the password when it is needed."),(0,i.kt)("h4",u({},{id:"using-an-options-file"}),"Using an options file"),(0,i.kt)("p",null,"For convenience, mosquitto_ctrl can load an options file which contains a list\nof options it should use. This means you can set the encryption options, host,\nadmin username and any other options once and not have to add them to the\ncommand line every time."),(0,i.kt)("p",null,"mosquitto_ctrl will try to load a configuration file from a default location.\nFor Windows this is at ",(0,i.kt)("inlineCode",{parentName:"p"},"%USER_PROFILE%\\mosquitto_ctrl.conf"),". For other systems,\nit will try ",(0,i.kt)("inlineCode",{parentName:"p"},"$XDG_CONFIG_HOME/mosquitto_ctrl.conf")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.config/mosquitto_ctrl.conf"),"."),(0,i.kt)("p",null,"You may override this behavior by manually specifying an options file with\n",(0,i.kt)("inlineCode",{parentName:"p"},"-o <path to options file>"),"."),(0,i.kt)("p",null,"The options file should contain a list of options, one per line, exactly as\nthey would be provided on the command line. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"--cafile /path/to/my/CA.crt\n--certfile /path/to/my/client.crt\n--keyfile /path/to/my/client.key\n-u admin\n-h mosquitto.example.com\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",u({parentName:"p"},{href:"https://github.com/eclipse/mosquitto/blob/fixes/www/pages/documentation/dynamic-security.md#mosquitto_ctrl-options"}),"this page")," for the full list of options available for ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl"),"."),(0,i.kt)("h4",u({},{id:"configuring-default-access"}),"Configuring default access"),(0,i.kt)("p",null,"The initial configuration sets the default ACL type behaviors to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"publishClientSend"),": deny"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"publishClientReceive"),": allow"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"subscribe"),": deny"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unsubscribe"),": allow")),(0,i.kt)("p",null,"If you wish to change these, use ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl"),". "),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec setDefaultACLAccess publishClientSend deny\nmosquitto_ctrl <options> dynsec setDefaultACLAccess publishClientReceive deny\nmosquitto_ctrl <options> dynsec setDefaultACLAccess subscribe deny\nmosquitto_ctrl <options> dynsec setDefaultACLAccess unsubscribe deny\n")),(0,i.kt)("p",null,"You can examine the current default access with the ",(0,i.kt)("inlineCode",{parentName:"p"},"getDefaultACLAccess")," command:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec getDefaultACLAccess unsubscribe\n")),(0,i.kt)("h4",u({},{id:"creating-and-modifying-clients"}),"Creating and modifying clients"),(0,i.kt)("p",null,"To create a new client:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec createClient <username>\n")),(0,i.kt)("p",null,"This creates a client which does not have a client id associated with it. You\nwill be asked for the password for the new client before you are asked for the\nadmin user password. Pay attention to the messages on the command line."),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec createClient <username> -i <client id>\n")),(0,i.kt)("p",null,"This creates a client which has a client id associated with it."),(0,i.kt)("p",null,"To delete a client (clients connected with these credentials will be\ndisconnected from the broker):"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec deleteClient <username>\n")),(0,i.kt)("p",null,"To disable a client (clients connected with these credentials will be\ndisconnected from the broker):"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec disableClient <username>\n")),(0,i.kt)("p",null,"To enable a client (clients will be able to use these credentials to log in\nagain):"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec enableClient <username>\n")),(0,i.kt)("p",null,"To set a client password:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec setClientPassword <username>\nmosquitto_ctrl <options> dynsec setClientPassword <username> <password>\n")),(0,i.kt)("p",null,"To add/remove a role to/from a client:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec addClientRole <username> <rolename> <priority>\nmosquitto_ctrl <options> dynsec removeClientRole <username> <rolename>\n")),(0,i.kt)("p",null,"To get information on a client:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec getClient <username>\n")),(0,i.kt)("p",null,"To list all clients:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec listClients\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyClient")," command also exists in the topic API, but is not currently available in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl"),"."),(0,i.kt)("h4",u({},{id:"creating-and-modifying-groups"}),"Creating and modifying groups"),(0,i.kt)("p",null,"To create a new group:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec createGroup <groupname>\n")),(0,i.kt)("p",null,"To delete a group:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec deleteGroup <groupname>\n")),(0,i.kt)("p",null,"To add/remove a client to/from a group:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec addGroupClient <groupname> <username> <priority>\nmosquitto_ctrl <options> dynsec removeGroupClient <groupname> <username>\n")),(0,i.kt)("p",null,"In this case the ",(0,i.kt)("inlineCode",{parentName:"p"},"priority")," refers to the priority of the group within the\nclient's list of groups."),(0,i.kt)("p",null,"To add/remove a role to/from a group:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec addGroupRole <groupname> <rolename> <priority>\nmosquitto_ctrl <options> dynsec removeGroupRole <groupname> <rolename>\n")),(0,i.kt)("p",null,"To set/get the group that anonymous devices are assigned to:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec setAnonymousGroup <groupname>\nmosquitto_ctrl <options> dynsec getAnonymousGroup\n")),(0,i.kt)("p",null,"To get information on a group:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec getGroup <groupname>\n")),(0,i.kt)("p",null,"To list all groups:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec listGroups\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyGroup")," command also exists in the topic API, but is not currently\navailable in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl"),"."),(0,i.kt)("h4",u({},{id:"creating-and-modifying-roles"}),"Creating and modifying roles"),(0,i.kt)("p",null,"To create a new role:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec createRole <rolename>\n")),(0,i.kt)("p",null,"To delete a role:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec deleteRole <rolename>\n")),(0,i.kt)("p",null,"To add an ACL to a role:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec addRoleACL <rolename> <acltype> <topic filter> allow|deny <priority>\n")),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"acltype")," is one of ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientSend"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"publishClientReceive"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"subscribeLiteral"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"subscribePattern"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribeLiteral"),", and\n",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribePattern"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec addRoleACL <rolename> clientPublishSend client/topic allow 5\n")),(0,i.kt)("p",null,"To remove an ACL from a role using the topic filter as the key:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec removeRoleACL <rolename> <acltype> <topic filter>\n")),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec removeRoleACL <rolename> clientPublishSend client/topic\n")),(0,i.kt)("p",null,"To get information on a role:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec getRole <rolename>\n")),(0,i.kt)("p",null,"To list all roles:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"mosquitto_ctrl <options> dynsec listRoles\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyRole")," command also exists in the topic API, but is not currently\navailable in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl"),"."))}f.isMDXComponent=!0}}]);