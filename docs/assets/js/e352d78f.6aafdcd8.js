(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[70098],{83166:(e,t,a)=>{"use strict";var n=a(64836);t.Z=void 0;var i=n(a(64938)),o=a(85893),s=(0,i.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=s},2548:(e,t,a)=>{"use strict";var n=a(64836);t.Z=void 0;var i=n(a(64938)),o=a(85893),s=(0,i.default)((0,o.jsx)("path",{d:"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}),"InfoOutlined");t.Z=s},64938:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return n.createSvgIcon}});var n=a(22236)},22236:(e,t,a)=>{"use strict";a.r(t),a.d(t,{capitalize:()=>i.Z,createChainedFunction:()=>o,createSvgIcon:()=>s.Z,debounce:()=>r,deprecatedPropType:()=>l,isMuiElement:()=>u,ownerDocument:()=>m,ownerWindow:()=>h,requirePropFactory:()=>f,setRef:()=>g,unstable_ClassNameGenerator:()=>O,unstable_useEnhancedEffect:()=>v,unstable_useId:()=>b,unsupportedProp:()=>N,useControlled:()=>w,useEventCallback:()=>C.Z,useForkRef:()=>x.Z,useIsFocusVisible:()=>S.Z});var n=a(37078),i=a(36622);const o=function(...e){return e.reduce(((e,t)=>null==t?e:function(...a){e.apply(this,a),t.apply(this,a)}),(()=>{}))};var s=a(58175);const r=function(e,t=166){let a;function n(...n){clearTimeout(a),a=setTimeout((()=>{e.apply(this,n)}),t)}return n.clear=()=>{clearTimeout(a)},n};const l=function(e,t){return()=>null};var p=a(67294),c=a.t(p,2);const u=function(e,t){return p.isValidElement(e)&&-1!==t.indexOf(e.type.muiName)};function d(e){return e&&e.ownerDocument||document}const m=d;const h=function(e){return d(e).defaultView||window};a(87462);const f=function(e,t){return()=>null};const g=a(7960).Z;const v=a(16600).Z;let k=0;const y=c.useId;const b=function(e){if(void 0!==y){const t=y();return null!=e?e:t}return function(e){const[t,a]=p.useState(e),n=e||t;return p.useEffect((()=>{null==t&&(k+=1,a(`mui-${k}`))}),[t]),n}(e)};const N=function(e,t,a,n,i){return null};const w=function({controlled:e,default:t,name:a,state:n="value"}){const{current:i}=p.useRef(void 0!==e),[o,s]=p.useState(t);return[i?e:o,p.useCallback((e=>{i||s(e)}),[])]};var C=a(66875),x=a(78155),S=a(51625);const O={configure:e=>{console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.","","You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead","","The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401","","The updated documentation: https://mui.com/guides/classname-generator/"].join("\n")),n.Z.configure(e)}}},48368:(e,t,a)=>{"use strict";a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>f,default:()=>b,frontMatter:()=>h,metadata:()=>g,toc:()=>k});var n=a(3905),i=a(49044),o=a(87961),s=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))c.call(t,a)&&d(e,a,t[a]);if(p)for(var a of p(t))u.call(t,a)&&d(e,a,t[a]);return e};const h={id:"data-validation",title:"Data Validation",sidebar_label:"Data Validation"},f=void 0,g={unversionedId:"advanced-features/data-validation",id:"version-3.1/advanced-features/data-validation",title:"Data Validation",description:"The data validation plugin allows to discard received messages based on their payload structure before they are published by the",source:"@site/mosquitto_versioned_docs/version-3.1/advanced-features/data-validation.md",sourceDirName:"advanced-features",slug:"/advanced-features/data-validation",permalink:"/mosquitto/advanced-features/data-validation",draft:!1,tags:[],version:"3.1",frontMatter:{id:"data-validation",title:"Data Validation",sidebar_label:"Data Validation"},sidebar:"someSidebar",previous:{title:"Subscribe to Topics",permalink:"/mosquitto/mqtt-client/command-line/cl-subscribe"},next:{title:"Persistent Queueing",permalink:"/mosquitto/advanced-features/persistent-queueing"}},v={},k=[{value:"Plugin activation",id:"plugin-activation",level:2},{value:"Platform UI",id:"platform-ui",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Topic Mappings",id:"topic-mappings",level:3},{value:"Schemas",id:"schemas",level:3},{value:"JSON Schema",id:"json-schema",level:2}],y={toc:k};function b(e){var t,s=e,{components:d}=s,h=((e,t)=>{var a={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&u.call(e,n)&&(a[n]=e[n]);return a})(s,["components"]);return(0,n.kt)("wrapper",(t=m(m({},y),h),r(t,l({components:d,mdxType:"MDXLayout"}))),(0,n.kt)(i.Z,{mdxType:"PremiumFeature"}),(0,n.kt)(o.Z,{version:"3.1",mdxType:"SinceVersion3"}),(0,n.kt)("p",null,"The data validation plugin allows to discard received messages based on their payload structure before they are published by the\nMosquitto broker.\nTo decide whether a message is rejected, its payload is validated against a JSON schema."),(0,n.kt)("p",null,"Features:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Topic based message payload validation (",(0,n.kt)("a",m({parentName:"li"},{href:"#topic-mappings"}),"Topic Mappings"),")"),(0,n.kt)("li",{parentName:"ul"},"Use JSON schema to define the format of a valid payload (",(0,n.kt)("a",m({parentName:"li"},{href:"#schemas"}),"Schemas"),")"),(0,n.kt)("li",{parentName:"ul"},"Support for topic wildcards"),(0,n.kt)("li",{parentName:"ul"},"Multiple topics can be validated by one or several schemas")),(0,n.kt)("h2",m({},{id:"plugin-activation"}),"Plugin activation"),(0,n.kt)("p",null,"Ensure that the broker has a suitable license for using the Data Validation plugin.\nIf that is the case the plugin can be activated by adding the following to the ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file:"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{}),"plugin /usr/lib/cedalo_data_validation.so\n")),(0,n.kt)("admonition",m({},{type:"caution"}),(0,n.kt)("p",{parentName:"admonition"},"Please place this plugin before all other plugins in the mosquitto.conf.")),(0,n.kt)("h2",m({},{id:"platform-ui"}),"Platform UI"),(0,n.kt)("p",null,'The Cedalo Platform allows you to modify the configuration of the Data Validation plugin. Navigate to the broker, where you\nwant to manage the plugin. Then select "Data Validation" from the navigation. If the entry is not available, your license or setup does not allow to use the Data Validation plugin. Either update your license or modify your configuration to enable it.'),(0,n.kt)("p",null,'After selecting the "Data Validation" navigation entry, the following screen will appear (JSON contents might differ):'),(0,n.kt)("img",{className:"docimagemb",src:a(64472).Z,width:"100%"}),(0,n.kt)("p",null,"Here you can modify the configuration for the plugin. The configuration uses a json format, which is explained\nbelow. It has to match the json schema also provided below as well. Simply edit your configuration and save it once you are\ndone editing. The config is not saved automatically."),(0,n.kt)("p",null,"If the provided configuration contains invalid JSON, a hint is displayed below the editor. In case the structure of the new configuration does not comply with the ",(0,n.kt)("a",m({parentName:"p"},{href:"#json-schema"}),"JSON schema")," an error message will pop up."),(0,n.kt)("h2",m({},{id:"configuration"}),"Configuration"),(0,n.kt)("p",null,"The configuration consist of two parts:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"topicMappings"),": define which messages should be validated (",(0,n.kt)("a",m({parentName:"li"},{href:"#topic-mappings"}),"Topic Mappings"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"schemas"),": a list of schemas to validate message payload (",(0,n.kt)("a",m({parentName:"li"},{href:"#schemas"}),"Schemas"),")")),(0,n.kt)("h3",m({},{id:"topic-mappings"}),"Topic Mappings"),(0,n.kt)("p",null,"Topic mappings define which broker messages should be validated by assigning a schema to one or more topics.\nIt is possible to validate a message with multiple schemas. In that case the message payload must fulfill all schemas."),(0,n.kt)("admonition",m({},{type:"note"}),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"wildcards such as ",(0,n.kt)("inlineCode",{parentName:"li"},"+")," (single-level) or ",(0,n.kt)("inlineCode",{parentName:"li"},"#")," (multi-level) are supported too"),(0,n.kt)("li",{parentName:"ul"},"messages for which no matching topic mapping exists are not validated and therefore never discarded"),(0,n.kt)("li",{parentName:"ul"},"messages which have a mapped topic but no JSON payload are discarded by default"))),(0,n.kt)("p",null,"Following is an example of topic mappings that validate topic ",(0,n.kt)("inlineCode",{parentName:"p"},"topicA")," against schema ",(0,n.kt)("inlineCode",{parentName:"p"},"s1")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"topicB")," against\nschemas ",(0,n.kt)("inlineCode",{parentName:"p"},"s1")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"s2"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-json"}),'{\n    "topicMappings": [\n        {\n            "name": "mapping1",\n            "schema": "s1",\n            "topics": ["topicA", "topicB"]\n        },\n        {\n            "name": "mapping2",\n            "schema": "s2",\n            "topics": ["topicB"]\n        }\n    ]\n}\n')),(0,n.kt)("h3",m({},{id:"schemas"}),"Schemas"),(0,n.kt)("p",null,"A JSON schema defines the format that a message payload must fulfill. Each schema has a unique ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," property which is\nused to reference it within the ",(0,n.kt)("inlineCode",{parentName:"p"},"topicMappings"),". The complete JSON schema definition is simply specified\nunder ",(0,n.kt)("inlineCode",{parentName:"p"},"schema"),"."),(0,n.kt)("p",null,"Following example defines a schema ",(0,n.kt)("inlineCode",{parentName:"p"},"s1")," which requires a ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," property and another schema ",(0,n.kt)("inlineCode",{parentName:"p"},"s2")," which requires an ",(0,n.kt)("inlineCode",{parentName:"p"},"age"),"\nfield"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-json"}),'{\n    "schemas": [\n        {\n            "name": "s1",\n            "schema": {\n                "type": "object",\n                "properties": {\n                    "name": {\n                        "type": "string"\n                    }\n                },\n                "required": ["name"]\n            }\n        },\n        {\n            "name": "s2",\n            "schema": {\n                "type": "object",\n                "properties": {\n                    "age": {\n                        "type": "number"\n                    }\n                },\n                "required": ["age"]\n            }\n        }\n    ]\n}\n')),(0,n.kt)("h2",m({},{id:"json-schema"}),"JSON Schema"),(0,n.kt)("p",null,"Following schema is used by the Data Validation plugin to validate any new configuration JSON:"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-json"}),'{\n  "title": "Data Validation Plugin Configuration",\n  "description": "",\n  "type": "object",\n  "properties": {\n    "topicMappings": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "description": "Unique identifier of this topic mapping."\n          },\n          "schema": {\n            "type": "string",\n            "description": "Name of JSON schema to use for validating the message payload."\n          },\n          "topics": {\n            "type": "array",\n            "description": "List of topics whose payload should be validated against specified schema.",\n            "items": {\n              "type": "string"\n            }\n          }\n        },\n        "required": [\n          "name",\n          "schema",\n          "topics"\n        ]\n      }\n    },\n    "schemas": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "description": "Unique identifier. Used to reference this schema within topic mapping."\n          },\n          "schema": {\n            "type": "object",\n            "description": "A JSON schema definition to validate the message payload."\n          }\n        },\n        "required": [\n          "name",\n          "schema"\n        ]\n      }\n    }\n  },\n  "required": [\n    "topicMappings",\n    "schemas"\n  ]\n};\n\n\n')))}b.isMDXComponent=!0},49044:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(67294),i=a(39082),o=a(62659),s=a(83166);function r({inline:e}){return n.createElement(i.Z,{sx:{margin:e?"0px 5px":"0px 5px 5px 10px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:n.createElement(s.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},87961:(e,t,a)=>{"use strict";a.d(t,{Z:()=>s});var n=a(67294),i=a(39082),o=a(2548);function s({version:e}){return e?n.createElement(i.Z,{sx:{margin:"0px 5px 5px 10px",bgcolor:"#FD602E"},color:"info",size:"small",icon:n.createElement(o.Z,{size:"small"}),label:`Version ${e}`}):n.createElement(n.Fragment,null)}},64472:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/data_validation-580f8b2cfe7683be30a199f706892039.png"},64836:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports}}]);