"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[56674],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>c});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(i),c=a,f=d["".concat(s,".").concat(c)]||d[c]||m[c]||r;return i?n.createElement(f,o(o({ref:t},u),{},{components:i})):n.createElement(f,o({ref:t},u))}));function c(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=i[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},49111:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>S,frontMatter:()=>d,metadata:()=>f,toc:()=>y});var n=i(3905),a=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,i)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,m=(e,t)=>{for(var i in t||(t={}))s.call(t,i)&&u(e,i,t[i]);if(l)for(var i of l(t))p.call(t,i)&&u(e,i,t[i]);return e};const d={id:"platform-saml-auth",title:"SAML Authentication/SSO",sidebar_label:"SAML Authentication/SSO"},c=void 0,f={unversionedId:"security/platform-access/platform-saml-auth",id:"version-3.0/security/platform-access/platform-saml-auth",title:"SAML Authentication/SSO",description:"This feature is only available in the enterprise version.",source:"@site/mosquitto_versioned_docs/version-3.0/security/platform-access/platform-saml-auth.md",sourceDirName:"security/platform-access",slug:"/security/platform-access/platform-saml-auth",permalink:"/mosquitto/security/platform-access/platform-saml-auth",draft:!1,tags:[],version:"3.0",frontMatter:{id:"platform-saml-auth",title:"SAML Authentication/SSO",sidebar_label:"SAML Authentication/SSO"},sidebar:"someSidebar",previous:{title:"OIDC Authentication/SSO",permalink:"/mosquitto/security/platform-access/platform-oidc-auth"},next:{title:"Server Certificates",permalink:"/mosquitto/security/certificates/server-certificates"}},h={},y=[{value:"SAML SSO (Single Sign-On)",id:"saml-sso-single-sign-on",level:2},{value:"Terminology",id:"terminology",level:3},{value:"SP Endpoints",id:"sp-endpoints",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Limitations",id:"limitations",level:3}],k={toc:y};function S(e){var t,i=e,{components:a}=i,u=((e,t)=>{var i={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&p.call(e,n)&&(i[n]=e[n]);return i})(i,["components"]);return(0,n.kt)("wrapper",(t=m(m({},k),u),r(t,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("admonition",m({},{type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"This feature is only available in the enterprise version.")),(0,n.kt)("h2",m({},{id:"saml-sso-single-sign-on"}),"SAML SSO (Single Sign-On)"),(0,n.kt)("p",null,"SAML-based SSO feature enables support for any SSO provider that supports authentication flow based on SAML 2.0 protocol."),(0,n.kt)("p",null,"This feature can be configured by specifying several environment variables for Mosquitto MQTT Platform."),(0,n.kt)("h3",m({},{id:"terminology"}),"Terminology"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Single Sign On (SSO) - The process of using a single account to login across many applications")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Single Log Out (SLO, sometimes also called Single Sign Out) - The process of terminating all active sessions associated with the same user across all connected applications when the user logs out from one application.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"SAML - XML-based communication protocol used for the SSO and SLO processes when exchanging messages between SP and IdP.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Service Provider (SP) - Application that acts as a client in the SSO process and communicates with Identity Provider to authenticate users. In simple terms, it is an application that users sign into using SSO.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Identity Provider (IdP) - A centralized entity facilitating SSO process that users authenticate into. After successful authentication it securely communicates user identity data with SPs allowing users to access them."))),(0,n.kt)("h3",m({},{id:"sp-endpoints"}),"SP Endpoints"),(0,n.kt)("p",null,"You will need to configure the Assertion Consumer Service (ACS) URL in your identity provider. The URL for Mosquitto Platform is ",(0,n.kt)("inlineCode",{parentName:"p"},"<platform_host_url>/api/oauth/saml")," and it expects a POST request containing a SAML response object obtained after a successful authentication to the identity provider."),(0,n.kt)("admonition",m({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},"SAML is a distinct protocol different from OAuth 2.0, so the two should not be mixed up. The reason for naming > callback endpoint ",(0,n.kt)("inlineCode",{parentName:"p"},"api/oauth/saml")," is due to internal implementation trying to transform standard SAML flow to > mimic the OAuth 2.0 flow for consistency with other authentication methods. This does not require any changes > configuration changes and is being mentioned to avoid confusion.")),(0,n.kt)("p",null,"In case you need to redirect your identity provider to the application's error page, you may use ",(0,n.kt)("inlineCode",{parentName:"p"},"<platform_host_url>/auth/error"),". If you need to specify a particular error then: ",(0,n.kt)("inlineCode",{parentName:"p"},"<platform_host_url>/auth/error?error=someError"),". This is however a non-standard convenience redirect, so unlike ACS URL you won't need to worry about it for most Identity Providers."),(0,n.kt)("h3",m({},{id:"configuration"}),"Configuration"),(0,n.kt)("p",null,"It's recommended (but not required) to start with a clean Platform that doesn't have any users. You can delete ",(0,n.kt)("inlineCode",{parentName:"p"},"mosquitto-enterprise.sqlite3")," file to achieve this and restart the platform. The file is stored in the data directory which depends on your installation, but in Docker environments it's usually called ",(0,n.kt)("inlineCode",{parentName:"p"},"data"),", while for an RPM-package it's located under ",(0,n.kt)("inlineCode",{parentName:"p"},"var/opt/cedalo/mosquitto-platform"),". You can also manually delete your users as an administrator or by signing in one user at a time and navigating to ",(0,n.kt)("inlineCode",{parentName:"p"},"Settings")," -> ",(0,n.kt)("inlineCode",{parentName:"p"},"Delete account"),". A crucial point is to make sure you don't have any existing Platform users that use the same email as SSO users you want to add."),(0,n.kt)("p",null,"In order to enable the feature you have to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Set ",(0,n.kt)("inlineCode",{parentName:"p"},"BASE_URL")," environment variable to point to an internal URL of your Mosquitto Platform. Alternatively, set ",(0,n.kt)("inlineCode",{parentName:"p"},"NEXTAUTH_URL")," to point to an external URL.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Make sure you don't have any existing Platform users that use the same email as SSO flow.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Add ",(0,n.kt)("inlineCode",{parentName:"p"},"saml")," to the comma separated list of authentication providers specified in ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_PROVIDERS")," environement variable.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Specify ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_SP_ENTITY_ID")," which represents Mosquitto Platform's entity ID configured in your identity provider such as AzureID, Okta, OneLogin etc.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Specify SSO email addresses that you want to register in Mosquitto Platform as a comma separated list in the ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_ALLOWED_SIGNUP_EMAILS")," environemnt varaible.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Specify your SAML metadata url via ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_SAML_METADATA_URL"),". If instead you have a metadata file, use ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_RAW_SAML_METADATA_FILE_PATH")," to specify its full path. For raw or base64 metadata, specify ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_RAW_SAML_METADATA"),".")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If you want to configure signle logout (SLO), specify ",(0,n.kt)("inlineCode",{parentName:"p"},"AUTH_CUSTOM_SLO_URL")," environment varaible which should point to your identity provider's SLO endpoint.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"After specifying all the required environment variables, you can start Mosquitto Platform and open it in your browser. If you don't have any users you will be greeted with a Setup screen where you can choose SSO option to create an admin user and sign in. In case you already have users in the platform, you will have to login using an admin account.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'After you are signed in as an admin, you can click on the top-right menu and choose "Admin board".')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'Navigate to "User management" and create new users specifying ',(0,n.kt)("inlineCode",{parentName:"p"},"SSO")," as a user type.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'You can also choose to make some users admins in "Administrators" section on the left-hand side.')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"After users were created, they can be used to login to the Platform by choosing the SSO option on the login page."))),(0,n.kt)("p",null,"You can optionally specify the following variables:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_NAME")," to display a different provider name on the SSO button on login and signup pages. Default name is ",(0,n.kt)("inlineCode",{parentName:"li"},"SSO"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_IMAGE_CLAIM")," to specify a claim of the user object returned by your identity provider where user profile image is stored."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_IMAGE_URL")," to set a default image for your users. Example: ",(0,n.kt)("inlineCode",{parentName:"li"},"https://my-org.org/media/profile)image.png"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_LOGO_URL")," to set a default logo for the SSO button. Example: ",(0,n.kt)("inlineCode",{parentName:"li"},"https://my-org.org/media/logo.png"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_EMAIL_CLAIM")," to specify a non-standard claim of the user object returned by your identity provider where email is stored. If a standard claim is used, i.e. ",(0,n.kt)("inlineCode",{parentName:"li"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"),", there is no need to specify this variable."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_FIRSTNAME_CLAIM")," to specify a non-standard claim of the user object returned by your identity provider that stores first name. If a standard claim is used, i.e. ",(0,n.kt)("inlineCode",{parentName:"li"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"),", there is no need to specify this varaible."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_LASTNAME_CLAIM")," to specify a non-standard claim of the user object returned by your identity provider that stores last name. If a standard claim is used, i.e. ",(0,n.kt)("inlineCode",{parentName:"li"},"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"),", there is no need to specify this varaible."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_PROFILE_NAME_CLAIM")," to specify a non-standard claim of the user object returned by your identity provider that stores both first name and last name separated by a space. This variable doesn't need to be specified if there are separate claims for the first name and last name in your user object. When this claim is specified you also have to specify ",(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_INFER_NAME")," and set it to 1."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_INFER_NAME")," - whether to try to extract user's first name and last name from the name or email claims if they were not found. This extraction will try to remove everything after the ",(0,n.kt)("inlineCode",{parentName:"li"},"@")," symbol in the email or name fields and look for a seperator such as ",(0,n.kt)("inlineCode",{parentName:"li"},"."),", ",(0,n.kt)("inlineCode",{parentName:"li"},"-"),", ",(0,n.kt)("inlineCode",{parentName:"li"}," "),", or ",(0,n.kt)("inlineCode",{parentName:"li"},"_"),". If a separator is found, the first part of the string before it becomes user's first name and second part - their last name. You can set this varaible to 1 to enbale the inference. If this variable is not set or first and last name could not be extracted, you will be able to set manually them in user's account settings after login.")),(0,n.kt)("p",null,"In case your identity provider does not expose metadata, you can specify the following instead:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_IDP_ENTITY_ID")," to specify entity id of the identity provider."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_IDP_CERTIFICATE")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_IDP_CERTIFICATE_FILE_PATH")," to specify identity provider's certificate as a plain string or file path respectively."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_IDP_URL")," to specify identity provider's signin URL."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_IDP_BINDINGS")," to optionally specify a comma separated list of HTTP bindings (Redirect or POST) which can typically be safely ommited. Example: ",(0,n.kt)("inlineCode",{parentName:"li"},"httpRedirect,httpPost"),". These bindings specify which request type (",(0,n.kt)("inlineCode",{parentName:"li"},"GET")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"POST"),") should be used to redirect to your IdP.")),(0,n.kt)("p",null,"To debug SSO flow:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Set ",(0,n.kt)("inlineCode",{parentName:"li"},"AUTH_CUSTOM_DEBUG")," environement variable to ",(0,n.kt)("inlineCode",{parentName:"li"},"1"))),(0,n.kt)("admonition",m({},{type:"info"}),(0,n.kt)("p",{parentName:"admonition"},'Sometimes entity id fields can be called "issuer" or "audience" on the side of the identity provider. Issuer is typically used for IdP entity ID, while audience often represent\'s SP\'s entity ID.')),(0,n.kt)("h3",m({},{id:"limitations"}),"Limitations"),(0,n.kt)("p",null,"Currently, Mosquitto MQTT Platform doesn't supports IdP initiated SLO. This means that if a user initates an SLO process from a different application, identity provider will not be able to relay this request to the Mosquitto MQTT Platform to terminate its user session. Platform is currently only able to initiate SLO requests but not receive them when they originate from other apps."))}S.isMDXComponent=!0}}]);