"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[33275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=o,h=c["".concat(l,".").concat(d)]||c[d]||p[d]||i;return n?a.createElement(h,r(r({ref:t},m),{},{components:n})):a.createElement(h,r({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},11922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>y,frontMatter:()=>c,metadata:()=>h,toc:()=>k});var a=n(3905),o=Object.defineProperty,i=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&m(e,n,t[n]);if(s)for(var n of s(t))u.call(t,n)&&m(e,n,t[n]);return e};const c={id:"high-availability",title:"Kubernetes High Availability",sidebar_label:"High Availability"},d=void 0,h={unversionedId:"deployment/on-premises/deployment/installation/kubernetes/high-availability",id:"version-3.1/deployment/on-premises/deployment/installation/kubernetes/high-availability",title:"Kubernetes High Availability",description:"This setup will deploy HA Mosquitto broker and Platform on a managed kubernetes cluster like GKE (Google), EKS (Amazon) or Azure Kubernetes using Helm charts.",source:"@site/mosquitto_versioned_docs/version-3.1/deployment/on-premises/deployment/installation/kubernetes/high-availability.md",sourceDirName:"deployment/on-premises/deployment/installation/kubernetes",slug:"/deployment/on-premises/deployment/installation/kubernetes/high-availability",permalink:"/mosquitto/deployment/on-premises/deployment/installation/kubernetes/high-availability",draft:!1,tags:[],version:"3.1",frontMatter:{id:"high-availability",title:"Kubernetes High Availability",sidebar_label:"High Availability"},sidebar:"someSidebar",previous:{title:"Single Node",permalink:"/mosquitto/deployment/on-premises/deployment/installation/kubernetes/single-node"},next:{title:"High Availability Autoscaling",permalink:"/mosquitto/deployment/on-premises/deployment/installation/kubernetes/high-availability-autoscaling"}},g={},k=[{value:"Kubernetes Cluster Setup",id:"kubernetes-cluster-setup",level:2},{value:"Dependencies and Prerequisites",id:"dependencies-and-prerequisites",level:3},{value:"Installation",id:"installation",level:2},{value:"Installation using Helm Charts:",id:"installation-using-helm-charts",level:3},{value:"Further possible Configurations",id:"further-possible-configurations",level:4},{value:"Connect to cluster",id:"connect-to-cluster",level:2},{value:"Usage",id:"usage",level:2}],f={toc:k};function y(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=p(p({},f),m),i(t,r({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"This setup will deploy HA Mosquitto broker and Platform on a managed kubernetes cluster like GKE (Google), EKS (Amazon) or Azure Kubernetes using Helm charts.\nThis setup would deploy a 3 Mosquitto broker as a statefulsets. Also, a Platform pod and HA-proxy pods replica as a deployment entity. This deployment by default uses a Persistent volumes for persistence. We use HA Proxy as an endpoint in front of the mosquitto pods. The user connects to HAproxy endpoint and"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HA-PROXY Configurations"),"\nHA-proxy need to be configured accordingly for the kubernetes setup. For server m1, m2 and m3 needs to be configured in this case. Instead of using docker IP we would use DNS names to address the pods. For eg\n",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0.mosquitto.ha.svc.cluster.local"),". Here ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-0"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-1"),",",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto-2")," are the name of individual mosquitto pods running as statefulsets. Each new pod would increase its pod-ordinal by 1. Rest can be defined as follows\n",(0,a.kt)("inlineCode",{parentName:"p"},"<pod-name>.<name-of-the-statefulset>.<namespace>.svc.cluster.local")),(0,a.kt)("p",null,'Your setup folder comes along with a default configuration of haproxy config which is given below. This assumes that your using namespace name as "ha". You can also change the namespace during the installation and this would be directly reflected in your haproxy configuration.'),(0,a.kt)("pre",null,(0,a.kt)("code",p({parentName:"pre"},{}),"global\n    daemon\n    maxconn 4096\n\nfrontend mqtt_frontend\n    bind *:1883\n    mode tcp\n    default_backend mqtt_backend\n    timeout client 10m\n\nbackend mqtt_backend\n    timeout connect 5000\n    timeout server 10m\n    mode tcp\n    option redispatch\n    server m1 mosquitto-0.mosquitto.ha.svc.cluster.local:1888 check on-marked-down shutdown-sessions\n    server m2 mosquitto-1.mosquitto.ha.svc.cluster.local:1888 check on-marked-down shutdown-sessions\n    server m3 mosquitto-2.mosquitto.ha.svc.cluster.local:1888 check on-marked-down shutdown-sessions\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Note"),": Make sure to add more entries to this haproxy-config.yaml file if you wish to add more mosquitto nodes to this cluster. You would have to reconfigure the haproxy-config.yaml in that case."),(0,a.kt)("h2",p({},{id:"kubernetes-cluster-setup"}),"Kubernetes Cluster Setup"),(0,a.kt)("h3",p({},{id:"dependencies-and-prerequisites"}),"Dependencies and Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Running managed kubernetes setup (GKE, EKS, AKS etc). Follow documentation guide for the respective kubernetes cluster to create a cluster on your chosen cloud provider."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Create a namespace")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Once you are connected to your Kubernetes setup and can access the cluster using ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl")," tool. Create a namespace in which you would want to deploy the application. The deployment folder is pre-configured for the namespace named ",(0,a.kt)("inlineCode",{parentName:"li"},"ha"),". If you want to use the default configuration you can create a namespace named ",(0,a.kt)("inlineCode",{parentName:"li"},"ha")," using the below command:"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create namespace ha")),(0,a.kt)("li",{parentName:"ul"},"If you want to use a different namespace, use the command: ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl create namespace <your-custom-namespace>"),".  Replace ",(0,a.kt)("inlineCode",{parentName:"li"},"<your-custom-namespace>")," with the name of the namespace you want to configure.")))),(0,a.kt)("h2",p({},{id:"installation"}),"Installation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prerequisites"),":\nKubernetes Cluster should be up and running. If you are yet to setup the cluster, refer ",(0,a.kt)("a",p({parentName:"p"},{href:"#kubernetes-cluster-setup"}),"Kubernetes Cluster Setup"),".\nOnce kubernetes cluster is up and running then you can now follow these steps to install the HA Mosquitto broker setup:"),(0,a.kt)("h3",p({},{id:"installation-using-helm-charts"}),"Installation using Helm Charts:"),(0,a.kt)("p",null,"Helm charts offer a comprehensive solution for configuring various Kubernetes resources\u2014including stateful sets, deployment templates, services, and service accounts\u2014through a single command, streamlining the deployment process. When the user downloads helm package from the Platform license key is already part of the package."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Get the helm chart")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Make sure you have the helm chart  ",(0,a.kt)("inlineCode",{parentName:"li"},"mosquitto-ha-3.0.0.tgz"),"."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Helm Chart:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Use the following ",(0,a.kt)("inlineCode",{parentName:"p"},"helm install")," command to deploy the Mosquitto application on to your Kubernetes cluster. Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"<release-name>")," with the desired name for your Helm release and ",(0,a.kt)("inlineCode",{parentName:"p"},"<namespace>")," with your chosen Kubernetes namespace:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"helm install <release-name>  mosquitto-ha-3.0.0.tgz  -n <namespace>  --set imageCredentials.registry=registry.cedalo.com --set imageCredentials.username=<username> --set imageCredentials.password=<password> --set imageCredentials.email=<email> \n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"namespace"),": Set it to the namespace of your deployment.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"imageCredentials.username"),": Your docker username provided by Cedalo team.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"imageCredentials.password"),": Your docker password provided by Cedalo team.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"imageCredentials.email"),": Registered e-mail for accessing docker registry.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Sample example: If  your arbitrary release name is ",(0,a.kt)("inlineCode",{parentName:"p"},"sample-release-name"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"email")," be ",(0,a.kt)("inlineCode",{parentName:"p"},"demo-username"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"demo-password")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"demo@gmail.com")," then your helm installation command should be:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"   helm install sample-release-name  mosquitto-ha-3.0.0.tgz  -n ha --set imageCredentials.registry=registry.cedalo.com --set imageCredentials.username=demo-username --set imageCredentials.password=demo-password --set imageCredentials.email=demo@gmail.com \n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can monitor the running pods using the ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods -o wide -n <namespace>")," command. To observe the service endpoints ports use ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get svc -n <namespace>"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The default type of cluster would a HA cluster.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To uninstall the setup:\n",(0,a.kt)("inlineCode",{parentName:"p"},"helm uninstall <release-name> -n <namespace>")))),(0,a.kt)("p",null,"Your Mosquitto setup is now running  with three single mosquitto nodes in a HA cluster along with a Platform portal."),(0,a.kt)("h4",p({},{id:"further-possible-configurations"}),"Further possible Configurations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Add Nodes"),"\nIf you want to add more nodes to the existing cluster of three nodes. Make sure your license allows more than three nodes before proceeding. You can follow the steps to add more nodes"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",p({parentName:"pre"},{}),"- Configure your HA-proxy by adding entries to the haproxy-config.yaml.\n- `haproxyconfig` configmap is part of the compressed Helm chart. Therefore, to edit the configmap, uncompress the helm chart using the following command:\n    -    `tar -xzvf mosquitto-ha-3.0.0.tgz`\n    -   `cd mosquitto-ha-3.0.0/templates/`\n    -  Edit `haconfig.yaml` by adding below mentioned line at end the the file\n  `server m4 mosquitto-3.mosquitto.<namespace>.svc.cluster.local:1888 check on-marked-down shutdown-sessions`. Replace `<namespace>` with your chosen namespace. This config line assumes you are adding the fourth node. You can add more more nodes similarly however make sure you update the server address.\n- Go back to the parent directory:\n  `cd ../`\n- Package the helm chart to its original form using:\n  `helm package mosquitto-ha-3.0.0`\n- Uninstall the existing helm deployment, if you want to completely remove existing setup:\n  `helm uninstall <release-name> -n <namespace>`\n- Reinstall helm package if you used `helm uninstall`, so that new configmaps can come into effect (Use the same command you used to install it the first time with appropriate flags. Below command example is just a reference)\n   ```bash\n    helm install <release-name>  mosquitto-ha-3.0.0.tgz  -n <namespace>  --set imageCredentials.registry=registry.cedalo.com --set imageCredentials.username=<username> --set imageCredentials.password=<password> --set imageCredentials.email=<email> \n  ```\n- If you want to upgrade your existing setup without uninstalling it. You can also upgrade the existing setup using `helm upgrade`. You can upgrade it using a similar command to `helm install`. Below\n    ```bash\n    helm upgrade <release-name>  mosquitto-ha-3.0.0.tgz  -n <namespace>  --set imageCredentials.registry=registry.cedalo.com --set imageCredentials.username=<username> --set imageCredentials.password=<password> --set imageCredentials.email=<email> \n  ```\n- As you have now added the haproxy config and installed the mosquitto node. In order to scale the number of pods from the existing three mosquitto pods, you can scale the Kubernetes replica count of statefulset to desired number. For eg if you want to increase the number of nodes from default three nodes to four nodes you can use the following command:\n  ` Kubectl scale statefulsets mosquitto --replicas=4 -n <namespace>`\n- Adding new node to existing cluster:\n    - Navigate to `Connections` section on Platform portal and click `Edit`.\n    -  Click  `Add Node`.\n    - Fill in the details like `Name` and  `Private Address` (make sure that the `Private Address`  does not conflict with the existing ones), `NAME`: name of the connection (you can choose your own name).\n    - `URL`: `mqtt://mosquitto-x.mosquitto.<namespace>.svc.cluster.local:1885`  . Replace `x` in `mosquitto-x` with a valid number based on the which node you are adding. If you are adding a fourth node and the name of your namespace is  `ha` then the entry would be `mqtt://mosquitto-3.mosquitto.multinode.svc.cluster.local:1885`. If you are adding a fifth node and the name of your namespace is  `ha` then the entry would be `mqtt://mosquitto-4.mosquitto.ha.svc.cluster.local:1885`.\n    - Add your username and password given by the cedalo team, select/deselect further options.\n    - Select `Test Connection` to verify your connection. If the connection succeeds proceed to next step or else verify your configuration.\n    - Select `Add Node` and  click `Save`.\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Remove Nodes")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You can start by removing the node configuration from the existing cluster using the ",(0,a.kt)("inlineCode",{parentName:"li"},"Cluster Node")," section in the Platform portal and delete the additional node. Make sure you maintain at least 3 nodes in the cluster for HA ."),(0,a.kt)("li",{parentName:"ul"},"Then you can set the replica count to desired number. For eg if you want to decrease the number of nodes from four nodes to three nodes you can use the following command.\n",(0,a.kt)("inlineCode",{parentName:"li"}," kubectl  scale statefulsets mosquitto --replicas=3 -n <namespace>")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Further Useful Commands")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If you want to change mosquitto.conf, you can do so by uncompressing the helm chart, making the required changes and packaging the helm charts again. The detailed procedure is mentioned below:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tar -xzvf mosquitto-ha-3.0.0.tgz")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cd mosquitto-ha-3.0.0/files/")),(0,a.kt)("li",{parentName:"ul"},"Make changes to ",(0,a.kt)("inlineCode",{parentName:"li"},"mosquitto.conf")," and save it."),(0,a.kt)("li",{parentName:"ul"},"Go back to the parent directory:\n",(0,a.kt)("inlineCode",{parentName:"li"},"cd ../")),(0,a.kt)("li",{parentName:"ul"},"Package the helm chart to its original form using:\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm package mosquitto-ha-3.0.0")),(0,a.kt)("li",{parentName:"ul"},"Uninstall helm package\n",(0,a.kt)("inlineCode",{parentName:"li"},"helm uninstall <release-name> -n <namespace>")),(0,a.kt)("li",{parentName:"ul"},"Reinstall the helm package using the same ",(0,a.kt)("inlineCode",{parentName:"li"},"helm install")," command you used the first time or do a ",(0,a.kt)("inlineCode",{parentName:"li"},"helm upgrade"),"."))),(0,a.kt)("li",{parentName:"ul"},"You can similarly change any other configuration like ",(0,a.kt)("inlineCode",{parentName:"li"},"sql-bridge")," configuration, repackage the helm chart and install to bring changes into effect.")))),(0,a.kt)("h2",p({},{id:"connect-to-cluster"}),"Connect to cluster"),(0,a.kt)("p",null,"Once your setup is ready, you can access the mosquitto brokers using the external ip of the haproxy service deployed to connect to the cluster from the outside world.\nGo to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Client Account"),' menu and create a new client to connect from. Make sure to assign a role, like the default "client" role, to allow your client to publish and/or subscribe to topics.\nNow you can connect to the Mosquitto cluster. You can access it either with connecting it directly to worker node running the haproxy pod along with a service exposed at port 1883:'),(0,a.kt)("p",null,"To get the external ip of HAproxy service:\n",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get service haproxy -n <namespace>")),(0,a.kt)("p",null,"In this example command we use Mosquitto Sub to subscribe onto all topics:\n",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_sub -h <external-ip-of-haproxy> -p 1883 -u <username> -P <password> -t '#'")),(0,a.kt)("p",null,"Make sure to replace your IP, username and password."),(0,a.kt)("h2",p({},{id:"usage"}),"Usage"),(0,a.kt)("p",null,"Once the installation is complete, you can start using the multi-node Mosquitto broker. Be sure to check the Mosquitto documentation for further details on configuring and using the broker"))}y.isMDXComponent=!0}}]);