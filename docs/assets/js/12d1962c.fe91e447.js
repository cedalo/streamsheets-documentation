"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[83497],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=u(r),d=a,f=c["".concat(s,".").concat(d)]||c[d]||p[d]||l;return r?n.createElement(f,o(o({ref:t},m),{},{components:r})):n.createElement(f,o({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},11290:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>k,frontMatter:()=>c,metadata:()=>f,toc:()=>b});var n=r(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&m(e,r,t[r]);if(i)for(var r of i(t))u.call(t,r)&&m(e,r,t[r]);return e};const c={id:"inboxdata",title:"INBOXDATA",sidebar_label:"INBOXDATA"},d=void 0,f={unversionedId:"functions/streamsheet/inboxdata",id:"version-2.5/functions/streamsheet/inboxdata",title:"INBOXDATA",description:"Creates a JSON key from the given values or range to retrieve data from within a message. This function is normally used in the READ function. INBOXDATA retrieves values from the Data section of a message.",source:"@site/streamsheets_versioned_docs/version-2.5/functions/streamsheet/inboxdata.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/inboxdata",permalink:"/streamsheets/functions/streamsheet/inboxdata",draft:!1,tags:[],version:"2.5",frontMatter:{id:"inboxdata",title:"INBOXDATA",sidebar_label:"INBOXDATA"},sidebar:"version-2.5/someSidebar",previous:{title:"INBOX",permalink:"/streamsheets/functions/streamsheet/inbox"},next:{title:"INBOXMETADATA",permalink:"/streamsheets/functions/streamsheet/inboxmetadata"}},h={},b=[],g={toc:b};function k(e){var t,r=e,{components:a}=r,m=((e,t)=>{var r={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=p(p({},g),m),l(t,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Creates a JSON key from the given values or range to retrieve data from within a message. This function is normally used in the READ function. INBOXDATA retrieves values from the Data section of a message."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Syntax")),(0,n.kt)("p",null,"=INBOXDATA(Streamsheet, Message, ValuesOrRange)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Arguments")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Streamsheet"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Define the Streamsheet to retrieve inbox data from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Message"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Message to retrieve data from. If left empty, the current message in the inbox is used.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),"ValuesOrRange"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"A list of values or a range of cells describing the path to the element path within a JSON structure.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Return")),(0,n.kt)("p",null,"A string key to provide a path within a message."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Formula"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("th",p({parentName:"tr"},{align:null}),"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,'=INBOXDATA(,, "Customer", "Name")'))),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"[P1][]","[Customer][Name]"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Returns an identifier that can be used in other Streamsheet functions like READ. As Streamsheet and Message are left empty, the current Streamsheet and inbox Message is used.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,"=INBOXDATA(,, B1:B2)"))),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"[P1][]","[Customer][Name]"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),'Here the values within the cell range B1:B2 ("Customer", "Name") will be used to concatenate the JSON path.')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",p({parentName:"tr"},{align:null}),(0,n.kt)("pre",null,(0,n.kt)("code",null,'=READ(INBOXDATA(,, "Customer", "Name"), C7, "String")'))),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"Name"),(0,n.kt)("td",p({parentName:"tr"},{align:null}),"The READ function return the last part of the JSON Path. The value of the Message at the given Path will be pushed into cell C7.")))))}k.isMDXComponent=!0}}]);