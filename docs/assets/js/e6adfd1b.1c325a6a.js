"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[99873],{83166:(e,t,n)=>{var i=n(64836);t.Z=void 0;var a=i(n(64938)),o=n(85893),l=(0,a.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=l},3374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>m,default:()=>C,frontMatter:()=>h,metadata:()=>k,toc:()=>b});var i=n(3905),a=n(49044),o=Object.defineProperty,l=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(s)for(var n of s(t))d.call(t,n)&&c(e,n,t[n]);return e};const h={id:"mosquitto-jwt-auth",title:"JWT Authentication",sidebar_label:"JWT Authentication"},m=void 0,k={unversionedId:"security/clients/mosquitto-jwt-auth",id:"version-3.1/security/clients/mosquitto-jwt-auth",title:"JWT Authentication",description:"The JWT Authentication plugin can be used to authenticate MQTT clients using JSON web tokens instead of a password.",source:"@site/mosquitto_versioned_docs/version-3.1/security/clients/JWT-auth.md",sourceDirName:"security/clients",slug:"/security/clients/mosquitto-jwt-auth",permalink:"/mosquitto/security/clients/mosquitto-jwt-auth",draft:!1,tags:[],version:"3.1",frontMatter:{id:"mosquitto-jwt-auth",title:"JWT Authentication",sidebar_label:"JWT Authentication"},sidebar:"someSidebar",previous:{title:"Force Username",permalink:"/mosquitto/security/clients/security-username"},next:{title:"LDAP Authentication",permalink:"/mosquitto/security/clients/mosquitto-ldap-auth"}},f={},b=[{value:"Plugin Activation",id:"plugin-activation",level:2},{value:"Config File Format",id:"config-file-format",level:2},{value:"Configuration example",id:"configuration-example",level:2},{value:"Error handling",id:"error-handling",level:2},{value:"Notable behavior",id:"notable-behavior",level:2},{value:"Limitations",id:"limitations",level:2},{value:"JSON Schema",id:"json-schema",level:2}],N={toc:b};function C(e){var t,n=e,{components:o}=n,c=((e,t)=>{var n={};for(var i in e)p.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&s)for(var i of s(e))t.indexOf(i)<0&&d.call(e,i)&&(n[i]=e[i]);return n})(n,["components"]);return(0,i.kt)("wrapper",(t=u(u({},N),c),l(t,r({components:o,mdxType:"MDXLayout"}))),(0,i.kt)(a.Z,{mdxType:"PremiumFeature"}),(0,i.kt)("h1",u({},{id:"pro-mosquitto-jwt-authentication"}),"Pro Mosquitto JWT Authentication"),(0,i.kt)("p",null,"The JWT Authentication plugin can be used to authenticate MQTT clients using JSON web tokens instead of a password."),(0,i.kt)("p",null,"To use the plugin, a configuration file must be specified (see ",(0,i.kt)("a",u({parentName:"p"},{href:"#configuration-example"}),"example configuration")," for an example of such file and ",(0,i.kt)("a",u({parentName:"p"},{href:"#config-file-format"}),"config file format section")," for the overview of all possible configuration parameters)"),(0,i.kt)("p",null,"The plugin uses a common secret or a public key to verify the signature of the provided token. If the signature is valid, the client gets authenticated."),(0,i.kt)("h2",u({},{id:"plugin-activation"}),"Plugin Activation"),(0,i.kt)("p",null,"To enable the JWT Auth plugin on the broker, add the following to the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{}),"plugin /usr/lib/cedalo_jwt_auth.so\n\npersistence_location /mosquitto/data\n")),(0,i.kt)("p",null,"This is an example configuration snippet applicable to the docker container setup. For installations not running in a container the above configuration needs to be adjusted accordingly (namely the location of ",(0,i.kt)("inlineCode",{parentName:"p"},"cedalo_jwt_auth.so")," dynamic library and ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location")," may differ)."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location")," is used as a search base path for the plugin's config file."),(0,i.kt)("p",null,"In addition to modifying ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),", ensure that you have the appropriate license to use the plugin."),(0,i.kt)("h2",u({},{id:"config-file-format"}),"Config File Format"),(0,i.kt)("p",null,"The configuration is stored in a single JSON file (called ",(0,i.kt)("inlineCode",{parentName:"p"},"jwt.json")," by default) located inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence_location"),", which is defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),". To use a different config file name, specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin_opt_config_file")," option with the custom file name under the JWT plugin section in ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),"."),(0,i.kt)("p",null,"The file represents a configuration object consisting of a selected authentication mode for the plugin, a signature algorithm, and an object with corresponding options."),(0,i.kt)("p",null,"The fields of the configuration object are described below. To see the entire structure of the configuration file, take a look at the ",(0,i.kt)("a",u({parentName:"p"},{href:"#json-schema"}),"JSON schema")," at the bottom of this page. To see an example of the config file refer to the ",(0,i.kt)("a",u({parentName:"p"},{href:"#configuration-example"}),"configuration example section"),"."),(0,i.kt)("p",null,"The following fields of the config are mandatory:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"algorithm")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.algorithm"),"): ",(0,i.kt)("br",null)," Algorithm that was used to sign the token. Either ",(0,i.kt)("inlineCode",{parentName:"li"},"RS256")," in case a public key was used or ",(0,i.kt)("inlineCode",{parentName:"li"},"HS256")," in case of a shared secret (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", one of: ",(0,i.kt)("inlineCode",{parentName:"li"},"RS256"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"HS256"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mode")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.mode"),"): ",(0,i.kt)("br",null)," Mode of the authentication. Either ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"local"),". ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," mode calls a special JSON Web Key Set (JWKS) endpoint provided by your authentication/OAuth provider to get public keys for token validation. Alternatively, JWKS can also be fetched through a file on the filesystem. ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," mode is used to specify a shared secret or a public key file in PEM format (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", one of: ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"local"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options"),"): ",(0,i.kt)("br",null)," Further settings of the plugin (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"modes")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes"),"): ",(0,i.kt)("br",null)," Section that details settings of one of the chosen auth modes (",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"local"),") (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks"),"): ",(0,i.kt)("br",null)," Settings for the ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," mode. This option is set in case ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," mode is chosen in ",(0,i.kt)("inlineCode",{parentName:"li"},"$.mode"),". It accepts one of the following mandatory parameters. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uri")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.uri"),"): ",(0,i.kt)("br",null)," URI of the JWKS endpoint including protocol, port, path, and query parameters (if any) (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filePath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.filePath"),"): ",(0,i.kt)("br",null)," This option provides an alternative to ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.uri"),". It specifieds a full path to a file where JWKS is being stored (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"local")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.local"),"): ",(0,i.kt)("br",null)," Settings for the ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," mode. This option is set in case ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," mode is chosen in ",(0,i.kt)("inlineCode",{parentName:"li"},"$.mode"),". It can be either a plain text string in case it is acceptable to specify a shared secret or a public key in plain text or it can also be an object with one of the properties below. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plain")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.local.palin"),"): ",(0,i.kt)("br",null)," A plaintext shared secret or public key in PEM format with PEM headers. ",(0,i.kt)("inlineCode",{parentName:"li"},"\\n")," can be used to separate PEM headers from the key string. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.local.env"),"): ",(0,i.kt)("br",null)," A name of the environment variable where a shared secret or a public key is stored (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filePath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.local.filePath"),"): ",(0,i.kt)("br",null)," A full path to a file where a shared secret or a public key is being stored (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),").")))))))),(0,i.kt)("p",null,"Optional fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.version"),"): ",(0,i.kt)("br",null)," Version of the configuration file. Reserved for future use (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"modes")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks"),"): ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutMs")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.timeoutMs"),"): ",(0,i.kt)("br",null)," Timeout in milliseconds for fetching JSON web key set via a network request (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"10000"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cache")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.cache"),"): ",(0,i.kt)("br",null)," Cache options when fetching JWKS via a network request (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"enabled")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.cache.enabled"),"): ",(0,i.kt)("br",null)," Whether to enable cache for JWKS requests (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ttlMs")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.cache.ttlMs"),"): ",(0,i.kt)("br",null)," Time to live in milliseconds for cache entries. This means that the result of the JWKS request will be cached for the specified time (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"60000"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"respectCacheHeaders")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.modes.jwks.cache.respectCacheHeaders"),"): ",(0,i.kt)("br",null)," Whether to use cache header provided in response to the JWKS request. The cache headers specify the time for which the response should be cached and will take precedence over ",(0,i.kt)("inlineCode",{parentName:"li"},"ttlMs")," setting (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."))))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"common")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common"),"): ",(0,i.kt)("br",null)," Common options used for both ",(0,i.kt)("inlineCode",{parentName:"li"},"jwks")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," auth modes (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"issuer")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.issuer"),"): ",(0,i.kt)("br",null)," A specific issuer that ",(0,i.kt)("inlineCode",{parentName:"li"},"iss")," property of the token will be matched against. The authentication will fail if the values don't match (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validateExpiration")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.validateExpiration"),"): ",(0,i.kt)("br",null)," Whether to reject expired tokens (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"matchUsernameToSubject")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.matchUsernameToSubject"),"): ",(0,i.kt)("br",null)," Whether to match username provided by the MQTT client against the ",(0,i.kt)("inlineCode",{parentName:"li"},"sub")," field of the token. In case these fields do not match, the authentication is denied (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"matchClientIdToSubject")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.matchClientIdToSubject"),"): ",(0,i.kt)("br",null)," Whether to match client id of the MQTT client against the ",(0,i.kt)("inlineCode",{parentName:"li"},"sub")," field of the token. In case these fields do not match, the authentication is denied (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kickExpiredClients")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.kickExpiredClients"),"): ",(0,i.kt)("br",null)," Whether to kick MQTT clients whose token expires while they are still connected to the broker (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kickExpiredClientsWithWill")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.common.kickExpiredClientsWithWill"),"): ",(0,i.kt)("br",null)," Whether to send out last will messages for the clients that are kicked due to ",(0,i.kt)("inlineCode",{parentName:"li"},"kickExpiredClients")," option being ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lazyConnect")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.lazyConnect"),"): ",(0,i.kt)("br",null)," Whether to ignore checking JWKS and revocation endpoint reachability during the broker startup. If this option is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false")," and one of these endpoints is defined in the configuration but is unreachable, then the plugin will fail and become unoperational. This check only happens once during startup and is made to spot connectivity issues and malformed URIs early on. The reachability check is performed by sending a ",(0,i.kt)("inlineCode",{parentName:"li"},"HEAD")," HTTP request to the endpoints of interest. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"revocation")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation"),"): ",(0,i.kt)("br",null)," Options related to the revocation check endpoint, which checks whether the token was revoked (for instance, due to being compromised) before verifying it on the broker. The ",(0,i.kt)("inlineCode",{parentName:"li"},"revocation")," object must contain either the ",(0,i.kt)("inlineCode",{parentName:"li"},"introspection")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"plain")," option (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"introspection")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection"),"): ",(0,i.kt)("br",null)," Options for configuring request to the introspection endpoint. Introspection endpoint is a standardized way of fetching more information about the token (including its revocation status) and is typically provided by authentication/OAuth providers (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uri")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.uri"),"): ",(0,i.kt)("br",null)," URI of the introspection endpoint, including protocol, port, path, and query parameters (if any). For instance, ",(0,i.kt)("inlineCode",{parentName:"li"},"http://keycloak:8080/realms/test/protocol/openid-connect/token/introspect")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientId")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.clientId"),"): ",(0,i.kt)("br",null)," Client ID to be used to access the introspection endpoint. Client ID as well as the client secret are base64 encoded into the basic authorization header of the POST request. The token, on the other hand, is url encoded into the request body as an object with a single property called ",(0,i.kt)("inlineCode",{parentName:"li"},"token")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientSecret")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.clientSecret"),"): ",(0,i.kt)("br",null)," Client secret to be used to access the introspection endpoint. Client secret as well as client ID are base64 encoded into the basic authorization header of the POST request. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"requestParameters")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.requestParameters"),"): ",(0,i.kt)("br",null)," Additional parameters to be sent with the introspection request. This may include additional headers or define a different request payload (body) structure. More information on ",(0,i.kt)("inlineCode",{parentName:"li"},"requestParameters")," can be found below at the bottom of this section (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plain")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.requestParameters.plain"),"): ",(0,i.kt)("br",null)," Request parameters as an object or a string representation of a JSON object (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.requestParameters.env"),"): ",(0,i.kt)("br",null)," Name of the environment variable from which request parameters are to be fetched. This can be useful if request parameters include sensitive information. Request parameters can be stored in the environment variable as a string representation of a JSON object (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filePath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.requestParameters.filePath"),"): ",(0,i.kt)("br",null)," Full path to the file on the file system from which reqeuest parameters are to be fetched. The parameters in the file must be in JSON fomat (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"includeTokenTypeHint")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.introspection.includeTokenTypeHint"),"): ",(0,i.kt)("br",null)," Whether to include ",(0,i.kt)("inlineCode",{parentName:"li"},"token_type_hint")," property with a value of ",(0,i.kt)("inlineCode",{parentName:"li"},"access_token")," into the body of the introspection request (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plain")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain"),"): ",(0,i.kt)("br",null),' Options for configuring requests to the "plain" revocation check endpoint. This options can be used in case a custom revocation enpoint is needed instead of a standardized introspection endpoint (type: ',(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uri")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.uri"),"): ",(0,i.kt)("br",null)," URI of the custom revocation endpoint. Including protocol, port, path and query params (if any) (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"requestParameters")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.requestParameters"),"): Custom request parameters (i.e. headers, payload, path, or method) for the revocation endpoint. See the bottom of this section for more information. ",(0,i.kt)("br",null)," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plain")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.requestParameters.plain"),"): ",(0,i.kt)("br",null)," Request parameters as an object or a string representation of a JSON object (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.requestParameters.env"),"): ",(0,i.kt)("br",null)," Name of the environment variable from which request parameters are to be fetched. This can be useful if request parameters include sensitive information. Request parameters can be stored in the environment variable as a string representation of a JSON object (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"filePath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.requestParameters.filePath"),"): ",(0,i.kt)("br",null)," Full path to the file on the file system from which reqeuest parameters are to be read. The parameters in the files must be stored in JSON format (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bodyEncoding")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.bodyEncoding"),"): ",(0,i.kt)("br",null)," Type of body endoding of the request to the revocation check endpoint (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", one of: ",(0,i.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"application/json"),", default to: ",(0,i.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"response")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.response"),"): ",(0,i.kt)("br",null)," Object containing options for validating response from the custom revocation check endpoint. These options specify a way of determining whether revocation check succeeded of failed (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),").",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jsonPath")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.response.jsonPath"),"): ",(0,i.kt)("br",null)," JSON path to the property in the response body that determines the success of the revocation check. For example, the value of this option can be ",(0,i.kt)("inlineCode",{parentName:"li"},"validation.isSuccess")," which will retrieve ",(0,i.kt)("inlineCode",{parentName:"li"},"isSuccess")," property of the ",(0,i.kt)("inlineCode",{parentName:"li"},"validation")," object from the body of the respose for further inspection (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"successValue")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.response.successValue"),"): ",(0,i.kt)("br",null)," Value that the property at ",(0,i.kt)("inlineCode",{parentName:"li"},"jsonPath")," will be matched against to determine the success of the revocation check. ",(0,i.kt)("inlineCode",{parentName:"li"},"successValue")," should be defined together with ",(0,i.kt)("inlineCode",{parentName:"li"},"jsonPath")," to avoid undefined behavior. In case both ",(0,i.kt)("inlineCode",{parentName:"li"},"jsonPath")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"successValue")," are not defined, the success of the revocation check is determined by the HTTP response status codes from ",(0,i.kt)("inlineCode",{parentName:"li"},"successHttpCodes")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"bool")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"successHttpCodes")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.plain.response.successHttpCodes"),"): ",(0,i.kt)("br",null)," An array of HTTP status codes that are treated as sucessful responses. In case an HTTP status which is not present in this list is encountered, the revocation check fails regardless of ",(0,i.kt)("inlineCode",{parentName:"li"},"jsonPath")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"successValue")," properties. (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"array")," of type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"[200, 201, 202, 203, 204, 205, 206, 207, 208, 226]"),")."))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutMs")," (path: ",(0,i.kt)("inlineCode",{parentName:"li"},"$.options.revocation.timeoutMs"),"): ",(0,i.kt)("br",null)," Timeout of the request to the custom revocation check endpoint in milliseconds (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),", defaults to: ",(0,i.kt)("inlineCode",{parentName:"li"},"10000"),").")))))),(0,i.kt)("p",null,"You can also find all the available configuration options as a schema ",(0,i.kt)("a",u({parentName:"p"},{href:"#json-schema"}),"here")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Request parameters")," value in ",(0,i.kt)("inlineCode",{parentName:"p"},"$.options.revocation.plain.requestParameters")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"$.options.revocation.introspection.requestParameters")," can be represented as a valid JSON string or an actual JSON object. To represent it as a valid JSON object it can be put directly into the configuration file under ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.plain"),". In case it's represented as a string, it can be stored in an environment variable referenced by ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.env")," or in a file referenced by ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.filePath"),". However, it is worth noting that a valid JSON string representing request parameters can also be stored directly under ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.plain"),"."),(0,i.kt)("p",null,"Request parameters object can contain the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"payload"),": Contents of the request body (typically a JSON object, but other types like string or number can also be used). "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"headers"),": An object of key value pairs representing HTTP headers."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"method"),": HTTP verb to use when requesting revocation check endpoint: ",(0,i.kt)("inlineCode",{parentName:"li"},"GET"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"POST"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PUT"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PATCH"),", or ",(0,i.kt)("inlineCode",{parentName:"li"},"DELETE"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path"),": Overrides an HTTP path of the request (including query parameters if any). Should start with ",(0,i.kt)("inlineCode",{parentName:"li"},"/"),". However, the path can also be entered directly into the ",(0,i.kt)("inlineCode",{parentName:"li"},"uri")," field.")),(0,i.kt)("p",null,"If value of the token needs to be inserted into any of the headers, path, or payload, a special string ",(0,i.kt)("inlineCode",{parentName:"p"},"#:jwt_value:#")," can be used."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example of request parameters:")),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n    ...\n    "requestParameters": {\n        "plain": {\n            "headers": {\n                "Token": "Access token: #:jwt_value:#",\n                "HTTPHeader2": "value",\n                "HTTPHeader3": 1\n            },\n            "payload": {\n                "role": "client",\n                "token": {\n                    "value": "#:jwt_value:#"\n                }\n            },\n            "path": "/revocation/check/#:jwt_value:#?token_query_param=#:jwt_value:#&param2=some_value",\n            "method": "POST"\n        }\n    }\n    ...\n}\n')),(0,i.kt)("p",null,"In the example above, string ",(0,i.kt)("inlineCode",{parentName:"p"},"#:jwt_value:#")," will be replaced with the value of the JSON web token provided by a client. The revocation check will be made as a POST request to ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.plain.path")," using the headers specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.plain.headers")," and a payload from ",(0,i.kt)("inlineCode",{parentName:"p"},"requestParameters.plain.payload"),"."),(0,i.kt)("h2",u({},{id:"configuration-example"}),"Configuration example"),(0,i.kt)("p",null,"An example of the ",(0,i.kt)("inlineCode",{parentName:"p"},"jwt.json")," config file is shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n    "version": "1",\n    "algorithm": "RS256",\n    "mode": "jwks",\n    "options": {\n        "lazyConnect": false,\n        "modes": {\n            "jwks": {\n                "uri": "http://keycloak:8080/realms/test/protocol/openid-connect/certs",\n                "timeoutMs": 5000,\n                "cache": {\n                    "enabled": true,\n                    "ttlMs": 30000,\n                    "respectCacheHeaders": false\n                }\n            }\n        },\n        "common": {\n            "validateExpiration": true,\n            "matchUsernameToSubject": true,\n            "matchClientIdToSubject": false,\n            "kickExpiredClients": true,\n            "kickExpiredClientsWithWill": true\n        },\n        "revocation": {\n            "introspection": {\n                "uri": "http://keycloak:8080/realms/test/protocol/openid-connect/token/introspect",\n                "clientId": "client-1",\n                "clientSecret": "BADQQjnPfdJrAW9jkIOJzCSidW9me5JH",\n                "includeTokenTypehint": false\n            },\n            "timeoutMs": 5000\n        }\n    }\n}\n')),(0,i.kt)("p",null,"Given this example config, whenever the broker starts up, the JWT Authentication plugin will test reachability of the JWKS endpoint at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://keycloak:8080/realms/test/protocol/openid-connect/certs")," as well as introspection endpoint at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://keycloak:8080/realms/test/protocol/openid-connect/token/introspect")," by performing ",(0,i.kt)("inlineCode",{parentName:"p"},"HEAD")," HTTP requests. If at least one of those endpoints is unreachable, the plugin will fail and output an error. Otherwise, it will load normally and wait for authentication request from the MQTT clients. If you don't want the plugin to be able to fail in case one of the endpoints is unreachable on startup, change the ",(0,i.kt)("inlineCode",{parentName:"p"},"lazyConnect")," setting to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"After receiving an authentication request from an MQTT client, the broker will retrieve the token from the password field and include it (together with the ",(0,i.kt)("inlineCode",{parentName:"p"},"clientId")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"clientSecret")," config fields) into a request to the introspection endpoint at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://keycloak:8080/realms/test/protocol/openid-connect/token/introspect"),". This request will determine whether the token is revoked or not. In case the token is revoked or request to the introspection endpoint times out after 5 seconds (5000 milliseconds), the authentication request is denied. Otherwise, the broker fetches public keys from the JWKS endpoint at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://keycloak:8080/realms/test/protocol/openid-connect/certs"),", caching them for 30 seconds (",(0,i.kt)("inlineCode",{parentName:"p"},'"ttlMs": 30000'),"), and then, using those keys, verifies the signature of the JSON Web Token. If JWKS endpoint doesn't respond for 5 seconds (5000 milliseconds), the authentication is denied. Otherwise and if the signature is valid, the username of the client is also matched against the ",(0,i.kt)("inlineCode",{parentName:"p"},"sub")," field of the token (as per ",(0,i.kt)("inlineCode",{parentName:"p"},"matchUsernameToSubject")," setting). If these match, the client is authenticated to the broker. Then the timer is set up to kick the client out after the token expires (as per ",(0,i.kt)("inlineCode",{parentName:"p"},"kickExpiredClients")," setting). If the client is kicked out, the last will message will be sent out as per ",(0,i.kt)("inlineCode",{parentName:"p"},"kickExpiredClientsWithWill")," setting."),(0,i.kt)("p",null,"Below is another very short config example which uses ",(0,i.kt)("inlineCode",{parentName:"p"},"local")," mode and a plaintext shared secret with a value ",(0,i.kt)("inlineCode",{parentName:"p"},"secret"),". The fact that shared secret is used is also evident by the use of ",(0,i.kt)("inlineCode",{parentName:"p"},"HS256")," algorithm instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"RS256")," which is applied for public keys. This config doesn't use any revocation endpoints or specify any common settings, relying on defaults instead:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n    "version": "1",\n    "algorithm": "HS256",\n    "mode": "local",\n    "options": {\n        "modes": {\n            "local": "secret"\n        }\n    }\n}\n')),(0,i.kt)("h2",u({},{id:"error-handling"}),"Error handling"),(0,i.kt)("p",null,"Any configuration or license errors will prevent the plugin from loading, and corresponding error messages will be logged."),(0,i.kt)("p",null,"If recoverable errors occur during the operation of the plugin, it will generate respective error messages prefixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"ERR:")," in the logs."),(0,i.kt)("h2",u({},{id:"notable-behavior"}),"Notable behavior"),(0,i.kt)("p",null,"If the token expires while a client has an active session with a broker, the client will be kicked out by default, or if the ",(0,i.kt)("inlineCode",{parentName:"p"},"kickExpiredClients")," option is explicitly set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in the configuration file. To avoid being kicked out, clients must be aware of when their tokens are about to expire, refresh them before expiration, and reauthenticate with the broker. Setting ",(0,i.kt)("inlineCode",{parentName:"p"},"kickExpiredClients")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," is another way to prevent this behavior, but it is not generally recommended due to security considerations."),(0,i.kt)("h2",u({},{id:"limitations"}),"Limitations"),(0,i.kt)("p",null,"JWT Auth plugin currently supports authentication only. ACLs are not supported and should be specified using other means, such as an ACL file."),(0,i.kt)("h2",u({},{id:"json-schema"}),"JSON Schema"),(0,i.kt)("p",null,"Schema for all possible parameters for the ",(0,i.kt)("inlineCode",{parentName:"p"},"jwt.json")," config file:"),(0,i.kt)("pre",null,(0,i.kt)("code",u({parentName:"pre"},{className:"language-json"}),'{\n    "title": "JWT Auth Plugin Config",\n    "type": "object",\n    "properties": {\n        "version": {\n            "type": "string",\n            "default": "1",\n            "description": "Config file version. If the field is ommited, version 1 is assumed",\n            "nullable": true\n        },\n        "algorithm": {\n            "type": "string",\n            "enum": ["RS256", "HS256"],\n            "nullable": false,\n            "description":\n                "Algorithm used for signing JWT tokens. Either \\"HS256\\" for shared secrets or \\"RS256\\" for public keys"\n        },\n        "mode": {\n            "type": "string",\n            "enum": ["local", "jwks"] ,\n            "nullable": false,\n            "description":\n                "Way in which JWT will obtain secret/key information. Either through the JWKS endpoint/file or thorugh a local shared secret/public key. Values are either \\"local\\" or \\"jwks\\""\n        },\n        "options": {\n            "type": "object",\n            "description": "Settings of the plugin",\n            "properties": {\n                "lazyConnect": {\n                    "description": "Whether to ignore checking JWKS and JWT revocation endpoints reachability on plugin startup or not",\n                    "type": "boolean",\n                    "default": false,\n                    "nullable": true\n                },\n                "modes": {\n                    "type": "object",\n                    "description": "Settings for the different modes of the plugin (jwks and local)",\n                    "properties": {\n                        "jwks": {\n                            "type": "object",\n                            "description": "Settings for the jwks mode",\n                            "properties": {\n                                "uri": {\n                                    "type": "string",\n                                    "description": "URI of the JWKS endpoint",\n                                    "nullable": true\n                                },\n                                "timeoutMs": {\n                                    "type": "number",\n                                    "description":\n                                        "Timeout in milliseconds for the request to the JWKS endpoint",\n                                    "nullable": true,\n                                    "default": 10000\n                                },\n                                "cache": {\n                                    "type": "object",\n                                    "description": "Settings for caching the JWKS keys",\n                                    "properties": {\n                                        "enabled": {\n                                            "type": "boolean",\n                                            "description": "Whether to cache the JWKS keys",\n                                            "nullable": true,\n                                            "default": false\n                                        },\n                                        "ttlMs": {\n                                            "type": "number",\n                                            "description":\n                                                "Number of milliseconds the JWKS keys are cached for",\n                                            "nullable": true,\n                                            "default": 60000\n                                        },\n                                        "respectCacheHeaders": {\n                                            "type": "boolean",\n                                            "description":\n                                                "Whether to respect cache headers when making a request to the JWKS endpoint",\n                                            "nullable": true,\n                                            "default": false\n                                        }\n                                    },\n                                    "nullable": true\n                                },\n                                "filePath": {\n                                    "type": "string",\n                                    "description":\n                                        "Path to the file containing the JWKS keys as an alternative to specifying a uri and making an external request",\n                                    "nullable": true\n                                }\n                            },\n                            "nullable": true\n                        },\n                        "local": {\n                            "oneOf": [\n                                {\n                                    "type": "string",\n                                    "nullable": true,\n                                    "description":\n                                        "Signing key in plaintext. Signing key can either be a shared secret or a public key (depending on the algorithm)",\n                                },\n                                {\n                                    "type": "object",\n                                    "description":\n                                        "Settings for signing keys of the JWT when local mode is used (signing keys are stored locally in a plain text format)",\n                                    "properties": {\n                                        "plain": {\n                                            "type": "string",\n                                            "description":\n                                                "Signing key in plaintext. Signing key can either be a shared secret or a public key (depending on the algorithm)",\n                                            "nullable": true\n                                        },\n                                        "env": {\n                                            "type": "string",\n                                            "description":\n                                                "Name of the environment variable containing the signing key",\n                                            "nullable": true\n                                        },\n                                        "filePath": {\n                                            "type": "string",\n                                            "description": "Path to the file containing the signing key",\n                                            "nullable": true\n                                        }\n                                    },\n                                    "nullable": true\n                                }\n                            ]\n                        }\n                    }\n                },\n                "common": {\n                    "type": "object",\n                    "description": "Common settings for both modes",\n                    "properties": {\n                        "issuer": {\n                            "type": "string",\n                            "description": "A particular issuer of the JWT that the broker will check for",\n                            "nullable": true\n                        },\n                        "validateExpiration": {\n                            "type": "boolean",\n                            "description": "Whether to validate the expiration time of the JWT",\n                            "nullable": true,\n                            "default": true\n                        },\n                        "matchUsernameToSubject": {\n                            "type": "boolean",\n                            "description":\n                                "Whether to match username of the MQTT client to the sub field of the JWT",\n                            "nullable": true,\n                            "default": false\n                        },\n                        "matchClientIdToSubject": {\n                            "type": "boolean",\n                            "description":\n                                "Whether to match client id of the MQTT client to the sub field of the JWT",\n                            "nullable": true,\n                            "default": false\n                        },\n                        "kickExpiredClients": {\n                            "type": "boolean",\n                            "description": "Whether to kick out clients whose JWT has expired",\n                            "nullable": true,\n                            "default": true\n                        },\n                        "kickExpiredClientsWithWill": {\n                            "type": "boolean",\n                            "description":\n                                "Whether to send out a last will testament when the client is kicked out due to JWT expiration",\n                            "nullable": true,\n                            "default": true\n                        }\n                    },\n                    "nullable": true\n                },\n                "revocation": {\n                    "type": "object",\n                    "nullable": true,\n                    "description": "Settings for checking for JWT revocation",\n                    "properties": {\n                        "introspection": {\n                            "type": "object",\n                            "description": "OAuth introspection endpoint settings",\n                            "properties": {\n                                "uri": {\n                                    "type": "string",\n                                    "description": "URI of the introspection endpoint. including protocol, port, path, and query params (if any)",\n                                    "nullable": false\n                                },\n                                "clientId": {\n                                    "oneOf": [\n                                        {\n                                            "type": "string",\n                                            "nullable": false,\n                                            "description":\n                                                        "Client id in plaintext",\n                                        },\n                                        {\n                                            "type": "object",\n                                            "description":\n                                                "Client id to be included into the request to the introspection endpoint",\n                                            "properties": {\n                                                "plain": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Client id in plaintext",\n                                                    "nullable": false\n                                                },\n                                                "env": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Name of the environment variable containing the client id",\n                                                    "nullable": false\n                                                },\n                                                "filePath": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Path to the file containing the client id",\n                                                    "nullable": false\n                                                }\n                                            },\n                                            "nullable": false\n                                        }\n                                    ]\n                                },\n                                "clientSecret": {\n                                    "oneOf": [\n                                        {\n                                            "type": "string",\n                                            "nullable": false\n                                        },\n                                        {\n                                            "type": "object",\n                                            "description":\n                                                "Client secret to be included into the request to the introspection endpoint",\n                                            "properties": {\n                                                "plain": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Client secret in plaintext",\n                                                    "nullable": true\n                                                },\n                                                "env": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Name of the environment variable containing the client secret",\n                                                    "nullable": true\n                                                },\n                                                "filePath": {\n                                                    "type": "string",\n                                                    "description":\n                                                        "Path to the file containing the client secret",\n                                                    "nullable": true\n                                                }\n                                            },\n                                            "nullable": false\n                                        }\n                                    ]\n                                },\n                                "requestParameters": {\n                                    "type": "object",\n                                    "description":\n                                        "Additional parameters to be included into the request to the introspection endpoint",\n                                    "properties": {\n                                        "plain": {\n                                            "oneOf": [\n                                                { "type": "string" },\n                                                {\n                                                    "type": "object",\n                                                    "additionalProperties": true\n                                                }\n                                            ],\n                                            "description":\n                                                "Plain value of the request parameters. Can be an object or a stringified json"\n                                        },\n                                        "env": {\n                                            "type": "string",\n                                            "description":\n                                                "Name of the environment variable containing the request parameters",\n                                            "nullable": true\n                                        },\n                                        "filePath": {\n                                            "type": "string",\n                                            "description":\n                                                "Path to the file containing the request parameters",\n                                            "nullable": true\n                                        }\n                                    },\n                                    "nullable": true\n                                },\n                                "includeTokenTypeHint": {\n                                    "type": "boolean",\n                                    "description":\n                                        "Whether to include token_type_hint=\\"access_token\\" property when making request to the introspection endpoint",\n                                    "default": false,\n                                    "nullable": true\n                                }\n                            },\n                            "nullable": true,\n                            "required": ["uri", "clientId", "clientSecret"]\n                        },\n                        "plain": {\n                            "type": "object",\n                            "description": "Plain endpoint settings used to check for JWT revocation. These are essentially settings for a custom revocation check endpoint",\n                            "properties": {\n                                "uri": {\n                                    "type": "string",\n                                    "description": "URI of the endpoint for the revocation check",\n                                    "nullable": false\n                                },\n                                "requestParameters": {\n                                    "type": "object",\n                                    "description":\n                                        "Additional parameters to be included into the JWT revocation check request",\n                                    "properties": {\n                                        "plain": {\n                                            "type": "string",\n                                            "description":\n                                                "Plain value of the request parameters. Can be an object or a stringified json",\n                                            "nullable": true\n                                        },\n                                        "env": {\n                                            "type": "string",\n                                            "description":\n                                                "Name of the environment variable containing request parameters as a stringified JSON",\n                                            "nullable": true\n                                        },\n                                        "filePath": {\n                                            "type": "string",\n                                            "description":\n                                                "Path to the file containing the request parameters",\n                                            "nullable": true\n                                        }\n                                    },\n                                    "nullable": true\n                                },\n                                "bodyEncoding": {\n                                    "type": "string",\n                                    "nullable": true,\n                                    "enum": ["application/x-www-form-urlencoded", "application/json"],\n                                    "default": "application/x-www-form-urlencoded",\n                                    "description":\n                                        "Whether to include and encode body of the revocation check request"\n                                },\n                                "response": {\n                                    "type": "object",\n                                    "description":\n                                        "Settings for the response of the JWT revocation check",\n                                    "properties": {\n                                        "checkHttpStatus": {\n                                            "type": "boolean",\n                                            "description":\n                                                "Whether to validate JWT revocation status based on the HTTP status. 2XX HTTP codes mean that the JWT was not revoked. If \\"response\\" section is field blank or ommited, then successfulness of the request will depend solely on the response status code",\n                                            "nullable": true\n                                        },\n                                        "jsonPath": {\n                                            "type": "string",\n                                            "description":\n                                                "JSON path to the value in the response that will be checked for success. If no value is provided then the entire payload will be matched against the successValue (if successValue is provided)",\n                                            "nullable": true\n                                        },\n                                        "successValue": {\n                                            "type": ["string", "number", "boolean"],\n                                            "description":\n                                                "Value returned from the JWK revocation check endpoint that indicates that the JWT is valid and not revoked. If no value is provided but jsonPath is specified then the broker will check for the truthy value",\n                                            "nullable": true\n                                        },\n                                        "successHttpCodes": {\n                                            "type": "array",\n                                            "items": {\n                                                "type": "number"\n                                            },\n                                            "description":\n                                                "HTTP status codes which are counted as successful when making request to the plain endpoint. By default these are all the 2XX status codes",\n                                            "nullable": true\n                                        }\n                                    },\n                                    "nullable": true\n                                }\n                            },\n                            "nullable": true,\n                            "required": ["uri"]\n                        },\n                        "timeoutMs": {\n                            "type": "number",\n                            "description":\n                                "Timeout in milliseconds for the request to the JWT revocation check endpoint",\n                            "nullable": true,\n                            "default": 10000\n                        }\n                    }\n                }\n            },\n            "required": ["modes"]\n        }\n    },\n    "required": ["algorithm", "mode", "options"]\n}\n')))}C.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(67294),a=n(39082),o=n(62659),l=n(83166);function r({inline:e}){return i.createElement(a.Z,{sx:{margin:e?"0px 5px":"0px 5px 5px 10px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:i.createElement(l.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);