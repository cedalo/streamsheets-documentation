"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[32421],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),d=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=d(r),f=n,m=g["".concat(s,".").concat(f)]||g[f]||p[f]||o;return r?i.createElement(m,a(a({ref:t},u),{},{components:r})):i.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var d=2;d<o;d++)a[d]=r[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}g.displayName="MDXCreateElement"},31256:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>f,default:()=>y,frontMatter:()=>g,metadata:()=>m,toc:()=>b});var i=r(3905),n=Object.defineProperty,o=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&u(e,r,t[r]);if(l)for(var r of l(t))d.call(t,r)&&u(e,r,t[r]);return e};const g={id:"bridges-index",title:"Bridges",sidebar_label:"Bridges"},f=void 0,m={unversionedId:"bridges/bridges-index",id:"version-3.1/bridges/bridges-index",title:"Bridges",description:"Mosquitto offers a variety of enterprise-grade integrations, ensuring seamless connectivity between MQTT and",source:"@site/mosquitto_versioned_docs/version-3.1/bridges/bridges-index.md",sourceDirName:"bridges",slug:"/bridges/bridges-index",permalink:"/mosquitto/bridges/bridges-index",draft:!1,tags:[],version:"3.1",frontMatter:{id:"bridges-index",title:"Bridges",sidebar_label:"Bridges"},sidebar:"someSidebar",previous:{title:"Login Rate Limiting",permalink:"/mosquitto/security/login-rate-limiting"},next:{title:"Platform Web Client",permalink:"/mosquitto/bridges/bridges-ui"}},c={},b=[],h={toc:b};function y(e){var t,r=e,{components:n}=r,u=((e,t)=>{var r={};for(var i in e)s.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&l)for(var i of l(e))t.indexOf(i)<0&&d.call(e,i)&&(r[i]=e[i]);return r})(r,["components"]);return(0,i.kt)("wrapper",(t=p(p({},h),u),o(t,a({components:n,mdxType:"MDXLayout"}))),(0,i.kt)("p",null,"Mosquitto offers a variety of enterprise-grade integrations, ensuring seamless connectivity between MQTT and\nwidely-used services. Bridges can be used to forward data to or persist data from the Mosquitto broker within other\nservices. All bridges must be activated by adding them to the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file in order to use them."),(0,i.kt)("p",null,"The following bridges support configuring via the MQTT Control API or the MQTT Cedalo Platform UI:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/azure-bridge"}),"Azure Eventhub Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/influxdb-bridge"}),"Influx DB Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/mongodb-bridge"}),"MongoDB Bridge"))),(0,i.kt)("p",null,"Follow one of the links below to explore the different configuration options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/bridges-ui"}),"Configure a bridge via Cedalo Platform UI")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/api/mqttapis/mqttapi-bridges-index"}),"Configure a bridge using MQTT Control APIs"))),(0,i.kt)("admonition",p({},{type:"caution"}),(0,i.kt)("p",{parentName:"admonition"},"Aligned with the new features mentioned in the above listed links, we further simplified the loading process of plugins that are configurable via the UI at broker startup time. This means that the file management is now managed by the Pro Mosquitto broker. Therefore, in single node deployments JSON config files are simply used as a backup while in cluster setups there will be no config file needed at all. This is because all changes to the config are now automatically persisted as part of the cluster synchronization process."),(0,i.kt)("p",{parentName:"admonition"},"In order to preserve a stable environment, avoid editing the persisted config file in single node deployments!")),(0,i.kt)("p",null,"Below listed bridges will also be configurable via MQTT Control API and Cedalo Platform UI in future version of Mosquitto Pro. For the moment, they must be configured manually by providing a JSON configuration file or by extending the ",(0,i.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file. This is plugin dependent."),(0,i.kt)("p",null,"To activate and configure the following Bridges, click on the specific bridge to get more information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/google-pubsub-bridge"}),"Google Pub/Sub Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/http-bridge"}),"HTTP Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/kafka-bridge"}),"Kafka Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/mqtt-bridge"}),"MQTT Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/snowflake-bridge"}),"Snowflake Bridge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",p({parentName:"li"},{href:"/mosquitto/bridges/sql-bridge"}),"SQL Bridges"))))}y.isMDXComponent=!0}}]);