"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[54345],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>d});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),u=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},s=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),m=u(n),d=a,k=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return n?r.createElement(k,o(o({ref:e},s),{},{components:n})):r.createElement(k,o({ref:e},s))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},30536:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>b,contentTitle:()=>d,default:()=>f,frontMatter:()=>m,metadata:()=>k,toc:()=>g});var r=n(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,s=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,c=(t,e)=>{for(var n in e||(e={}))p.call(e,n)&&s(t,n,e[n]);if(i)for(var n of i(e))u.call(e,n)&&s(t,n,e[n]);return t};const m={id:"mqttpublish",title:"MQTT.PUBLISH",hide_title:!0},d=void 0,k={unversionedId:"functions/connection/mqttpublish",id:"version-3.0/functions/connection/mqttpublish",title:"MQTT.PUBLISH",description:"MQTT.PUBLISH",source:"@site/streamsheets_versioned_docs/version-3.0/functions/connection/mqttpublish.md",sourceDirName:"functions/connection",slug:"/functions/connection/mqttpublish",permalink:"/streamsheets/functions/connection/mqttpublish",draft:!1,tags:[],version:"3.0",frontMatter:{id:"mqttpublish",title:"MQTT.PUBLISH",hide_title:!0},sidebar:"someSidebar",previous:{title:"MONGO.STORE",permalink:"/streamsheets/functions/connection/mongostore"},next:{title:"MQTT.SUBSCRIBE",permalink:"/streamsheets/functions/connection/mqttsubscribe"}},b={},g=[],h={toc:g};function f(t){var e,n=t,{components:a}=n,s=((t,e)=>{var n={};for(var r in t)p.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&i)for(var r of i(t))e.indexOf(r)<0&&u.call(t,r)&&(n[r]=t[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(e=c(c({},h),s),l(e,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",null,"MQTT.PUBLISH"),(0,r.kt)("p",null,"Publishes either a message or an arbitrary value using a specified Producer and topic. To reference a message from the outbox use the outbox function and to reference a message from the inbox use INBOX."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=MQTT.PUBLISH(Connection, MessageOrValue, Topic, ","[","QoS","]",", ","[","Retain","]",", ","[","MQTT V5 Properties","]",")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Connection"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Connection"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Connection to use for publishing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"MessageOrValue"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"String"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Either an existing message from the outbox or a value to publish.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Topic"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"String"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Topic that is appended to the base topic defined in the Connector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"QoS (optional)"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"QoS"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Quality of Service. This option defines the reliability of the publish operation. It depends on the used protocol.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Options:",(0,r.kt)("br",null),"0: At most once",(0,r.kt)("br",null),"1: At least once.",(0,r.kt)("br",null),"2: Exactly once.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Retain (optional)"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Boolean"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"This option defines if the message should be retained on the broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"MQTT V5 Properties (optional)"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"JSON"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"A JSON with one or more of the following properties:",(0,r.kt)("br",null),(0,r.kt)("table",{border:"1",style:{borderCollapse:"collapse",marginTop:"7px",marginLeft:"5px"}},(0,r.kt)("thead",null,(0,r.kt)("td",null,"Property"),(0,r.kt)("td",null,"Type")),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"payloadFormatIndicator"),(0,r.kt)("td",null,"boolean")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"messageExpiryInterval"),(0,r.kt)("td",null,"positive non-zero integer")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"topicAlias"),(0,r.kt)("td",null,"positive non-zero integer")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"responseTopic"),(0,r.kt)("td",null,"string")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"correlationData"),(0,r.kt)("td",null,"string")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"userProperties"),(0,r.kt)("td",null,"object")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"subscriptionIdentifier"),(0,r.kt)("td",null,"positive non-zero integer")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"contentType"),(0,r.kt)("td",null,"string")))))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Boolean or Error"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TRUE, if no ",(0,r.kt)("a",c({parentName:"td"},{href:"../../other/errorcodes"}),"error"),".")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("p",null,'All examples assume a base topic with the value "/cedalo" in the connector. '),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null})),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"A"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"B"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"1")),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"parameter1"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"12.4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"2")),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"parameter2"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"64.2")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Formula"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Result"),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,'=MQTT.PUBLISH(MQTT_Connection!,JSON(A1:B2), "test")'))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TRUE"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),'This publishes a JSON object created by the json function using the "MQTT_Connection" and topic "cedalo/test"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,'=MQTT.PUBLISH(MQTT_Connection!,"Message", "test")'))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TRUE"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),'This publishes the string value "Message" using the "MQTT_Connection" under the topic "cedalo/test"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,'=MQTT.PUBLISH(MQTT_Connection!, OUTBOX("Message"), "test")'))),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TRUE"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),'This publishes the outbox message with id "Message" using the "MQTT_Connection" and topic "cedalo/test"')))))}f.isMDXComponent=!0}}]);