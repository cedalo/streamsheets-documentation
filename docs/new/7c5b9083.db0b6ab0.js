(window.webpackJsonp=window.webpackJsonp||[]).push([[538],{1249:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return u}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(r),d=n,u=b["".concat(s,".").concat(d)]||b[d]||h[d]||a;return r?o.a.createElement(u,i(i({ref:t},l),{},{components:r})):o.a.createElement(u,i({ref:t},l))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1577:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/portex-49e2171f0dd02ac8edc0cfb50476b1a8.png"},605:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),a=(r(0),r(1249)),s={id:"settings",title:"Streamsheets Setup",sidebar_label:"Streamsheets Setup"},i={unversionedId:"installation/settings",id:"version-2.0/installation/settings",isDocsHomePage:!1,title:"Streamsheets Setup",description:"Port Allocation",source:"@site/streamsheets_versioned_docs/version-2.0/installation/settings.md",slug:"/installation/settings",permalink:"/new/streamsheets/2.0/installation/settings",version:"2.0",sidebar_label:"Streamsheets Setup"},c=[{value:"Port Allocation",id:"port-allocation",children:[{value:"What are ports?",id:"what-are-ports",children:[]},{value:"Which ports are allocated by Streamsheets?",id:"which-ports-are-allocated-by-streamsheets",children:[]},{value:"How can I change ports?",id:"how-can-i-change-ports",children:[]},{value:"When do I need to change ports?",id:"when-do-i-need-to-change-ports",children:[]}]},{value:"Mosquitto Broker",id:"mosquitto-broker",children:[]}],l={rightToc:c};function p(e){var t=e.components,s=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,s,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"port-allocation"},"Port Allocation"),Object(a.b)("h3",{id:"what-are-ports"},"What are ports?"),Object(a.b)("p",null,"Ports handle communication over the internet, they make sure, that there\nare no conflicts in data transmission. All data transmitted over the\ninternet is sent and received by using different kinds of protocols.\nEach protocol is assigned a specific port number. This way data streams\ncan easily be managed and adjusted."),Object(a.b)("h3",{id:"which-ports-are-allocated-by-streamsheets"},"Which ports are allocated by Streamsheets?"),Object(a.b)("p",null,"Streamsheets allocate a number of ports."),Object(a.b)("p",null,"These are all used ports:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"1883 - MQTT Broker"),Object(a.b)("li",{parentName:"ul"},"1884 - Internal MQTT Broker"),Object(a.b)("li",{parentName:"ul"},"8080 - Gateway"),Object(a.b)("li",{parentName:"ul"},"8081 - Reverseproxy"),Object(a.b)("li",{parentName:"ul"},"8083 - Streams Service"),Object(a.b)("li",{parentName:"ul"},"8088 - Gateway WebSocket API"),Object(a.b)("li",{parentName:"ul"},"8090 - Gateway HTTP API"),Object(a.b)("li",{parentName:"ul"},"9000 - WebUI"),Object(a.b)("li",{parentName:"ul"},"40000-40100 - Streams Service (UDP)"),Object(a.b)("li",{parentName:"ul"},"4840 - OPC UA"),Object(a.b)("li",{parentName:"ul"},"6379 - Redis"),Object(a.b)("li",{parentName:"ul"},"27017 - Internal MongoDB")),Object(a.b)("h3",{id:"how-can-i-change-ports"},"How can I change ports?"),Object(a.b)("p",null,"Depending on your installed version, there are different ways to adjust\nthe ports."),Object(a.b)("h4",{id:"open-source"},"Open Source:"),Object(a.b)("p",null,"Starting with version 1.5 of the Streamsheets open source release you\ncan add the port changes to the ",Object(a.b)("inlineCode",{parentName:"p"},"docker run")," command used in the\ninstallation process:"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"docker run  -p 8081:8081  -p 1885:1883  -v /tmp/db:/var/lib/mongodb  cedalo/streamsheets:1.5")),Object(a.b)("p",null,"The parameter ",Object(a.b)("inlineCode",{parentName:"p"},"-p port:port")," defines the port allocation. In the example\nabove the 1883 port of the MQTT Broker was mapped to use the port 1885.\nAdd another ",Object(a.b)("inlineCode",{parentName:"p"},"-p port:port")," for every port that needs adjustment."),Object(a.b)("h4",{id:"streamsheets-premium"},"Streamsheets Premium"),Object(a.b)("p",null,'If you don\xb4t use the open source version or have an older version, the\nport mapping is done via a .yml file in your Installer directory in the\n"docker-compose" folder. To change each port individually open the .yml\nfile and search for the "ports" parameter of the service.'),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Port Mapping:")," The command and the .yml file always use the structure\n",Object(a.b)("em",{parentName:"p"},"port:port")," to adjust ports. This is because we map internal docker\nports to the ports of the host system. The port on the left represent\nthe port of the host system and the port on the right represents the\ninternal docker port. The one that interests you, is the one of the host\nsystem."),Object(a.b)("p",null,Object(a.b)("img",{alt:"PEX",src:r(1577).default})),Object(a.b)("p",null,"Changing the port to 8082 would look like this:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"8082:8081")),Object(a.b)("h3",{id:"when-do-i-need-to-change-ports"},"When do I need to change ports?"),Object(a.b)("p",null,"Sometimes other programs are blocking certain ports. Then you encounter\nerror messages like this:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("em",{parentName:"p"},"ERROR: for streamsheets-service-feeders Cannot start service\nstreamsheets-service-feeders: driver failed programming external\nconnectivity on endpoint streamsheets-service-feeders\n(3c98f65b49d5c5ad961c9fde5ef145f21bf385b5edc077e204a9b877834185be):\nBind for 0.0.0.0:8083 failed: port is already allocated"))),Object(a.b)("p",null,"Changing either the port of the Streamsheets or the port of the other\nprogram is then the only option, if you want to run both at the same\ntime on this host system."),Object(a.b)("h2",{id:"mosquitto-broker"},"Mosquitto Broker"),Object(a.b)("p",null,"Streamsheets comes with the MQTT ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://mosquitto.org/"}),"Mosquitto\nBroker"),'. The password will be randomly generated\non installation and set once in the standard "MQTT Connector".'),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Find Password:"),' Within the Streamsheets installation directory in the\nfolder "settings" you can find the "mosquitto" folder. Open the\n"pw',"_",'clear.txt" file to access your password.'),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Change Password:"),' To change the broker password stop Streamsheets,\ndelete the "pw.txt" & "pw',"_",'clear.txt" file and restart again. The new\npassword will be generated and again written into the "mosquitto"\nfolder. Don\xb4t forget to change the password in your Streamsheets\nconnector!'))}p.isMDXComponent=!0}}]);