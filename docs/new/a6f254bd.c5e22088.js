(window.webpackJsonp=window.webpackJsonp||[]).push([[760],{1249:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var r=n(0),a=n.n(r);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},b=Object.keys(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},s=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,b=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),s=r,O=p["".concat(i,".").concat(s)]||p[s]||m[s]||b;return n?a.a.createElement(O,o(o({ref:t},l),{},{components:n})):a.a.createElement(O,o({ref:t},l))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=n.length,i=new Array(b);i[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<b;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},827:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),b=(n(0),n(1249)),i={id:"bin2float",title:"BIN2FLOAT",sidebar_label:"BIN2FLOAT"},o={unversionedId:"functions/engineering/bin2float",id:"functions/engineering/bin2float",isDocsHomePage:!1,title:"BIN2FLOAT",description:"Converts a binary number to a floating point number. Floating point",source:"@site/streamsheets/functions/engineering/bin2float.md",slug:"/functions/engineering/bin2float",permalink:"/new/streamsheets/2.3/functions/engineering/bin2float",version:"current",sidebar_label:"BIN2FLOAT",sidebar:"someSidebar",previous:{title:"BIN2DEC",permalink:"/new/streamsheets/2.3/functions/engineering/bin2dec"},next:{title:"BIN2HEX",permalink:"/new/streamsheets/2.3/functions/engineering/bin2hex"}},c=[],l={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Converts a binary number to a floating point number. Floating point\nnumbers are represented as a 32bit-IEEE-754 number."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Syntax")),Object(b.b)("p",null,"=BIN2FLOAT(Number)"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The binary number to convert.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Return Value")),Object(b.b)("p",null,"The floating point number or a ","#","NUM! error if given number is not a\nvalid binary number."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Example")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Function"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Result"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Comment"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'=BIN2FLOAT("01000000010010010000111111011011")'),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"3.1415927410125732421875"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"converts binary number 01000000010010010000111111011011 to floating point number")))))}u.isMDXComponent=!0}}]);