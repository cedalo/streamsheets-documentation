(window.webpackJsonp=window.webpackJsonp||[]).push([[767],{1249:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,O=p["".concat(o,".").concat(m)]||p[m]||s[m]||i;return n?a.a.createElement(O,b(b({ref:t},l),{},{components:n})):a.a.createElement(O,b({ref:t},l))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:r,o[1]=b;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},834:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(1249)),o={id:"bin2float",title:"BIN2FLOAT",sidebar_label:"BIN2FLOAT"},b={unversionedId:"functions/engineering/bin2float",id:"version-2.0/functions/engineering/bin2float",isDocsHomePage:!1,title:"BIN2FLOAT",description:"Converts a binary number to a floating point number. Floating point",source:"@site/streamsheets_versioned_docs/version-2.0/functions/engineering/bin2float.md",slug:"/functions/engineering/bin2float",permalink:"/new/streamsheets/2.0/functions/engineering/bin2float",version:"2.0",sidebar_label:"BIN2FLOAT",sidebar:"version-2.0/someSidebar",previous:{title:"BIN2DEC",permalink:"/new/streamsheets/2.0/functions/engineering/bin2dec"},next:{title:"BIN2HEX",permalink:"/new/streamsheets/2.0/functions/engineering/bin2hex"}},c=[],l={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Converts a binary number to a floating point number. Floating point\nnumbers are represented as a 32bit-IEEE-754 number."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Syntax")),Object(i.b)("p",null,"=BIN2FLOAT(Number)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Number"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The binary number to convert.")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Return Value")),Object(i.b)("p",null,"The floating point number or a ","#","NUM! error if given number is not a\nvalid binary number."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Function"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Result"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Comment"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'=BIN2FLOAT("01000000010010010000111111011011")'),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"3.1415927410125732421875"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"converts binary number 01000000010010010000111111011011 to floating point number")))))}u.isMDXComponent=!0}}]);