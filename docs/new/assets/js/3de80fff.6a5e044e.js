(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[9806],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,f=d["".concat(u,".").concat(c)]||d[c]||s[c]||l;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50030:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return u},default:function(){return m}});var a=n(22122),r=n(19756),l=(n(67294),n(3905)),i={id:"randbetween",title:"RANDBETWEEN",sidebar_label:"RANDBETWEEN"},o={unversionedId:"functions/math/randbetween",id:"functions/math/randbetween",isDocsHomePage:!1,title:"RANDBETWEEN",description:"Creates a random value between min and max. It is possible to create a",source:"@site/streamsheets/functions/math/randbetween.md",sourceDirName:"functions/math",slug:"/functions/math/randbetween",permalink:"/new/streamsheets/2.3/functions/math/randbetween",version:"current",sidebar_label:"RANDBETWEEN",frontMatter:{id:"randbetween",title:"RANDBETWEEN",sidebar_label:"RANDBETWEEN"},sidebar:"someSidebar",previous:{title:"RADIANS",permalink:"/new/streamsheets/2.3/functions/math/radians"},next:{title:"RANDID",permalink:"/new/streamsheets/2.3/functions/text/randid"}},u=[],p={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Creates a random value between min and max. It is possible to create a\nseries of increasing or decreasing values by specifying a delta range.\nThe delta is randomly choosen within its range and applied to last\nreturned value."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("p",null,"=RANDBETWEEN(Min, Max ","[",", MinDelta, MaxDelta, InitialValue","]",")"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Min"),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum value to return.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Max"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum value to return.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MinDelta"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Minimum value applied to last value in next step. If specified MaxDelta must also be set. Min and MaxDelta together define the possible range of change")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxDelta"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Maximum value applied to last value in next step. If specified MinDelta must also be set.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"InitialValue"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Initial value to start with. Only used if MinDelta and MaxDelta are given. Note: delta will be applied to inital value.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Value")),(0,l.kt)("p",null,"Random number between minimum and maximum argument."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Function"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"=RANDBETWEEN(1, 10)"),(0,l.kt)("td",{parentName:"tr",align:null},"e.g.: 5"),(0,l.kt)("td",{parentName:"tr",align:null},"The return value can be any number between 1 and 10.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"=RANDBETWEEN(10, 30, -1, 1, 15)"),(0,l.kt)("td",{parentName:"tr",align:null},"e.g.: 16"),(0,l.kt)("td",{parentName:"tr",align:null},"Initial value is 15 to which a random delta of -1, 0 or 1 is added. 1 in this case resulting in 16.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"=RANDBETWEEN(10, 30, 1, 3, 15)"),(0,l.kt)("td",{parentName:"tr",align:null},"e.g.: 16"),(0,l.kt)("td",{parentName:"tr",align:null},"Initial value is 15 to which a random delta of 1, 2 or 3 is added. 1 in this case resulting in 16.")))))}m.isMDXComponent=!0}}]);