(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{323:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var a=n(3),r=(n(0),n(375));const o={id:"glossary",title:"Glossary",sidebar_label:"Glossary"},s={unversionedId:"streamsheets/glossary",id:"streamsheets/glossary",isDocsHomePage:!1,title:"Glossary",description:"Authentication",source:"@site/docs/streamsheets/glossary.md",slug:"/streamsheets/glossary",permalink:"/latest/docs/streamsheets/glossary",version:"current",sidebar_label:"Glossary",sidebar:"someSidebar",previous:{title:"Other",permalink:"/latest/docs/streamsheets/other"},next:{title:"Add-Ons",permalink:"/latest/docs/streamsheets/addons"}},i=[],c={rightToc:i};function l({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Authentication",Object(r.b)("br",{parentName:"p"}),"\n","Authentication technology provides access control for systems by\nchecking to see if a user's credentials match the credentials in a\ndatabase of authorized users or in a data authentication server."),Object(r.b)("p",null,"AMQP",Object(r.b)("br",{parentName:"p"}),"\n","The Advanced Message Queuing Protocol (AMQP) is an open standard\napplication layer protocol for message-oriented middleware. The defining\nfeatures of AMQP are message orientation, queuing, routing (including\npoint-to-point and publish and subscribe), reliability and security."),Object(r.b)("p",null,"App",Object(r.b)("br",{parentName:"p"}),"\n","An App contains a set of Streamsheets and provides an outbox. The App\nexecutes the Streamsheets, when it runs. The behaviour of an App and the\nway it processes data streams is defined through its Streamsheets. "),Object(r.b)("p",null,"Base Topic",Object(r.b)("br",{parentName:"p"}),"\n","The Base Topic of an MQTT Connector sets the highest element in the\ntopic hierarchy. This entry is optional."),Object(r.b)("p",null,"Broker",Object(r.b)("br",{parentName:"p"}),"\n","Broker refers first of all to the general abstraction concept of a\nsoftware layer that mediates between heterogeneous application systems\nand data sources running on different platforms and connected via\nnetworks, thus enabling integration into cross-company and\ncross-organizational applications. In addition, the class of all\navailable software technologies that in any form contribute to the\nfulfillment of this function is also referred to as broker. Broker can\nbe divided into the different categories according to the underlying\nparadigm of integration (e.g. Object Request Broker)."),Object(r.b)("p",null,"Connector",Object(r.b)("br",{parentName:"p"}),"\n","Connectors serve the base definition of streams. They contain the\ninformation to connect to brokers, servers, clusters and other data\nspaces. This includes usually addresses and authentication information,\nsuch as username and password or certificates."),Object(r.b)("p",null,"Consumer",Object(r.b)("br",{parentName:"p"}),"\n","Consumers are the Stream resource to specify data streams which serve as\nthe input for Streamsheets, thus, they deliver messages to a sheet.\nYou must first choose a Connector and then add the missing information\nto complete the definition of a data stream."),Object(r.b)("p",null,"JSON",Object(r.b)("br",{parentName:"p"}),"\n","Their are a variety of formats used to represent data in a structured\nand standarized way. JSON is one of them and primarly used in the\nStreamsheets. It is a text-based data format that is the lightweight\nalternative to XML widely used on the Web for data interchange. JSON\nobjects are a hierarchy of key-value pairs. This means that any value,\ne.g. a number or a string, is identified by its key. You could think of\nthe key as the name or the title of its value. In order not to just have\na flat list of key-value pairs, these can be ordered and subsumed, e.g.\nin the Inbox picture the key-value pair \u201cTemperature: 34\u201d is subsumed\nunder the top-element \u201cData\u201d. See also\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/JSON"}),"https://en.wikipedia.org/wiki/JSON")),Object(r.b)("p",null,"Kafka",Object(r.b)("br",{parentName:"p"}),"\n","Apache Kafka is open source software that enables the storage and\nprocessing of data streams over a distributed streaming platform. It\nprovides various interfaces for writing data to Kafka clusters, reading\ndata, importing and exporting data to and from third-party systems."),Object(r.b)("p",null,"Microservice",Object(r.b)("br",{parentName:"p"}),"\n","The Streamsheet architecture is a loosely coupled Microservice that\nallows the agile automation of sensors, devices, actuators and\napplications and its post-processing operations in a spreadsheet manner.\nThis modular architecture allows the parallelization of services and the\ndecomposition of applications into smaller services. Each individual\nservice is independently, continuously deployable and easy to replace\nwithout harming the overall service architecture and thus beneficial to\nscalability."),Object(r.b)("p",null,"Mongo",Object(r.b)("br",{parentName:"p"}),"\n","MongoDB is an open source database that uses a document-oriented data\nmodel. Learn more about it on\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.mongodb.com/manual/introduction/"}),"https://docs.mongodb.com/manual/introduction/"),"."),Object(r.b)("p",null,"MQTT",Object(r.b)("br",{parentName:"p"}),"\n","MQTT (formerly the MQ Telemetry Transport) is a lightweight protocol\nthat\u2019s primarily designed for connecting power-constrained devices over\nlow-bandwidth networks. Though it existed for over a decade, the advent\nof M2M (machine to machine communications) and Internet of Things made\nit a popular protocol MQTT (=Message Queuing Telemetry Transport) is a\npublish and subscribe based messaging protocol. Data is published to a\nbroker. This broker handels all data points in realtime. Every message\nto the broker is directed to a certain topic. Subscribing to these\ntopics automatically will forward these messages to the subscribers\n(This is similar to the idea of twitter enabling hashtags to structure\ninformation). Topics can be structured in a hierarchy using a \u201c/\u201d to\nbetter organise different use cases. (e.g. streamsheets/example/test)"),Object(r.b)("p",null,"To get the full information go and visit their ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.github.com/en"}),"GitHub Wiki"),"."),Object(r.b)("p",null,"OPC UA",Object(r.b)("br",{parentName:"p"}),"\n","Open Platform Communications Unified Architecture (OPC UA) is a machine\nto machine communication protocol for industrial automation. The\ntransport of data as well as interfaces, security mechanisms and the\nsemantic structure of the data are specified. OPC UA standardizes\nindustrial connectivity and ensures interoperability between products\nfrom different manufacturers. Transmitted machine data can be, for\nexample, measured values, sensor data, controlled variables or control\ninstructions."),Object(r.b)("p",null,"Payload",Object(r.b)("br",{parentName:"p"}),"\n","The payload is part of the transmitted data within the actual message.\nThe payload contains the actual data of the message and is separated\nfrom the metadata, that represents the protocol overhead. Payload can be\nany sensor, actuator devices or application data sent to or received by\nthe Streamsheet via the corresponding topic. In order to integrate the\nstream data (payload) into your Streamsheet operations the Streamsheet\nmust subscribe to a feeder. The payload content always uses JSON to\nstructure its content."),Object(r.b)("p",null,"Port",Object(r.b)("br",{parentName:"p"}),"\n","All data transmitted over the internet is sent and received using a\nspecific set of commands, also known as a protocol. Each protocol is\nassigned a specific port number. For example, all website data\ntransferred over HTTP uses port 80. Data sent over HTTPS uses port 443."),Object(r.b)("p",null,"POP3",Object(r.b)("br",{parentName:"p"}),"\n","In computing, the Post Office Protocol (POP) is an application-layer\nInternet standard protocol used by e-mail clients to retrieve e-mail\nfrom a mail server."),Object(r.b)("p",null,"Producer",Object(r.b)("br",{parentName:"p"}),"\n","Producers are very similar to Consumers but instead of defining an\ninput data stream, they define an outgoing data stream."),Object(r.b)("p",null,"Provider",Object(r.b)("br",{parentName:"p"}),"\n","A provider defines the protocol and technology that is used to access a\ndata source. A provider is needed to define a Connector in order to\ndefine the access technology needed to communicate with the data source."),Object(r.b)("p",null,"Publish and Subscribe",Object(r.b)("br",{parentName:"p"}),"\n","Publish and Subscribe is a event-driven message pattern where publishers\nare the senders of messages and subscribers are the receivers. Thereby\nthe message is not programmed to be sent to a specific receiver\n(subscriber). The message is published in a general pattern without\nknowing the actual receivers. Moreover, all messages published on a\ntopic can be received by all interested subscribers of a topic.\nAnalogously the subscriber filters its messages of interests without the\nknowledge of the associated publisher. In contrast to message queues\nwhich batch messages until they are retrieved, message topics forward\nmessages with no or little queuing, and immediately publish it to all\nsubscribers. Thus, the Streamsheet architecture uses a topic-based\nfilter method. The subscriber receives all messages addressed to the\nsubscribed topic and filters the total number of messages to the\nrelevant subset of messages. The subscription of a topic within a\nstreamsheet can be configured by selecting a feeder subscribing to a\ntopic. On the other the StreamSheet provides functions to publish data."),Object(r.b)("p",null,"REST",Object(r.b)("br",{parentName:"p"}),"\n","Representational State Transfer (REST) is a software architectural style\nthat defines a set of constraints to be used for creating Web services.\nWeb services that conform to the REST architectural style, called\nRESTful Web services (RWS), provide interoperability between computer\nsystems on the Internet"),Object(r.b)("p",null,"REST URL",Object(r.b)("br",{parentName:"p"}),"\n","Every REST Service has a unique adress, the Uniform Resource Locator\n(URL). This offeres a consistent adressability."),Object(r.b)("p",null,"SASL",Object(r.b)("br",{parentName:"p"}),"\n","Simple Authentication and Security Layer (SASL) is a framework for\nauthentication and data security in Internet protocols. It decouples\nauthentication mechanisms from application protocols, in theory allowing\nany authentication mechanism supported by SASL to be used in any\napplication protocol that uses SASL. Application protocols that support\nSASL typically also support Transport Layer Security (TLS) to\ncomplement the services offered by SASL."),Object(r.b)("p",null,"SMTP",Object(r.b)("br",{parentName:"p"}),"\n","The Simple Mail Transfer Protocol (SMTP) is a communication protocol for\nelectronic mail transmission. User-level email clients typically use\nSMTP only for sending messages to a mail server for relaying, typically\nsubmit outgoing email to the mail server on port 587 or 465."),Object(r.b)("p",null,"STARTTLS",Object(r.b)("br",{parentName:"p"}),"\n",'Opportunistic TLS (Transport Layer Security) refers to extensions in\nplain text communication protocols, which offer a way to upgrade a plain\ntext connection to an encrypted (TLS or SSL) connection instead of using\na separate port for encrypted communication. Several protocols use a\ncommand named "STARTTLS" for this purpose. It is primarily intended as a\ncountermeasure to passive monitoring.'),Object(r.b)("p",null,"Streamsheet",Object(r.b)("br",{parentName:"p"}),"\n","A Streamsheet is a spreadsheet extended by capabilities to easily allow\nreal-time data stream processing. It allows to automate and dynamically\ncalculate sensor, actuator, device and application data within a data\nstream architecture. The streamsheet subscribes a specific data source,\nreceives event data, analyses, processes or forwards this data by\npublishing new stream data or messages on the same or different data\nsource. Multiple streamsheets within one app can be used to execute a\nsequential or parallel order of stream processes continuously and in\nreal-time. A streamsheet can be compared to a microservice within a\nstream based architecture."),Object(r.b)("p",null,"TLS",Object(r.b)("br",{parentName:"p"}),"\n","Transport Layer Security (TLS), and its now-deprecated predecessor,\nSecure Sockets Layer (SSL), are cryptographic protocols designed to\nprovide communications security over a computer network."),Object(r.b)("p",null,"URL",Object(r.b)("br",{parentName:"p"}),"\n","Uniform Resource Locator (URL) identifies and localizes a resource\nwithin a network. URLs are a sub group of the Uniform Resource\nIdentifiers (URI) and are the most common."),Object(r.b)("p",null,"QoS",Object(r.b)("br",{parentName:"p"}),"\n","The Quality of Service (QoS) level is an agreement between the sender of\na message and the receiver of a message that defines the guarantee of\ndelivery for a specific message. It depends on the used protocol.",Object(r.b)("br",{parentName:"p"}),"\n","E.g. there are 3 QoS levels in MQTT: At most once (0) At least once (1)\nExactly once (2)"),Object(r.b)("p",null,"Documents",Object(r.b)("br",{parentName:"p"}),"\n","MongoDB stores data records as BSON documents. BSON is a binary\nrepresentation of JSON documents, though it contains more data types\nthan JSON. Just use the required JSON Range."),Object(r.b)("p",null,"Collections",Object(r.b)("br",{parentName:"p"}),"\n","MongoDB stores documents in collections. Collections are analogous to\ntables in relational databases. If a collection does not exist, MongoDB\ncreates the collection when you first store data for that collection."),Object(r.b)("p",null,"Directory",Object(r.b)("br",{parentName:"p"}),"\n","A directory is a location for storing files on your computer. So just\nwrite the path to your folder with the required files."),Object(r.b)("p",null,"Command",Object(r.b)("br",{parentName:"p"}),"\n","Any command allowed in KSQL table. For further information click\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.confluent.io/current/ksql/docs/index.html"}),"here"),"."),Object(r.b)("p",null,"Timeout",Object(r.b)("br",{parentName:"p"}),"\n","The time to wait for an answer."),Object(r.b)("p",null,"Query",Object(r.b)("br",{parentName:"p"}),"\n","Query stands for a specific query to a database. Use a JSON Range in the\nsheet to define the Query."),Object(r.b)("p",null,"Aggregation JSON",Object(r.b)("br",{parentName:"p"}),"\n","Aggregation operations process data records and return computed results.\nAggregation operations group values from multiple documents together,\nand can perform a variety of operations on the grouped data to return a\nsingle result. Define an aggregation using a JSON cell range."),Object(r.b)("p",null,"Result Keys",Object(r.b)("br",{parentName:"p"}),"\n","You can filter the query results by using specified JSON Keys."),Object(r.b)("p",null,"Page Size",Object(r.b)("br",{parentName:"p"}),"\n","Number of Documents to return per page."),Object(r.b)("p",null,"Sort",Object(r.b)("br",{parentName:"p"}),"\n","Sort query result ascending or descending. Use 1 and -1 to sort by\ncreation time, or use a JSON cell range."),Object(r.b)("p",null,"User Properties",Object(r.b)("br",{parentName:"p"}),"\n","User properties on ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../functions/streams/mqttpublish"}),"MQTT.PUBLISH")," are forwarded with the\nmessage and are defined by the client applications. They are forwarded\nby the server to the receiver of the message. Use it to define the\nMetadata!"),Object(r.b)("p",null,"Application Properties",Object(r.b)("br",{parentName:"p"}),"\n","The application-properties section is a part of the bare message used\nfor structured application data. Intermediaries can use the data within\nthis structure for the purposes of filtering or routing. The keys of\nthis map are restricted to be of type string (which excludes the\npossibility of a null key) and the values are restricted to be of simple\ntypes only, that is, excluding map, list, and array types. Use it to\ndefine the Metadata! Click\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_8.0.0/com.ibm.mq.dev.doc/q125040_.htm"}),"here"),"\nfor a nice overview."),Object(r.b)("p",null,"Node",Object(r.b)("br",{parentName:"p"}),"\n","In OPC UA, every entity in the address space is a node. To uniquely\nidentify a Node, each node has a NodeId."),Object(r.b)("p",null,"Node Value",Object(r.b)("br",{parentName:"p"}),"\n","The Value from the Node you want to write."),Object(r.b)("p",null,"Status Code",Object(r.b)("br",{parentName:"p"}),"\n",'REST APIs use the Status-Line part of an HTTP response message to inform\nclients of their request\u2019s overarching result. HTTP defines forty\nstandard status codes that can be used to convey the results of a\nclient\u2019s request. E.g. Code: 200 = "OK"'),Object(r.b)("p",null,"Data Series",Object(r.b)("br",{parentName:"p"}),"\n","Successive data which all belong to one type e.g. names."),Object(r.b)("p",null,"Data Point",Object(r.b)("br",{parentName:"p"}),"\n","A Data Point is one point out of a whole Data series."),Object(r.b)("p",null,"Series Direction",Object(r.b)("br",{parentName:"p"}),"\n","Specifies whether the data series is horizontal or vertical (rows or\ncolumns)."),Object(r.b)("p",null,"Series Labels",Object(r.b)("br",{parentName:"p"}),"\n","Specifies if and where the name of the data series is given. Its also\ndepends on the the Series Direction."),Object(r.b)("p",null,"Category Labels",Object(r.b)("br",{parentName:"p"}),"\n","Specifies if and where the name of the category is given. Its also\ndepends on the the Series Direction."),Object(r.b)("p",null,"Influx",Object(r.b)("br",{parentName:"p"}),"\n","InfluxDB is an open-source time series database (TSDB) developed by\nInfluxData. It is written in Go and optimized for fast,\nhigh-availability storage and retrieval of time series data in fields\nsuch as operations monitoring, application metrics, Internet of Things\nsensor data, and real-time analytics. Learn more about it on\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.influxdata.com/influxdb/v1.7/"}),"https://docs.influxdata.com/influxdb/v1.7/"),"."),Object(r.b)("p",null,"Line Protocol",Object(r.b)("br",{parentName:"p"}),"\n","The InfluxDB line protocol is a text based format for writing\npoints to the database. Points must be in line protocol format for\nInfluxDB to successfully parse and write points. A single line of text\nin line protocol format represents one data point in InfluxDB. It\ninforms InfluxDB of the point\u2019s measurement, tag set, field set, and\ntimestamp. Tag set and timestamp are optional. Learn more about it\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/"}),"here"),"."))}l.isMDXComponent=!0},375:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(s,".").concat(d)]||b[d]||u[d]||o;return n?r.a.createElement(m,i(i({ref:t},l),{},{components:n})):r.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);