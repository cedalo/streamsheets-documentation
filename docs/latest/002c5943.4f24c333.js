(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{409:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var O=r.a.createContext({}),o=function(e){var t=r.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(O.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,O=i(e,["components","mdxType","originalType","parentName"]),p=o(a),u=n,m=p["".concat(l,".").concat(u)]||p[u]||j[u]||b;return a?r.a.createElement(m,c(c({ref:t},O),{},{components:a})):r.a.createElement(m,c({ref:t},O))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var O=2;O<b;O++)l[O]=a[O];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},61:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),b=(a(0),a(409)),l={},c={unversionedId:"streamsheets/functions/statistical/averageif",id:"streamsheets/functions/statistical/averageif",isDocsHomePage:!1,title:"averageif",description:"AVERAGEIF",source:"@site/docs/streamsheets/functions/statistical/averageif.md",slug:"/streamsheets/functions/statistical/averageif",permalink:"/latest/docs/streamsheets/functions/statistical/averageif",version:"current"},i=[],O={rightToc:i};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"averageif"},"AVERAGEIF"),Object(b.b)("p",null,"Returns the average of all cell values in a cell-range which meet a\ngiven criterion. To specify multiple criteria please use\n",Object(b.b)("inlineCode",{parentName:"p"},"AVERAGEIFS <averageifs>"),"."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Syntax")),Object(b.b)("p",null,"=AVERAGEIF(DataRange, Criterion, ","[","AverageRange","]",")"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"DataRange"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Cell-range to calculate average for.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Criterion"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The criterion each cell has to fulfill.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AverageRange"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional. If given these cells are used to calculate average. If ommitted DataRange is used.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Return Value")),Object(b.b)("p",null,"The average over all cell values which meet criterion."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Example")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"B")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100000"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"200")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"200000"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"400")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"300000"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"400")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"North"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"600")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"East"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"800")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"South"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1000")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Function"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Result"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Comment"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AVERAGEIF(",Object(b.b)("span",{class:"blue"},"A1:A3"),", ",Object(b.b)("span",{class:"orange"},'"',"<",'250000"'),")"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"150000"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Only cells A1 and A2 match given criterion")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AVERAGEIF(",Object(b.b)("span",{class:"blue"},"A1:A6"),", ",Object(b.b)("span",{class:"orange"},'"=',"*",'th"'),", ",Object(b.b)("span",{class:"green"},"B1:B6"),")"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"800"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'Take cells from colum A which end with "th" and average corresponding values from column B')))))}o.isMDXComponent=!0}}]);