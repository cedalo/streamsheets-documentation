(window.webpackJsonp=window.webpackJsonp||[]).push([[279],{346:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),i=(n(0),n(376)),o={},s={unversionedId:"streamsheets/tutorials/messages",id:"streamsheets/tutorials/messages",isDocsHomePage:!1,title:"messages",description:"Messages",source:"@site/docs\\streamsheets\\tutorials\\messages.md",slug:"/streamsheets/tutorials/messages",permalink:"/latest/docs/streamsheets/tutorials/messages",version:"current"},l=[{value:"Reading",id:"reading",children:[]},{value:"Publishing",id:"publishing",children:[{value:"PUBLISHMQTT",id:"publishmqtt",children:[]},{value:"KAFKAPUBLISH",id:"kafkapublish",children:[]},{value:"RESTREQUEST",id:"restrequest",children:[]},{value:"RESTRESPOND",id:"restrespond",children:[]},{value:"SENDMAIL",id:"sendmail",children:[]},{value:"WRITEFILE",id:"writefile",children:[]},{value:"MONGO",id:"mongo",children:[]}]},{value:"Writing",id:"writing",children:[]}],c={rightToc:l};function u(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"messages"},"Messages"),Object(i.b)("p",null,"To actually configure a message flow it is essential to understand how\nto recieve and send data using the grid. In this tutorial I will show\nyou how to use messages from your Inbox as actual input in the grid and\nhow to sent messages to any device you need. First of all lets begin\nwith reading a message."),Object(i.b)("h2",{id:"reading"},"Reading"),Object(i.b)("p",null,"Reading the Inbox is very simple. Just click on the object of your\npayload you want to work with and drag & drop it onto a cell of your\nchoice. This creates a READ() function on the grid. Depending on which\nobject of your payload you dragged all objects included will be dragged\nto the grid as well. There are two ways to represent the payload\nhorizontal and vertical. To change the direction press ctrl while\ndragging. As an alternative you are always welcome to type the READ()\nfunction by yourself. This will have the same effect."),Object(i.b)("p",null,Object(i.b)("img",{alt:"Drag",src:n(509).default})," ",Object(i.b)("img",{alt:"Drop",src:n(510).default})),Object(i.b)("p",null,'In a running machine the resulting READ() function will update itself\nwith every incoming message, given that it consists out of the same\npayload structure. If a value is not updated by a new message, the value\neither stays as it was or turns into "',"#",'NA". This can be configured\nwithin the READ() function parameter.'),Object(i.b)("h2",{id:"publishing"},"Publishing"),Object(i.b)("p",null,"To forward your data it is neccessary to create a pubishing function.\nFor each API there is a different function with different parameters.\nAll of these are gathered in our Function Wizard. The wizard provides a\nsimple form to insert the required information, so your data arrives at\nthe right adress."),Object(i.b)("p",null,"You find the Wizard by selecting a cell and clicking on the marked icon."),Object(i.b)("p",null,Object(i.b)("img",{alt:"FEinf\xfcgen",src:n(511).default})),Object(i.b)("h3",{id:"publishmqtt"},"PUBLISHMQTT"),Object(i.b)("p",null,"PUBLISHMQTT publishes a message via MQTT."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Streams:")," You need to select the Producer with the desired settings.\nThey set the connection and Base Topic for your message."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Message:")," Define your Message using a JSON, number or a string value."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Topic:")," Define the Topic you want to publish your data to. It will\nalways extend the path given by the Connector or Producer of your\nchoice."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Quality of Service:"),' Decide how the message will be send using an\ninteger between 0 and 2: "At most once" 0, "At least once" 1 and\n"Exactly once" 2.'),Object(i.b)("p",null,Object(i.b)("img",{alt:"FWizard",src:n(512).default})),Object(i.b)("h3",{id:"kafkapublish"},"KAFKAPUBLISH"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Streams:")," You need to select the Producer with the desired settings.\nThey set the connection and Base Topic for your message."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Message:")," Define your Message using a JSON, number or a string value."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Topic:")," Define the Topic you want to publish your data to. It will\nalways extend the path given by the Connector or Producer of your\nchoice."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Quality of Service:"),' Decide how the message will be send using an\ninteger between 0 and 2: "At most once" 0, "At least once" 1 and\n"Exactly once" 2.'),Object(i.b)("h3",{id:"restrequest"},"RESTREQUEST"),Object(i.b)("h3",{id:"restrespond"},"RESTRESPOND"),Object(i.b)("h3",{id:"sendmail"},"SENDMAIL"),Object(i.b)("h3",{id:"writefile"},"WRITEFILE"),Object(i.b)("h3",{id:"mongo"},"MONGO"),Object(i.b)("h2",{id:"writing"},"Writing"),Object(i.b)("p",null,"Another way to define a message is in the Outbox. Instead of publishing\ndata directly via a function, the Outbox can be used to collect data and\ndefine Messages. These Messages can be customized in their JSON\nstructure to fit the target adress."),Object(i.b)("p",null,"To create a new message either use the WRITE() function and declare all\nobjects directly or choose to predefine the structure and keys in the\npayload."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"WRITE():")),Object(i.b)("p",null,"To use the WRITE() function it is neccessary to understand each\nindivdual Paramter. The WRITE() function is composed out of the\nfollowing:"),Object(i.b)("p",null,"=WRITE(Key, Value, Type)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Key"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A key to a data item, that should be written. The key is usually created by using the OUTBOXDATA utility function. The key consists of the path to the item within the JSON object.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Value"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Value to assign to key.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Type of Value. Allowed types are String, Number, Boolean, Array, Dictionary. The type defines the color of the cell.")))),Object(i.b)("p",null,'As an example we could write down a customer with the last name "Maier"\nin the Outbox. This requires the following paramter:'),Object(i.b)("p",null,'=WRITE(OUTBOXDATA("Message", "Customer", "Name"), "Maier", "String")'),Object(i.b)("p",null,'The Key describes, where in the hirachy of our object we want to place\nthe value. In this case we navigate from the Message name "Message" to\nthe key element "Customer" further to the key element "Name". Our value\nis the actual name "Maier". Finally we have to decalre what kind of\nvalue type "Maier" is. In our case it is a "String".'),Object(i.b)("p",null,"And this is what it would look like:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Write",src:n(513).default})),Object(i.b)("p",null,"In A12 you can see the WRITE() function in the grid, on the right side\nthe created Outbox Message and Payload and on the top theWRITE()\nfunction is represented."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Sidenote: This state represents the UI after one calculation cycle. The\nOutbox Message is only created, if the function is calculated once ore\nmore.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Payload:")),Object(i.b)("p",null,"To predefine the structure double click in the Outbox payload and a new\nobject will appear. Double click again to create another."),Object(i.b)("p",null,Object(i.b)("img",{alt:"OPayload",src:n(514).default})),Object(i.b)("p",null,"To change the hirachy of an object select it and press TAB to move it to\nthe right or SHIFT + TAB to move it to the left."),Object(i.b)("p",null,Object(i.b)("img",{alt:"OPayload3",src:n(515).default})),Object(i.b)("p",null,"Rename the Keys by double clicking the object. To use your predefined\nstructure in the grid simply drag & drop it."),Object(i.b)("p",null,Object(i.b)("img",{alt:"OPayload4",src:n(516).default})),Object(i.b)("p",null,"Similar to the payload of the Inbox drag & drop creates a WRITE()\nfunction in the grid."),Object(i.b)("p",null,Object(i.b)("img",{alt:"OPayload5",src:n(517).default})),Object(i.b)("p",null,"The resulting message values will change from Tick to Tick, if the\nvalues in the WRITE() function are updated."),Object(i.b)("p",null,"Now the Message is ready to get published. Again select a cell and open\nthe Function Wizward to publish the Message in the Outbox. Use the\nfunction OUTBOX() or OUTBOXDATA() to either publish the whole or only\npart of the Outbox message."))}u.isMDXComponent=!0},376:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(n),p=a,h=b["".concat(o,".").concat(p)]||b[p]||d[p]||i;return n?r.a.createElement(h,s(s({ref:t},c),{},{components:n})):r.a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},509:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/PayloadDrag-15e151d892a81252141f3d13787faac5.png"},510:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/PayloadDrop-309d0f43d41d0c3456294c4533e35a7c.png"},511:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/PublishWizard-6d8ddbcca7717bb431877f4292e55e17.jpg"},512:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/FunctionWizard-d414e21589b724ff843dce2fd544bb1e.jpg"},513:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/Write-d821c6257fa79555280aabcc54be6a17.jpg"},514:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/OutboxPayload-f5767d47ad940bb11525694a01854a98.jpg"},515:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/OutboxPayload3-4ecceb10153386bd1b6d3d042253fdde.jpg"},516:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/OPayload4-db9bc9a085f5f222ad86a4b2c96ab04b.jpg"},517:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/OutboxPayload5-58a7e55dd5418c3fb4aa88216e433e13.jpg"}}]);